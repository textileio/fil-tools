syntax = "proto3";
package net.rpc;

option go_package = "github.com/textileio/powergate/net/rpc";

message PeerAddrInfo {
    string id = 1;
    repeated string addrs = 2;
}

message Location {
    string country = 1;
    double latitude = 2;
    double longitude = 3;
}

message PeerInfo {
    PeerAddrInfo addr_info = 1;
    Location location = 2;
}

enum Connectedness {
    CONNECTEDNESS_UNSPECIFIED = 0;
    CONNECTEDNESS_NOT_CONNECTED = 1;
    CONNECTEDNESS_CONNECTED = 2;
    CONNECTEDNESS_CAN_CONNECT = 3;
    CONNECTEDNESS_CANNOT_CONNECT = 4;
    CONNECTEDNESS_ERROR = 5;
}

message ListenAddrRequest {
}

message ListenAddrResponse {
    PeerAddrInfo addr_info = 1;
}

message PeersRequest {
}

message PeersResponse {
    repeated PeerInfo peers = 1;
}

message FindPeerRequest {
    string peer_id = 1;
}

message FindPeerResponse {
    PeerInfo peer_info = 1;
}

message ConnectednessRequest {
    string peer_id = 1;
}

message ConnectednessResponse {
    Connectedness connectedness = 1;
}

service RPCService {
    rpc ListenAddr(ListenAddrRequest) returns (ListenAddrResponse) {}
    rpc Peers(PeersRequest) returns (PeersResponse) {}
    rpc FindPeer(FindPeerRequest) returns (FindPeerResponse) {}
    rpc Connectedness(ConnectednessRequest) returns (ConnectednessResponse) {}
}
