syntax = "proto3";
package proto.admin.v1;

import "ffs/rpc/rpc.proto";

option go_package = "github.com/textileio/powergate/proto/admin/v1";

// Wallet
message NewAddressRequest {
  string type = 1;
}

message NewAddressResponse {
  string address = 1;
}

message ListAddressesRequest {
}

message ListAddressesResponse {
  repeated string addresses = 1;
}

message SendFilRequest {
  string from = 1;
  string to = 2;	
  int64 amount = 3;
}

message SendFilResponse {
}

// Instances

message AuthEntry {
  string id = 1;
  string token = 2;
}

message CreateStorageProfileRequest {
}

message CreateStorageProfileResponse {
  AuthEntry auth_entry = 1;
}

message ListStorageProfilesRequest {
}

message ListStorageProfilesResponse {
  repeated AuthEntry auth_entries = 1;
}

// Jobs

message QueuedStorageJobsRequest {
  string instance_id = 1;
  repeated string cids = 2;
}

message QueuedStorageJobsResponse {
  repeated ffs.rpc.Job storage_jobs = 1;
}

message ExecutingStorageJobsRequest {
  string instance_id = 1;
  repeated string cids = 2;
}

message ExecutingStorageJobsResponse {
  repeated ffs.rpc.Job storage_jobs = 1;
}

message LatestFinalStorageJobsRequest {
  string instance_id = 1;
  repeated string cids = 2;
}

message LatestFinalStorageJobsResponse {
  repeated ffs.rpc.Job storage_jobs = 1;
}

message LatestSuccessfulStorageJobsRequest {
  string instance_id = 1;
  repeated string cids = 2;
}

message LatestSuccessfulStorageJobsResponse {
  repeated ffs.rpc.Job storage_jobs = 1;
}

message StorageJobsSummaryRequest {
  string instance_id = 1;
  repeated string cids = 2;
}

message StorageJobsSummaryResponse {
  ffs.rpc.JobCounts job_counts = 1;
  repeated ffs.rpc.Job queued_storage_jobs = 2;
  repeated ffs.rpc.Job executing_storage_jobs = 3;
  repeated ffs.rpc.Job latest_final_storage_jobs = 4;
  repeated ffs.rpc.Job latest_successful_storage_jobs = 5;
}

service PowergateAdminService {
  // Wallet
  rpc NewAddress(NewAddressRequest) returns (NewAddressResponse) {}
  rpc ListAddresses(ListAddressesRequest) returns (ListAddressesResponse) {}
  rpc SendFil(SendFilRequest) returns (SendFilResponse) {}

  // Instances
  rpc CreateStorageProfile(CreateStorageProfileRequest) returns (CreateStorageProfileResponse) {}
  rpc ListStorageProfiles(ListStorageProfilesRequest) returns (ListStorageProfilesResponse) {}

  // Jobs
  rpc QueuedStorageJobs(QueuedStorageJobsRequest) returns (QueuedStorageJobsResponse) {}
  rpc ExecutingStorageJobs(ExecutingStorageJobsRequest) returns (ExecutingStorageJobsResponse) {}
  rpc LatestFinalStorageJobs(LatestFinalStorageJobsRequest) returns (LatestFinalStorageJobsResponse) {}
  rpc LatestSuccessfulStorageJobs(LatestSuccessfulStorageJobsRequest) returns (LatestSuccessfulStorageJobsResponse) {}
  rpc StorageJobsSummary(StorageJobsSummaryRequest) returns (StorageJobsSummaryResponse) {}
}