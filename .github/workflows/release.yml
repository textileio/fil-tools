name: Release
on:
  release:
    types: [created]
jobs:
  publish_docker:
    name: Publish Docker Compose Setup
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v1
      - name: Get latest tag
        id: latesttag
        uses: "WyriHaximus/github-action-get-previous-tag@master"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - name: Update powergate image version
        run: sed -i.bak 's/latest/${{steps.latesttag.outputs.tag}}/g' docker/powergate-image.yaml
      - name: Update Makefile
        run: sed -i.bak 's/powergate-build-context/powergate-image/g' docker/Makefile
      - name: Remove sed backups
        run: rm -rf docker/*.bak
      - name: Create archive
        run: |
          mv docker powergate-docker
          zip -r powergate-docker.zip powergate-docker
      - name: Upload artifacts to release
        uses: AButler/upload-release-assets@v2.0
        with:
          files: 'powergate-docker.zip'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
  publish_grpc_lib:
    name: Publish JS gRPC bindings
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v1
      - name: Get latest tag
        id: latesttag
        uses: "WyriHaximus/github-action-get-previous-tag@master"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - name: Install build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential
      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Install protoc
        uses: arduino/setup-protoc@master
        with:
          version: '3.11.2'
      - name: Make version number
        id: makeversion
        uses: frabert/replace-string-action@v1.1
        with:
          pattern: 'v'
          string: ${{steps.latesttag.outputs.tag}}
          replace-with: ''
      - name: Generate JS gRPC bindings
        run: |
          ./scripts/gen-js-protos.sh  ${{steps.makeversion.outputs.replaced}} . ./js-grpc
      - name: Publish JS gRPC bindings
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: |
          npm publish --access=public
        working-directory: ./js-grpc
