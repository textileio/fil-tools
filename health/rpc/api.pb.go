// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Status int32

const (
	Status_Ok       Status = 0
	Status_Degraded Status = 1
	Status_Error    Status = 2
)

var Status_name = map[int32]string{
	0: "Ok",
	1: "Degraded",
	2: "Error",
}

var Status_value = map[string]int32{
	"Ok":       0,
	"Degraded": 1,
	"Error":    2,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

type CheckRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckRequest) Reset()         { *m = CheckRequest{} }
func (m *CheckRequest) String() string { return proto.CompactTextString(m) }
func (*CheckRequest) ProtoMessage()    {}
func (*CheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *CheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckRequest.Unmarshal(m, b)
}
func (m *CheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckRequest.Marshal(b, m, deterministic)
}
func (m *CheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckRequest.Merge(m, src)
}
func (m *CheckRequest) XXX_Size() int {
	return xxx_messageInfo_CheckRequest.Size(m)
}
func (m *CheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckRequest proto.InternalMessageInfo

type CheckReply struct {
	Status               Status   `protobuf:"varint,1,opt,name=status,proto3,enum=health.rpc.Status" json:"status,omitempty"`
	Messages             []string `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckReply) Reset()         { *m = CheckReply{} }
func (m *CheckReply) String() string { return proto.CompactTextString(m) }
func (*CheckReply) ProtoMessage()    {}
func (*CheckReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *CheckReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckReply.Unmarshal(m, b)
}
func (m *CheckReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckReply.Marshal(b, m, deterministic)
}
func (m *CheckReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckReply.Merge(m, src)
}
func (m *CheckReply) XXX_Size() int {
	return xxx_messageInfo_CheckReply.Size(m)
}
func (m *CheckReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckReply.DiscardUnknown(m)
}

var xxx_messageInfo_CheckReply proto.InternalMessageInfo

func (m *CheckReply) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_Ok
}

func (m *CheckReply) GetMessages() []string {
	if m != nil {
		return m.Messages
	}
	return nil
}

func init() {
	proto.RegisterEnum("health.rpc.Status", Status_name, Status_value)
	proto.RegisterType((*CheckRequest)(nil), "health.rpc.CheckRequest")
	proto.RegisterType((*CheckReply)(nil), "health.rpc.CheckReply")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 238 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x9b, 0x84, 0x2e, 0xcd, 0x50, 0x6a, 0x98, 0x83, 0x84, 0x5e, 0x2c, 0x39, 0xd5, 0x1e,
	0xf6, 0x50, 0x8f, 0x1e, 0x84, 0x6a, 0xc0, 0x9b, 0x25, 0xe6, 0xe4, 0x6d, 0x4d, 0x87, 0x24, 0x34,
	0xb2, 0xeb, 0xec, 0x14, 0xed, 0xdf, 0xf1, 0x97, 0x0a, 0x69, 0xd5, 0x1c, 0x3c, 0xbe, 0x7d, 0xdf,
	0xf2, 0x3d, 0x06, 0x62, 0xe3, 0x5a, 0xed, 0xd8, 0x8a, 0x45, 0x68, 0xc8, 0x74, 0xd2, 0x68, 0x76,
	0x55, 0x36, 0x83, 0xe9, 0x7d, 0x43, 0xd5, 0xbe, 0xa0, 0xf7, 0x03, 0x79, 0xc9, 0x4a, 0x80, 0x73,
	0x76, 0xdd, 0x11, 0x57, 0xa0, 0xbc, 0x18, 0x39, 0xf8, 0x34, 0x58, 0x04, 0xcb, 0xd9, 0x1a, 0xf5,
	0xdf, 0x57, 0xfd, 0xdc, 0x37, 0xc5, 0x99, 0xc0, 0x39, 0x4c, 0xde, 0xc8, 0x7b, 0x53, 0x93, 0x4f,
	0xc3, 0x45, 0xb4, 0x8c, 0x8b, 0xdf, 0xbc, 0xba, 0x06, 0x75, 0xa2, 0x51, 0x41, 0xf8, 0xb4, 0x4f,
	0x46, 0x38, 0x85, 0xc9, 0x03, 0xd5, 0x6c, 0x76, 0xb4, 0x4b, 0x02, 0x8c, 0x61, 0x9c, 0x33, 0x5b,
	0x4e, 0xc2, 0x75, 0x0e, 0xea, 0xb1, 0x77, 0xe0, 0x2d, 0x8c, 0xfb, 0x29, 0x98, 0x0e, 0xad, 0xc3,
	0xb5, 0xf3, 0xcb, 0x7f, 0x1a, 0xd7, 0x1d, 0xb3, 0xd1, 0xe6, 0x0e, 0xae, 0x5a, 0xab, 0x85, 0x3e,
	0xa5, 0xed, 0x48, 0x3b, 0xfb, 0x41, 0x5c, 0x1b, 0xa1, 0x01, 0xbf, 0xb9, 0xd8, 0xfe, 0xbc, 0x9e,
	0x84, 0xdb, 0xe0, 0x25, 0x62, 0x57, 0x7d, 0x85, 0x51, 0x59, 0xe6, 0xaf, 0xaa, 0xbf, 0xd5, 0xcd,
	0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x88, 0x42, 0xc2, 0x21, 0x38, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HealthClient is the client API for Health service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HealthClient interface {
	Check(ctx context.Context, in *CheckRequest, opts ...grpc.CallOption) (*CheckReply, error)
}

type healthClient struct {
	cc *grpc.ClientConn
}

func NewHealthClient(cc *grpc.ClientConn) HealthClient {
	return &healthClient{cc}
}

func (c *healthClient) Check(ctx context.Context, in *CheckRequest, opts ...grpc.CallOption) (*CheckReply, error) {
	out := new(CheckReply)
	err := c.cc.Invoke(ctx, "/health.rpc.Health/Check", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HealthServer is the server API for Health service.
type HealthServer interface {
	Check(context.Context, *CheckRequest) (*CheckReply, error)
}

// UnimplementedHealthServer can be embedded to have forward compatible implementations.
type UnimplementedHealthServer struct {
}

func (*UnimplementedHealthServer) Check(ctx context.Context, req *CheckRequest) (*CheckReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Check not implemented")
}

func RegisterHealthServer(s *grpc.Server, srv HealthServer) {
	s.RegisterService(&_Health_serviceDesc, srv)
}

func _Health_Check_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HealthServer).Check(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/health.rpc.Health/Check",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HealthServer).Check(ctx, req.(*CheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Health_serviceDesc = grpc.ServiceDesc{
	ServiceName: "health.rpc.Health",
	HandlerType: (*HealthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Check",
			Handler:    _Health_Check_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}
