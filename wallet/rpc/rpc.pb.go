// Code generated by protoc-gen-go. DO NOT EDIT.
// source: wallet/rpc/rpc.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NewAddressRequest struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewAddressRequest) Reset()         { *m = NewAddressRequest{} }
func (m *NewAddressRequest) String() string { return proto.CompactTextString(m) }
func (*NewAddressRequest) ProtoMessage()    {}
func (*NewAddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_30995f93a82f00d2, []int{0}
}

func (m *NewAddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewAddressRequest.Unmarshal(m, b)
}
func (m *NewAddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewAddressRequest.Marshal(b, m, deterministic)
}
func (m *NewAddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewAddressRequest.Merge(m, src)
}
func (m *NewAddressRequest) XXX_Size() int {
	return xxx_messageInfo_NewAddressRequest.Size(m)
}
func (m *NewAddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewAddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewAddressRequest proto.InternalMessageInfo

func (m *NewAddressRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type NewAddressReply struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewAddressReply) Reset()         { *m = NewAddressReply{} }
func (m *NewAddressReply) String() string { return proto.CompactTextString(m) }
func (*NewAddressReply) ProtoMessage()    {}
func (*NewAddressReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_30995f93a82f00d2, []int{1}
}

func (m *NewAddressReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewAddressReply.Unmarshal(m, b)
}
func (m *NewAddressReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewAddressReply.Marshal(b, m, deterministic)
}
func (m *NewAddressReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewAddressReply.Merge(m, src)
}
func (m *NewAddressReply) XXX_Size() int {
	return xxx_messageInfo_NewAddressReply.Size(m)
}
func (m *NewAddressReply) XXX_DiscardUnknown() {
	xxx_messageInfo_NewAddressReply.DiscardUnknown(m)
}

var xxx_messageInfo_NewAddressReply proto.InternalMessageInfo

func (m *NewAddressReply) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type WalletBalanceRequest struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WalletBalanceRequest) Reset()         { *m = WalletBalanceRequest{} }
func (m *WalletBalanceRequest) String() string { return proto.CompactTextString(m) }
func (*WalletBalanceRequest) ProtoMessage()    {}
func (*WalletBalanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_30995f93a82f00d2, []int{2}
}

func (m *WalletBalanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WalletBalanceRequest.Unmarshal(m, b)
}
func (m *WalletBalanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WalletBalanceRequest.Marshal(b, m, deterministic)
}
func (m *WalletBalanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WalletBalanceRequest.Merge(m, src)
}
func (m *WalletBalanceRequest) XXX_Size() int {
	return xxx_messageInfo_WalletBalanceRequest.Size(m)
}
func (m *WalletBalanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WalletBalanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WalletBalanceRequest proto.InternalMessageInfo

func (m *WalletBalanceRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type WalletBalanceReply struct {
	Balance              uint64   `protobuf:"varint,1,opt,name=balance,proto3" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WalletBalanceReply) Reset()         { *m = WalletBalanceReply{} }
func (m *WalletBalanceReply) String() string { return proto.CompactTextString(m) }
func (*WalletBalanceReply) ProtoMessage()    {}
func (*WalletBalanceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_30995f93a82f00d2, []int{3}
}

func (m *WalletBalanceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WalletBalanceReply.Unmarshal(m, b)
}
func (m *WalletBalanceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WalletBalanceReply.Marshal(b, m, deterministic)
}
func (m *WalletBalanceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WalletBalanceReply.Merge(m, src)
}
func (m *WalletBalanceReply) XXX_Size() int {
	return xxx_messageInfo_WalletBalanceReply.Size(m)
}
func (m *WalletBalanceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_WalletBalanceReply.DiscardUnknown(m)
}

var xxx_messageInfo_WalletBalanceReply proto.InternalMessageInfo

func (m *WalletBalanceReply) GetBalance() uint64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func init() {
	proto.RegisterType((*NewAddressRequest)(nil), "wallet.rpc.NewAddressRequest")
	proto.RegisterType((*NewAddressReply)(nil), "wallet.rpc.NewAddressReply")
	proto.RegisterType((*WalletBalanceRequest)(nil), "wallet.rpc.WalletBalanceRequest")
	proto.RegisterType((*WalletBalanceReply)(nil), "wallet.rpc.WalletBalanceReply")
}

func init() { proto.RegisterFile("wallet/rpc/rpc.proto", fileDescriptor_30995f93a82f00d2) }

var fileDescriptor_30995f93a82f00d2 = []byte{
	// 207 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x29, 0x4f, 0xcc, 0xc9,
	0x49, 0x2d, 0xd1, 0x2f, 0x2a, 0x48, 0x06, 0x61, 0xbd, 0x82, 0xa2, 0xfc, 0x92, 0x7c, 0x21, 0x2e,
	0x88, 0xa8, 0x5e, 0x51, 0x41, 0xb2, 0x92, 0x3a, 0x97, 0xa0, 0x5f, 0x6a, 0xb9, 0x63, 0x4a, 0x4a,
	0x51, 0x6a, 0x71, 0x71, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x90, 0x10, 0x17, 0x4b, 0x49,
	0x65, 0x41, 0xaa, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x98, 0xad, 0xa4, 0xcd, 0xc5, 0x8f,
	0xac, 0xb0, 0x20, 0xa7, 0x52, 0x48, 0x82, 0x8b, 0x3d, 0x11, 0xc2, 0x87, 0xaa, 0x84, 0x71, 0x95,
	0x0c, 0xb8, 0x44, 0xc2, 0xc1, 0x76, 0x38, 0x25, 0xe6, 0x24, 0xe6, 0x25, 0xa7, 0xc2, 0x0c, 0xc6,
	0xad, 0x43, 0x8f, 0x4b, 0x08, 0x4d, 0x07, 0xd4, 0x86, 0x24, 0x08, 0x1f, 0xac, 0x9e, 0x25, 0x08,
	0xc6, 0x35, 0x5a, 0xc6, 0xc8, 0xc5, 0x1c, 0x14, 0xe0, 0x2c, 0xe4, 0xc5, 0xc5, 0x85, 0x70, 0x96,
	0x90, 0xac, 0x1e, 0xc2, 0x6b, 0x7a, 0x18, 0xfe, 0x92, 0x92, 0xc6, 0x25, 0x5d, 0x90, 0x53, 0xa9,
	0xc4, 0x20, 0x14, 0xcc, 0xc5, 0x8b, 0xe2, 0x06, 0x21, 0x05, 0x64, 0xf5, 0xd8, 0x3c, 0x24, 0x25,
	0x87, 0x47, 0x05, 0xd8, 0x50, 0x27, 0xd6, 0x28, 0xe6, 0xa2, 0x82, 0xe4, 0x24, 0x36, 0x70, 0xd0,
	0x1b, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x33, 0x78, 0xb9, 0x03, 0x92, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RPCClient is the client API for RPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCClient interface {
	NewAddress(ctx context.Context, in *NewAddressRequest, opts ...grpc.CallOption) (*NewAddressReply, error)
	WalletBalance(ctx context.Context, in *WalletBalanceRequest, opts ...grpc.CallOption) (*WalletBalanceReply, error)
}

type rPCClient struct {
	cc *grpc.ClientConn
}

func NewRPCClient(cc *grpc.ClientConn) RPCClient {
	return &rPCClient{cc}
}

func (c *rPCClient) NewAddress(ctx context.Context, in *NewAddressRequest, opts ...grpc.CallOption) (*NewAddressReply, error) {
	out := new(NewAddressReply)
	err := c.cc.Invoke(ctx, "/wallet.rpc.RPC/NewAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) WalletBalance(ctx context.Context, in *WalletBalanceRequest, opts ...grpc.CallOption) (*WalletBalanceReply, error) {
	out := new(WalletBalanceReply)
	err := c.cc.Invoke(ctx, "/wallet.rpc.RPC/WalletBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCServer is the server API for RPC service.
type RPCServer interface {
	NewAddress(context.Context, *NewAddressRequest) (*NewAddressReply, error)
	WalletBalance(context.Context, *WalletBalanceRequest) (*WalletBalanceReply, error)
}

// UnimplementedRPCServer can be embedded to have forward compatible implementations.
type UnimplementedRPCServer struct {
}

func (*UnimplementedRPCServer) NewAddress(ctx context.Context, req *NewAddressRequest) (*NewAddressReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewAddress not implemented")
}
func (*UnimplementedRPCServer) WalletBalance(ctx context.Context, req *WalletBalanceRequest) (*WalletBalanceReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WalletBalance not implemented")
}

func RegisterRPCServer(s *grpc.Server, srv RPCServer) {
	s.RegisterService(&_RPC_serviceDesc, srv)
}

func _RPC_NewAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).NewAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wallet.rpc.RPC/NewAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).NewAddress(ctx, req.(*NewAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_WalletBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WalletBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).WalletBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wallet.rpc.RPC/WalletBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).WalletBalance(ctx, req.(*WalletBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "wallet.rpc.RPC",
	HandlerType: (*RPCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewAddress",
			Handler:    _RPC_NewAddress_Handler,
		},
		{
			MethodName: "WalletBalance",
			Handler:    _RPC_WalletBalance_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "wallet/rpc/rpc.proto",
}
