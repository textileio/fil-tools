// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.1
// source: ffs/rpc/rpc.proto

package rpc

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type JobStatus int32

const (
	JobStatus_Queued    JobStatus = 0
	JobStatus_Executing JobStatus = 1
	JobStatus_Failed    JobStatus = 2
	JobStatus_Canceled  JobStatus = 3
	JobStatus_Success   JobStatus = 4
)

// Enum value maps for JobStatus.
var (
	JobStatus_name = map[int32]string{
		0: "Queued",
		1: "Executing",
		2: "Failed",
		3: "Canceled",
		4: "Success",
	}
	JobStatus_value = map[string]int32{
		"Queued":    0,
		"Executing": 1,
		"Failed":    2,
		"Canceled":  3,
		"Success":   4,
	}
)

func (x JobStatus) Enum() *JobStatus {
	p := new(JobStatus)
	*p = x
	return p
}

func (x JobStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_ffs_rpc_rpc_proto_enumTypes[0].Descriptor()
}

func (JobStatus) Type() protoreflect.EnumType {
	return &file_ffs_rpc_rpc_proto_enumTypes[0]
}

func (x JobStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobStatus.Descriptor instead.
func (JobStatus) EnumDescriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{0}
}

type AddrInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Addr string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *AddrInfo) Reset() {
	*x = AddrInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddrInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddrInfo) ProtoMessage() {}

func (x *AddrInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddrInfo.ProtoReflect.Descriptor instead.
func (*AddrInfo) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{0}
}

func (x *AddrInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddrInfo) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *AddrInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type IpfsConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddTimeout int64 `protobuf:"varint,1,opt,name=addTimeout,proto3" json:"addTimeout,omitempty"`
}

func (x *IpfsConfig) Reset() {
	*x = IpfsConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IpfsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpfsConfig) ProtoMessage() {}

func (x *IpfsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IpfsConfig.ProtoReflect.Descriptor instead.
func (*IpfsConfig) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{1}
}

func (x *IpfsConfig) GetAddTimeout() int64 {
	if x != nil {
		return x.AddTimeout
	}
	return 0
}

type HotConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled       bool        `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	AllowUnfreeze bool        `protobuf:"varint,2,opt,name=allowUnfreeze,proto3" json:"allowUnfreeze,omitempty"`
	Ipfs          *IpfsConfig `protobuf:"bytes,3,opt,name=ipfs,proto3" json:"ipfs,omitempty"`
}

func (x *HotConfig) Reset() {
	*x = HotConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HotConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HotConfig) ProtoMessage() {}

func (x *HotConfig) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HotConfig.ProtoReflect.Descriptor instead.
func (*HotConfig) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{2}
}

func (x *HotConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *HotConfig) GetAllowUnfreeze() bool {
	if x != nil {
		return x.AllowUnfreeze
	}
	return false
}

func (x *HotConfig) GetIpfs() *IpfsConfig {
	if x != nil {
		return x.Ipfs
	}
	return nil
}

type FilRenew struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled   bool  `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Threshold int64 `protobuf:"varint,2,opt,name=threshold,proto3" json:"threshold,omitempty"`
}

func (x *FilRenew) Reset() {
	*x = FilRenew{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilRenew) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilRenew) ProtoMessage() {}

func (x *FilRenew) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilRenew.ProtoReflect.Descriptor instead.
func (*FilRenew) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{3}
}

func (x *FilRenew) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *FilRenew) GetThreshold() int64 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

type FilConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepFactor      int64     `protobuf:"varint,1,opt,name=repFactor,proto3" json:"repFactor,omitempty"`
	DealDuration   int64     `protobuf:"varint,2,opt,name=dealDuration,proto3" json:"dealDuration,omitempty"`
	ExcludedMiners []string  `protobuf:"bytes,3,rep,name=excludedMiners,proto3" json:"excludedMiners,omitempty"`
	TrustedMiners  []string  `protobuf:"bytes,4,rep,name=trustedMiners,proto3" json:"trustedMiners,omitempty"`
	CountryCodes   []string  `protobuf:"bytes,5,rep,name=countryCodes,proto3" json:"countryCodes,omitempty"`
	Renew          *FilRenew `protobuf:"bytes,6,opt,name=renew,proto3" json:"renew,omitempty"`
	Addr           string    `protobuf:"bytes,7,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *FilConfig) Reset() {
	*x = FilConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilConfig) ProtoMessage() {}

func (x *FilConfig) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilConfig.ProtoReflect.Descriptor instead.
func (*FilConfig) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{4}
}

func (x *FilConfig) GetRepFactor() int64 {
	if x != nil {
		return x.RepFactor
	}
	return 0
}

func (x *FilConfig) GetDealDuration() int64 {
	if x != nil {
		return x.DealDuration
	}
	return 0
}

func (x *FilConfig) GetExcludedMiners() []string {
	if x != nil {
		return x.ExcludedMiners
	}
	return nil
}

func (x *FilConfig) GetTrustedMiners() []string {
	if x != nil {
		return x.TrustedMiners
	}
	return nil
}

func (x *FilConfig) GetCountryCodes() []string {
	if x != nil {
		return x.CountryCodes
	}
	return nil
}

func (x *FilConfig) GetRenew() *FilRenew {
	if x != nil {
		return x.Renew
	}
	return nil
}

func (x *FilConfig) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type ColdConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled  bool       `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Filecoin *FilConfig `protobuf:"bytes,2,opt,name=filecoin,proto3" json:"filecoin,omitempty"`
}

func (x *ColdConfig) Reset() {
	*x = ColdConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColdConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColdConfig) ProtoMessage() {}

func (x *ColdConfig) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColdConfig.ProtoReflect.Descriptor instead.
func (*ColdConfig) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{5}
}

func (x *ColdConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ColdConfig) GetFilecoin() *FilConfig {
	if x != nil {
		return x.Filecoin
	}
	return nil
}

type CidConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid        string      `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Hot        *HotConfig  `protobuf:"bytes,2,opt,name=hot,proto3" json:"hot,omitempty"`
	Cold       *ColdConfig `protobuf:"bytes,3,opt,name=cold,proto3" json:"cold,omitempty"`
	Repairable bool        `protobuf:"varint,4,opt,name=repairable,proto3" json:"repairable,omitempty"`
}

func (x *CidConfig) Reset() {
	*x = CidConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CidConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CidConfig) ProtoMessage() {}

func (x *CidConfig) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CidConfig.ProtoReflect.Descriptor instead.
func (*CidConfig) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{6}
}

func (x *CidConfig) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *CidConfig) GetHot() *HotConfig {
	if x != nil {
		return x.Hot
	}
	return nil
}

func (x *CidConfig) GetCold() *ColdConfig {
	if x != nil {
		return x.Cold
	}
	return nil
}

func (x *CidConfig) GetRepairable() bool {
	if x != nil {
		return x.Repairable
	}
	return false
}

type DefaultConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hot        *HotConfig  `protobuf:"bytes,1,opt,name=hot,proto3" json:"hot,omitempty"`
	Cold       *ColdConfig `protobuf:"bytes,2,opt,name=cold,proto3" json:"cold,omitempty"`
	Repairable bool        `protobuf:"varint,3,opt,name=repairable,proto3" json:"repairable,omitempty"`
}

func (x *DefaultConfig) Reset() {
	*x = DefaultConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultConfig) ProtoMessage() {}

func (x *DefaultConfig) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultConfig.ProtoReflect.Descriptor instead.
func (*DefaultConfig) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{7}
}

func (x *DefaultConfig) GetHot() *HotConfig {
	if x != nil {
		return x.Hot
	}
	return nil
}

func (x *DefaultConfig) GetCold() *ColdConfig {
	if x != nil {
		return x.Cold
	}
	return nil
}

func (x *DefaultConfig) GetRepairable() bool {
	if x != nil {
		return x.Repairable
	}
	return false
}

type IpfsHotInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Created int64 `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *IpfsHotInfo) Reset() {
	*x = IpfsHotInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IpfsHotInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpfsHotInfo) ProtoMessage() {}

func (x *IpfsHotInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IpfsHotInfo.ProtoReflect.Descriptor instead.
func (*IpfsHotInfo) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{8}
}

func (x *IpfsHotInfo) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

type HotInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool         `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Size    int64        `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Ipfs    *IpfsHotInfo `protobuf:"bytes,3,opt,name=ipfs,proto3" json:"ipfs,omitempty"`
}

func (x *HotInfo) Reset() {
	*x = HotInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HotInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HotInfo) ProtoMessage() {}

func (x *HotInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HotInfo.ProtoReflect.Descriptor instead.
func (*HotInfo) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{9}
}

func (x *HotInfo) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *HotInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *HotInfo) GetIpfs() *IpfsHotInfo {
	if x != nil {
		return x.Ipfs
	}
	return nil
}

type FilStorage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposalCid     string `protobuf:"bytes,1,opt,name=proposalCid,proto3" json:"proposalCid,omitempty"`
	Renewed         bool   `protobuf:"varint,2,opt,name=renewed,proto3" json:"renewed,omitempty"`
	Duration        int64  `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	ActivationEpoch int64  `protobuf:"varint,4,opt,name=activationEpoch,proto3" json:"activationEpoch,omitempty"`
	Miner           string `protobuf:"bytes,5,opt,name=miner,proto3" json:"miner,omitempty"`
}

func (x *FilStorage) Reset() {
	*x = FilStorage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilStorage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilStorage) ProtoMessage() {}

func (x *FilStorage) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilStorage.ProtoReflect.Descriptor instead.
func (*FilStorage) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{10}
}

func (x *FilStorage) GetProposalCid() string {
	if x != nil {
		return x.ProposalCid
	}
	return ""
}

func (x *FilStorage) GetRenewed() bool {
	if x != nil {
		return x.Renewed
	}
	return false
}

func (x *FilStorage) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *FilStorage) GetActivationEpoch() int64 {
	if x != nil {
		return x.ActivationEpoch
	}
	return 0
}

func (x *FilStorage) GetMiner() string {
	if x != nil {
		return x.Miner
	}
	return ""
}

type FilInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataCid   string        `protobuf:"bytes,1,opt,name=dataCid,proto3" json:"dataCid,omitempty"`
	Proposals []*FilStorage `protobuf:"bytes,2,rep,name=proposals,proto3" json:"proposals,omitempty"`
}

func (x *FilInfo) Reset() {
	*x = FilInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilInfo) ProtoMessage() {}

func (x *FilInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilInfo.ProtoReflect.Descriptor instead.
func (*FilInfo) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{11}
}

func (x *FilInfo) GetDataCid() string {
	if x != nil {
		return x.DataCid
	}
	return ""
}

func (x *FilInfo) GetProposals() []*FilStorage {
	if x != nil {
		return x.Proposals
	}
	return nil
}

type ColdInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filecoin *FilInfo `protobuf:"bytes,1,opt,name=filecoin,proto3" json:"filecoin,omitempty"`
}

func (x *ColdInfo) Reset() {
	*x = ColdInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColdInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColdInfo) ProtoMessage() {}

func (x *ColdInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColdInfo.ProtoReflect.Descriptor instead.
func (*ColdInfo) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{12}
}

func (x *ColdInfo) GetFilecoin() *FilInfo {
	if x != nil {
		return x.Filecoin
	}
	return nil
}

type CidInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobID   string    `protobuf:"bytes,1,opt,name=jobID,proto3" json:"jobID,omitempty"`
	Cid     string    `protobuf:"bytes,2,opt,name=cid,proto3" json:"cid,omitempty"`
	Created int64     `protobuf:"varint,3,opt,name=created,proto3" json:"created,omitempty"`
	Hot     *HotInfo  `protobuf:"bytes,4,opt,name=hot,proto3" json:"hot,omitempty"`
	Cold    *ColdInfo `protobuf:"bytes,5,opt,name=cold,proto3" json:"cold,omitempty"`
}

func (x *CidInfo) Reset() {
	*x = CidInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CidInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CidInfo) ProtoMessage() {}

func (x *CidInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CidInfo.ProtoReflect.Descriptor instead.
func (*CidInfo) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{13}
}

func (x *CidInfo) GetJobID() string {
	if x != nil {
		return x.JobID
	}
	return ""
}

func (x *CidInfo) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *CidInfo) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *CidInfo) GetHot() *HotInfo {
	if x != nil {
		return x.Hot
	}
	return nil
}

func (x *CidInfo) GetCold() *ColdInfo {
	if x != nil {
		return x.Cold
	}
	return nil
}

type BalanceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr    *AddrInfo `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Balance int64     `protobuf:"varint,2,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *BalanceInfo) Reset() {
	*x = BalanceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceInfo) ProtoMessage() {}

func (x *BalanceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceInfo.ProtoReflect.Descriptor instead.
func (*BalanceInfo) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{14}
}

func (x *BalanceInfo) GetAddr() *AddrInfo {
	if x != nil {
		return x.Addr
	}
	return nil
}

func (x *BalanceInfo) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type InstanceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            string         `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	DefaultConfig *DefaultConfig `protobuf:"bytes,2,opt,name=defaultConfig,proto3" json:"defaultConfig,omitempty"`
	Balances      []*BalanceInfo `protobuf:"bytes,3,rep,name=balances,proto3" json:"balances,omitempty"`
	Pins          []string       `protobuf:"bytes,4,rep,name=pins,proto3" json:"pins,omitempty"`
}

func (x *InstanceInfo) Reset() {
	*x = InstanceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceInfo) ProtoMessage() {}

func (x *InstanceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceInfo.ProtoReflect.Descriptor instead.
func (*InstanceInfo) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{15}
}

func (x *InstanceInfo) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *InstanceInfo) GetDefaultConfig() *DefaultConfig {
	if x != nil {
		return x.DefaultConfig
	}
	return nil
}

func (x *InstanceInfo) GetBalances() []*BalanceInfo {
	if x != nil {
		return x.Balances
	}
	return nil
}

func (x *InstanceInfo) GetPins() []string {
	if x != nil {
		return x.Pins
	}
	return nil
}

type Job struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         string       `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	ApiID      string       `protobuf:"bytes,2,opt,name=apiID,proto3" json:"apiID,omitempty"`
	Cid        string       `protobuf:"bytes,3,opt,name=cid,proto3" json:"cid,omitempty"`
	Status     JobStatus    `protobuf:"varint,4,opt,name=status,proto3,enum=ffs.rpc.JobStatus" json:"status,omitempty"`
	ErrCause   string       `protobuf:"bytes,5,opt,name=errCause,proto3" json:"errCause,omitempty"`
	DealErrors []*DealError `protobuf:"bytes,6,rep,name=dealErrors,proto3" json:"dealErrors,omitempty"`
}

func (x *Job) Reset() {
	*x = Job{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{16}
}

func (x *Job) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Job) GetApiID() string {
	if x != nil {
		return x.ApiID
	}
	return ""
}

func (x *Job) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *Job) GetStatus() JobStatus {
	if x != nil {
		return x.Status
	}
	return JobStatus_Queued
}

func (x *Job) GetErrCause() string {
	if x != nil {
		return x.ErrCause
	}
	return ""
}

func (x *Job) GetDealErrors() []*DealError {
	if x != nil {
		return x.DealErrors
	}
	return nil
}

type DealError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposalCid string `protobuf:"bytes,1,opt,name=ProposalCid,proto3" json:"ProposalCid,omitempty"`
	Miner       string `protobuf:"bytes,2,opt,name=Miner,proto3" json:"Miner,omitempty"`
	Message     string `protobuf:"bytes,3,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *DealError) Reset() {
	*x = DealError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DealError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DealError) ProtoMessage() {}

func (x *DealError) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DealError.ProtoReflect.Descriptor instead.
func (*DealError) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{17}
}

func (x *DealError) GetProposalCid() string {
	if x != nil {
		return x.ProposalCid
	}
	return ""
}

func (x *DealError) GetMiner() string {
	if x != nil {
		return x.Miner
	}
	return ""
}

func (x *DealError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{18}
}

type CreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID    string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *CreateReply) Reset() {
	*x = CreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReply) ProtoMessage() {}

func (x *CreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReply.ProtoReflect.Descriptor instead.
func (*CreateReply) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{19}
}

func (x *CreateReply) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *CreateReply) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ListAPIRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListAPIRequest) Reset() {
	*x = ListAPIRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAPIRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAPIRequest) ProtoMessage() {}

func (x *ListAPIRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAPIRequest.ProtoReflect.Descriptor instead.
func (*ListAPIRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{20}
}

type ListAPIReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instances []string `protobuf:"bytes,1,rep,name=instances,proto3" json:"instances,omitempty"`
}

func (x *ListAPIReply) Reset() {
	*x = ListAPIReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAPIReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAPIReply) ProtoMessage() {}

func (x *ListAPIReply) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAPIReply.ProtoReflect.Descriptor instead.
func (*ListAPIReply) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{21}
}

func (x *ListAPIReply) GetInstances() []string {
	if x != nil {
		return x.Instances
	}
	return nil
}

type IDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IDRequest) Reset() {
	*x = IDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDRequest) ProtoMessage() {}

func (x *IDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDRequest.ProtoReflect.Descriptor instead.
func (*IDRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{22}
}

type IDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *IDReply) Reset() {
	*x = IDReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDReply) ProtoMessage() {}

func (x *IDReply) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDReply.ProtoReflect.Descriptor instead.
func (*IDReply) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{23}
}

func (x *IDReply) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type AddrsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddrsRequest) Reset() {
	*x = AddrsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddrsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddrsRequest) ProtoMessage() {}

func (x *AddrsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddrsRequest.ProtoReflect.Descriptor instead.
func (*AddrsRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{24}
}

type AddrsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addrs []*AddrInfo `protobuf:"bytes,1,rep,name=addrs,proto3" json:"addrs,omitempty"`
}

func (x *AddrsReply) Reset() {
	*x = AddrsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddrsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddrsReply) ProtoMessage() {}

func (x *AddrsReply) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddrsReply.ProtoReflect.Descriptor instead.
func (*AddrsReply) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{25}
}

func (x *AddrsReply) GetAddrs() []*AddrInfo {
	if x != nil {
		return x.Addrs
	}
	return nil
}

type DefaultConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DefaultConfigRequest) Reset() {
	*x = DefaultConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultConfigRequest) ProtoMessage() {}

func (x *DefaultConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultConfigRequest.ProtoReflect.Descriptor instead.
func (*DefaultConfigRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{26}
}

type DefaultConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultConfig *DefaultConfig `protobuf:"bytes,1,opt,name=defaultConfig,proto3" json:"defaultConfig,omitempty"`
}

func (x *DefaultConfigReply) Reset() {
	*x = DefaultConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultConfigReply) ProtoMessage() {}

func (x *DefaultConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultConfigReply.ProtoReflect.Descriptor instead.
func (*DefaultConfigReply) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{27}
}

func (x *DefaultConfigReply) GetDefaultConfig() *DefaultConfig {
	if x != nil {
		return x.DefaultConfig
	}
	return nil
}

type NewAddrRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	AddressType string `protobuf:"bytes,2,opt,name=addressType,proto3" json:"addressType,omitempty"`
	MakeDefault bool   `protobuf:"varint,3,opt,name=makeDefault,proto3" json:"makeDefault,omitempty"`
}

func (x *NewAddrRequest) Reset() {
	*x = NewAddrRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewAddrRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewAddrRequest) ProtoMessage() {}

func (x *NewAddrRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewAddrRequest.ProtoReflect.Descriptor instead.
func (*NewAddrRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{28}
}

func (x *NewAddrRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NewAddrRequest) GetAddressType() string {
	if x != nil {
		return x.AddressType
	}
	return ""
}

func (x *NewAddrRequest) GetMakeDefault() bool {
	if x != nil {
		return x.MakeDefault
	}
	return false
}

type NewAddrReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *NewAddrReply) Reset() {
	*x = NewAddrReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewAddrReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewAddrReply) ProtoMessage() {}

func (x *NewAddrReply) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewAddrReply.ProtoReflect.Descriptor instead.
func (*NewAddrReply) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{29}
}

func (x *NewAddrReply) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type GetDefaultCidConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *GetDefaultCidConfigRequest) Reset() {
	*x = GetDefaultCidConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultCidConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultCidConfigRequest) ProtoMessage() {}

func (x *GetDefaultCidConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultCidConfigRequest.ProtoReflect.Descriptor instead.
func (*GetDefaultCidConfigRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{30}
}

func (x *GetDefaultCidConfigRequest) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

type GetDefaultCidConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *CidConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *GetDefaultCidConfigReply) Reset() {
	*x = GetDefaultCidConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultCidConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultCidConfigReply) ProtoMessage() {}

func (x *GetDefaultCidConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultCidConfigReply.ProtoReflect.Descriptor instead.
func (*GetDefaultCidConfigReply) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{31}
}

func (x *GetDefaultCidConfigReply) GetConfig() *CidConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type GetCidConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *GetCidConfigRequest) Reset() {
	*x = GetCidConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCidConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCidConfigRequest) ProtoMessage() {}

func (x *GetCidConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCidConfigRequest.ProtoReflect.Descriptor instead.
func (*GetCidConfigRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{32}
}

func (x *GetCidConfigRequest) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

type GetCidConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *CidConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *GetCidConfigReply) Reset() {
	*x = GetCidConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCidConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCidConfigReply) ProtoMessage() {}

func (x *GetCidConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCidConfigReply.ProtoReflect.Descriptor instead.
func (*GetCidConfigReply) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{33}
}

func (x *GetCidConfigReply) GetConfig() *CidConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type SetDefaultConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *DefaultConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *SetDefaultConfigRequest) Reset() {
	*x = SetDefaultConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDefaultConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDefaultConfigRequest) ProtoMessage() {}

func (x *SetDefaultConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDefaultConfigRequest.ProtoReflect.Descriptor instead.
func (*SetDefaultConfigRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{34}
}

func (x *SetDefaultConfigRequest) GetConfig() *DefaultConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type SetDefaultConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetDefaultConfigReply) Reset() {
	*x = SetDefaultConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDefaultConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDefaultConfigReply) ProtoMessage() {}

func (x *SetDefaultConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDefaultConfigReply.ProtoReflect.Descriptor instead.
func (*SetDefaultConfigReply) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{35}
}

type ShowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *ShowRequest) Reset() {
	*x = ShowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowRequest) ProtoMessage() {}

func (x *ShowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowRequest.ProtoReflect.Descriptor instead.
func (*ShowRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{36}
}

func (x *ShowRequest) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

type ShowReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CidInfo *CidInfo `protobuf:"bytes,1,opt,name=cidInfo,proto3" json:"cidInfo,omitempty"`
}

func (x *ShowReply) Reset() {
	*x = ShowReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowReply) ProtoMessage() {}

func (x *ShowReply) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowReply.ProtoReflect.Descriptor instead.
func (*ShowReply) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{37}
}

func (x *ShowReply) GetCidInfo() *CidInfo {
	if x != nil {
		return x.CidInfo
	}
	return nil
}

type InfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InfoRequest) Reset() {
	*x = InfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoRequest) ProtoMessage() {}

func (x *InfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoRequest.ProtoReflect.Descriptor instead.
func (*InfoRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{38}
}

type InfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *InstanceInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *InfoReply) Reset() {
	*x = InfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoReply) ProtoMessage() {}

func (x *InfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoReply.ProtoReflect.Descriptor instead.
func (*InfoReply) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{39}
}

func (x *InfoReply) GetInfo() *InstanceInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type WatchJobsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jids []string `protobuf:"bytes,1,rep,name=jids,proto3" json:"jids,omitempty"`
}

func (x *WatchJobsRequest) Reset() {
	*x = WatchJobsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchJobsRequest) ProtoMessage() {}

func (x *WatchJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchJobsRequest.ProtoReflect.Descriptor instead.
func (*WatchJobsRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{40}
}

func (x *WatchJobsRequest) GetJids() []string {
	if x != nil {
		return x.Jids
	}
	return nil
}

type WatchJobsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *WatchJobsReply) Reset() {
	*x = WatchJobsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchJobsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchJobsReply) ProtoMessage() {}

func (x *WatchJobsReply) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchJobsReply.ProtoReflect.Descriptor instead.
func (*WatchJobsReply) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{41}
}

func (x *WatchJobsReply) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type WatchLogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid     string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Jid     string `protobuf:"bytes,2,opt,name=jid,proto3" json:"jid,omitempty"`
	History bool   `protobuf:"varint,3,opt,name=history,proto3" json:"history,omitempty"`
}

func (x *WatchLogsRequest) Reset() {
	*x = WatchLogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchLogsRequest) ProtoMessage() {}

func (x *WatchLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchLogsRequest.ProtoReflect.Descriptor instead.
func (*WatchLogsRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{42}
}

func (x *WatchLogsRequest) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *WatchLogsRequest) GetJid() string {
	if x != nil {
		return x.Jid
	}
	return ""
}

func (x *WatchLogsRequest) GetHistory() bool {
	if x != nil {
		return x.History
	}
	return false
}

type WatchLogsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogEntry *LogEntry `protobuf:"bytes,1,opt,name=logEntry,proto3" json:"logEntry,omitempty"`
}

func (x *WatchLogsReply) Reset() {
	*x = WatchLogsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchLogsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchLogsReply) ProtoMessage() {}

func (x *WatchLogsReply) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchLogsReply.ProtoReflect.Descriptor instead.
func (*WatchLogsReply) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{43}
}

func (x *WatchLogsReply) GetLogEntry() *LogEntry {
	if x != nil {
		return x.LogEntry
	}
	return nil
}

type LogEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid  string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Jid  string `protobuf:"bytes,2,opt,name=jid,proto3" json:"jid,omitempty"`
	Time int64  `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`
	Msg  string `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{44}
}

func (x *LogEntry) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *LogEntry) GetJid() string {
	if x != nil {
		return x.Jid
	}
	return ""
}

func (x *LogEntry) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *LogEntry) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReplaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid1 string `protobuf:"bytes,1,opt,name=cid1,proto3" json:"cid1,omitempty"`
	Cid2 string `protobuf:"bytes,2,opt,name=cid2,proto3" json:"cid2,omitempty"`
}

func (x *ReplaceRequest) Reset() {
	*x = ReplaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplaceRequest) ProtoMessage() {}

func (x *ReplaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplaceRequest.ProtoReflect.Descriptor instead.
func (*ReplaceRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{45}
}

func (x *ReplaceRequest) GetCid1() string {
	if x != nil {
		return x.Cid1
	}
	return ""
}

func (x *ReplaceRequest) GetCid2() string {
	if x != nil {
		return x.Cid2
	}
	return ""
}

type ReplaceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobID string `protobuf:"bytes,1,opt,name=jobID,proto3" json:"jobID,omitempty"`
}

func (x *ReplaceReply) Reset() {
	*x = ReplaceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplaceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplaceReply) ProtoMessage() {}

func (x *ReplaceReply) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplaceReply.ProtoReflect.Descriptor instead.
func (*ReplaceReply) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{46}
}

func (x *ReplaceReply) GetJobID() string {
	if x != nil {
		return x.JobID
	}
	return ""
}

type PushConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid               string     `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Config            *CidConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	HasConfig         bool       `protobuf:"varint,3,opt,name=hasConfig,proto3" json:"hasConfig,omitempty"`
	OverrideConfig    bool       `protobuf:"varint,4,opt,name=overrideConfig,proto3" json:"overrideConfig,omitempty"`
	HasOverrideConfig bool       `protobuf:"varint,5,opt,name=hasOverrideConfig,proto3" json:"hasOverrideConfig,omitempty"`
}

func (x *PushConfigRequest) Reset() {
	*x = PushConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushConfigRequest) ProtoMessage() {}

func (x *PushConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushConfigRequest.ProtoReflect.Descriptor instead.
func (*PushConfigRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{47}
}

func (x *PushConfigRequest) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *PushConfigRequest) GetConfig() *CidConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *PushConfigRequest) GetHasConfig() bool {
	if x != nil {
		return x.HasConfig
	}
	return false
}

func (x *PushConfigRequest) GetOverrideConfig() bool {
	if x != nil {
		return x.OverrideConfig
	}
	return false
}

func (x *PushConfigRequest) GetHasOverrideConfig() bool {
	if x != nil {
		return x.HasOverrideConfig
	}
	return false
}

type PushConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobID string `protobuf:"bytes,1,opt,name=jobID,proto3" json:"jobID,omitempty"`
}

func (x *PushConfigReply) Reset() {
	*x = PushConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushConfigReply) ProtoMessage() {}

func (x *PushConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushConfigReply.ProtoReflect.Descriptor instead.
func (*PushConfigReply) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{48}
}

func (x *PushConfigReply) GetJobID() string {
	if x != nil {
		return x.JobID
	}
	return ""
}

type RemoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *RemoveRequest) Reset() {
	*x = RemoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRequest) ProtoMessage() {}

func (x *RemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRequest.ProtoReflect.Descriptor instead.
func (*RemoveRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{49}
}

func (x *RemoveRequest) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

type RemoveReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveReply) Reset() {
	*x = RemoveReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveReply) ProtoMessage() {}

func (x *RemoveReply) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveReply.ProtoReflect.Descriptor instead.
func (*RemoveReply) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{50}
}

type GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{51}
}

func (x *GetRequest) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

type GetReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chunk []byte `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
}

func (x *GetReply) Reset() {
	*x = GetReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReply) ProtoMessage() {}

func (x *GetReply) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReply.ProtoReflect.Descriptor instead.
func (*GetReply) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{52}
}

func (x *GetReply) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

type SendFilRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From   string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To     string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Amount int64  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *SendFilRequest) Reset() {
	*x = SendFilRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendFilRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFilRequest) ProtoMessage() {}

func (x *SendFilRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFilRequest.ProtoReflect.Descriptor instead.
func (*SendFilRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{53}
}

func (x *SendFilRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *SendFilRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *SendFilRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type SendFilReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendFilReply) Reset() {
	*x = SendFilReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendFilReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFilReply) ProtoMessage() {}

func (x *SendFilReply) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFilReply.ProtoReflect.Descriptor instead.
func (*SendFilReply) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{54}
}

type CloseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloseRequest) Reset() {
	*x = CloseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseRequest) ProtoMessage() {}

func (x *CloseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseRequest.ProtoReflect.Descriptor instead.
func (*CloseRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{55}
}

type CloseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloseReply) Reset() {
	*x = CloseReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseReply) ProtoMessage() {}

func (x *CloseReply) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseReply.ProtoReflect.Descriptor instead.
func (*CloseReply) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{56}
}

type AddToHotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chunk []byte `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
}

func (x *AddToHotRequest) Reset() {
	*x = AddToHotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddToHotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToHotRequest) ProtoMessage() {}

func (x *AddToHotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToHotRequest.ProtoReflect.Descriptor instead.
func (*AddToHotRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{57}
}

func (x *AddToHotRequest) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

type AddToHotReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *AddToHotReply) Reset() {
	*x = AddToHotReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddToHotReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToHotReply) ProtoMessage() {}

func (x *AddToHotReply) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToHotReply.ProtoReflect.Descriptor instead.
func (*AddToHotReply) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{58}
}

func (x *AddToHotReply) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

var File_ffs_rpc_rpc_proto protoreflect.FileDescriptor

var file_ffs_rpc_rpc_proto_rawDesc = []byte{
	0x0a, 0x11, 0x66, 0x66, 0x73, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x22, 0x46, 0x0a, 0x08,
	0x41, 0x64, 0x64, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x22, 0x2c, 0x0a, 0x0a, 0x49, 0x70, 0x66, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x64, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x22, 0x74, 0x0a, 0x09, 0x48, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x12,
	0x27, 0x0a, 0x04, 0x69, 0x70, 0x66, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x70, 0x66, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x04, 0x69, 0x70, 0x66, 0x73, 0x22, 0x42, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x52,
	0x65, 0x6e, 0x65, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x22, 0xfc, 0x01, 0x0a,
	0x09, 0x46, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x70, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72,
	0x65, 0x70, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x61, 0x6c,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x64, 0x65, 0x61, 0x6c, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e,
	0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x4d, 0x69,
	0x6e, 0x65, 0x72, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x4d,
	0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x75,
	0x73, 0x74, 0x65, 0x64, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x27,
	0x0a, 0x05, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x52, 0x65, 0x6e, 0x65, 0x77,
	0x52, 0x05, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x22, 0x56, 0x0a, 0x0a, 0x43,
	0x6f, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x46, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x63,
	0x6f, 0x69, 0x6e, 0x22, 0x8c, 0x01, 0x0a, 0x09, 0x43, 0x69, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x63, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x03, 0x68, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x6f, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x03, 0x68, 0x6f, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x63, 0x6f, 0x6c,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x43, 0x6f, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x63, 0x6f,
	0x6c, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x61, 0x62,
	0x6c, 0x65, 0x22, 0x7e, 0x0a, 0x0d, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x24, 0x0a, 0x03, 0x68, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x6f, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x03, 0x68, 0x6f, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x63, 0x6f, 0x6c,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x43, 0x6f, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x63, 0x6f,
	0x6c, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x61, 0x62,
	0x6c, 0x65, 0x22, 0x27, 0x0a, 0x0b, 0x49, 0x70, 0x66, 0x73, 0x48, 0x6f, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x61, 0x0a, 0x07, 0x48,
	0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x69, 0x70, 0x66, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x70, 0x66,
	0x73, 0x48, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x70, 0x66, 0x73, 0x22, 0xa4,
	0x01, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x43, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x43, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12,
	0x14, 0x0a, 0x05, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6d, 0x69, 0x6e, 0x65, 0x72, 0x22, 0x56, 0x0a, 0x07, 0x46, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x18, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x43, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x43, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x22, 0x38, 0x0a,
	0x08, 0x43, 0x6f, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2c, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x66, 0x66,
	0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x22, 0x96, 0x01, 0x0a, 0x07, 0x43, 0x69, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x03, 0x68, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x6f, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x68, 0x6f, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x63, 0x6f, 0x6c,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x43, 0x6f, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x63, 0x6f, 0x6c, 0x64,
	0x22, 0x4e, 0x0a, 0x0b, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x25, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x22, 0xa2, 0x01, 0x0a, 0x0c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x3c, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x30, 0x0a, 0x08, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x69, 0x6e, 0x73, 0x22, 0xb9, 0x01, 0x0a, 0x03, 0x4a, 0x6f, 0x62, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x70, 0x69, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70,
	0x69, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x43, 0x61, 0x75, 0x73, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x43, 0x61, 0x75, 0x73, 0x65, 0x12, 0x32, 0x0a,
	0x0a, 0x64, 0x65, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x61, 0x6c,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x0a, 0x64, 0x65, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x22, 0x5d, 0x0a, 0x09, 0x44, 0x65, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x20,
	0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x43, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x43, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x33, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x10, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x50,
	0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2c, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x50, 0x49, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x0b, 0x0a, 0x09, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x19, 0x0a, 0x07, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x0e,
	0x0a, 0x0c, 0x41, 0x64, 0x64, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x35,
	0x0a, 0x0a, 0x41, 0x64, 0x64, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05,
	0x61, 0x64, 0x64, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x66,
	0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05,
	0x61, 0x64, 0x64, 0x72, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x52, 0x0a,
	0x12, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x3c, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x66, 0x73,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x22, 0x68, 0x0a, 0x0e, 0x4e, 0x65, 0x77, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x6b,
	0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x6d, 0x61, 0x6b, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x22, 0x0a, 0x0c, 0x4e,
	0x65, 0x77, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x61,
	0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x22,
	0x2e, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x69, 0x64,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x22,
	0x46, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x69, 0x64,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2a, 0x0a, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x66,
	0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x69, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x27, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x69,
	0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64,
	0x22, 0x3f, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x69, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x43, 0x69, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x22, 0x49, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66,
	0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x17, 0x0a, 0x15,
	0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x0a, 0x0b, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x22, 0x37, 0x0a, 0x09, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x2a, 0x0a, 0x07, 0x63, 0x69, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43,
	0x69, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x63, 0x69, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x0d, 0x0a, 0x0b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x36,
	0x0a, 0x09, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x29, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x66, 0x73, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x26, 0x0a, 0x10, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4a,
	0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6a, 0x69, 0x64, 0x73, 0x22, 0x30,
	0x0a, 0x0e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x1e, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62,
	0x22, 0x50, 0x0a, 0x10, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x22, 0x3f, 0x0a, 0x0e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x2d, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x22, 0x54, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6a, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x38, 0x0a, 0x0e, 0x52, 0x65, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x69, 0x64, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x64, 0x31, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x69, 0x64, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x69, 0x64, 0x32, 0x22, 0x24, 0x0a, 0x0c, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x22, 0xc5, 0x01, 0x0a, 0x11, 0x50, 0x75,
	0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69,
	0x64, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x69, 0x64, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1c, 0x0a,
	0x09, 0x68, 0x61, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x68, 0x61, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x6f,
	0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x2c, 0x0a, 0x11, 0x68, 0x61, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69,
	0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11,
	0x68, 0x61, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x22, 0x27, 0x0a, 0x0f, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x22, 0x21, 0x0a, 0x0d, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x22, 0x0d, 0x0a,
	0x0b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x0a, 0x0a,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x22, 0x20, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x22, 0x4c,
	0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x0e, 0x0a, 0x0c,
	0x53, 0x65, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x0e, 0x0a, 0x0c,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0c, 0x0a, 0x0a,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x27, 0x0a, 0x0f, 0x41, 0x64,
	0x64, 0x54, 0x6f, 0x48, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x22, 0x21, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x48, 0x6f, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x2a, 0x4d, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x0a, 0x0a, 0x06, 0x51, 0x75, 0x65, 0x75, 0x65, 0x64, 0x10, 0x00, 0x12,
	0x0d, 0x0a, 0x09, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x0a,
	0x0a, 0x06, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x10, 0x04, 0x32, 0x8a, 0x0a, 0x0a, 0x03, 0x52, 0x50, 0x43, 0x12, 0x38, 0x0a,
	0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x07, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x50, 0x49, 0x12, 0x17, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x50, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x66, 0x66,
	0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x50, 0x49, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x02, 0x49, 0x44, 0x12, 0x12, 0x2e, 0x66, 0x66, 0x73,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10,
	0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x35, 0x0a, 0x05, 0x41, 0x64, 0x64, 0x72, 0x73, 0x12, 0x15, 0x2e, 0x66, 0x66,
	0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x13, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64,
	0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0d, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x2e, 0x66, 0x66, 0x73,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x66, 0x66, 0x73, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x07, 0x4e, 0x65, 0x77, 0x41,
	0x64, 0x64, 0x72, 0x12, 0x17, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x65,
	0x77, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x66,
	0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x65, 0x77, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x43, 0x69, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x23, 0x2e, 0x66,
	0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x43, 0x69, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x69, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x69, 0x64,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1c, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x69, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x69, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x56, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x20, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x04, 0x53, 0x68,
	0x6f, 0x77, 0x12, 0x14, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x68, 0x6f,
	0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x32,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x66,
	0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x43, 0x0a, 0x09, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4a, 0x6f, 0x62, 0x73, 0x12,
	0x19, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4a,
	0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x66, 0x66, 0x73,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x30, 0x01, 0x12, 0x43, 0x0a, 0x09, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x4c, 0x6f, 0x67, 0x73, 0x12, 0x19, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4c,
	0x6f, 0x67, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3b, 0x0a, 0x07,
	0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x17, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x15, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0a, 0x50, 0x75, 0x73,
	0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x75,
	0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x38, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x16, 0x2e, 0x66, 0x66, 0x73, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x03, 0x47, 0x65, 0x74,
	0x12, 0x13, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3b, 0x0a, 0x07,
	0x53, 0x65, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x12, 0x17, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x15, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x46,
	0x69, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x05, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x12, 0x15, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x66, 0x66, 0x73, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x40, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x48, 0x6f, 0x74, 0x12, 0x18, 0x2e, 0x66,
	0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x48, 0x6f, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x48, 0x6f, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x28, 0x01, 0x42, 0x09, 0x5a, 0x07, 0x66, 0x66, 0x73, 0x2f, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ffs_rpc_rpc_proto_rawDescOnce sync.Once
	file_ffs_rpc_rpc_proto_rawDescData = file_ffs_rpc_rpc_proto_rawDesc
)

func file_ffs_rpc_rpc_proto_rawDescGZIP() []byte {
	file_ffs_rpc_rpc_proto_rawDescOnce.Do(func() {
		file_ffs_rpc_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_ffs_rpc_rpc_proto_rawDescData)
	})
	return file_ffs_rpc_rpc_proto_rawDescData
}

var file_ffs_rpc_rpc_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ffs_rpc_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 59)
var file_ffs_rpc_rpc_proto_goTypes = []interface{}{
	(JobStatus)(0),                     // 0: ffs.rpc.JobStatus
	(*AddrInfo)(nil),                   // 1: ffs.rpc.AddrInfo
	(*IpfsConfig)(nil),                 // 2: ffs.rpc.IpfsConfig
	(*HotConfig)(nil),                  // 3: ffs.rpc.HotConfig
	(*FilRenew)(nil),                   // 4: ffs.rpc.FilRenew
	(*FilConfig)(nil),                  // 5: ffs.rpc.FilConfig
	(*ColdConfig)(nil),                 // 6: ffs.rpc.ColdConfig
	(*CidConfig)(nil),                  // 7: ffs.rpc.CidConfig
	(*DefaultConfig)(nil),              // 8: ffs.rpc.DefaultConfig
	(*IpfsHotInfo)(nil),                // 9: ffs.rpc.IpfsHotInfo
	(*HotInfo)(nil),                    // 10: ffs.rpc.HotInfo
	(*FilStorage)(nil),                 // 11: ffs.rpc.FilStorage
	(*FilInfo)(nil),                    // 12: ffs.rpc.FilInfo
	(*ColdInfo)(nil),                   // 13: ffs.rpc.ColdInfo
	(*CidInfo)(nil),                    // 14: ffs.rpc.CidInfo
	(*BalanceInfo)(nil),                // 15: ffs.rpc.BalanceInfo
	(*InstanceInfo)(nil),               // 16: ffs.rpc.InstanceInfo
	(*Job)(nil),                        // 17: ffs.rpc.Job
	(*DealError)(nil),                  // 18: ffs.rpc.DealError
	(*CreateRequest)(nil),              // 19: ffs.rpc.CreateRequest
	(*CreateReply)(nil),                // 20: ffs.rpc.CreateReply
	(*ListAPIRequest)(nil),             // 21: ffs.rpc.ListAPIRequest
	(*ListAPIReply)(nil),               // 22: ffs.rpc.ListAPIReply
	(*IDRequest)(nil),                  // 23: ffs.rpc.IDRequest
	(*IDReply)(nil),                    // 24: ffs.rpc.IDReply
	(*AddrsRequest)(nil),               // 25: ffs.rpc.AddrsRequest
	(*AddrsReply)(nil),                 // 26: ffs.rpc.AddrsReply
	(*DefaultConfigRequest)(nil),       // 27: ffs.rpc.DefaultConfigRequest
	(*DefaultConfigReply)(nil),         // 28: ffs.rpc.DefaultConfigReply
	(*NewAddrRequest)(nil),             // 29: ffs.rpc.NewAddrRequest
	(*NewAddrReply)(nil),               // 30: ffs.rpc.NewAddrReply
	(*GetDefaultCidConfigRequest)(nil), // 31: ffs.rpc.GetDefaultCidConfigRequest
	(*GetDefaultCidConfigReply)(nil),   // 32: ffs.rpc.GetDefaultCidConfigReply
	(*GetCidConfigRequest)(nil),        // 33: ffs.rpc.GetCidConfigRequest
	(*GetCidConfigReply)(nil),          // 34: ffs.rpc.GetCidConfigReply
	(*SetDefaultConfigRequest)(nil),    // 35: ffs.rpc.SetDefaultConfigRequest
	(*SetDefaultConfigReply)(nil),      // 36: ffs.rpc.SetDefaultConfigReply
	(*ShowRequest)(nil),                // 37: ffs.rpc.ShowRequest
	(*ShowReply)(nil),                  // 38: ffs.rpc.ShowReply
	(*InfoRequest)(nil),                // 39: ffs.rpc.InfoRequest
	(*InfoReply)(nil),                  // 40: ffs.rpc.InfoReply
	(*WatchJobsRequest)(nil),           // 41: ffs.rpc.WatchJobsRequest
	(*WatchJobsReply)(nil),             // 42: ffs.rpc.WatchJobsReply
	(*WatchLogsRequest)(nil),           // 43: ffs.rpc.WatchLogsRequest
	(*WatchLogsReply)(nil),             // 44: ffs.rpc.WatchLogsReply
	(*LogEntry)(nil),                   // 45: ffs.rpc.LogEntry
	(*ReplaceRequest)(nil),             // 46: ffs.rpc.ReplaceRequest
	(*ReplaceReply)(nil),               // 47: ffs.rpc.ReplaceReply
	(*PushConfigRequest)(nil),          // 48: ffs.rpc.PushConfigRequest
	(*PushConfigReply)(nil),            // 49: ffs.rpc.PushConfigReply
	(*RemoveRequest)(nil),              // 50: ffs.rpc.RemoveRequest
	(*RemoveReply)(nil),                // 51: ffs.rpc.RemoveReply
	(*GetRequest)(nil),                 // 52: ffs.rpc.GetRequest
	(*GetReply)(nil),                   // 53: ffs.rpc.GetReply
	(*SendFilRequest)(nil),             // 54: ffs.rpc.SendFilRequest
	(*SendFilReply)(nil),               // 55: ffs.rpc.SendFilReply
	(*CloseRequest)(nil),               // 56: ffs.rpc.CloseRequest
	(*CloseReply)(nil),                 // 57: ffs.rpc.CloseReply
	(*AddToHotRequest)(nil),            // 58: ffs.rpc.AddToHotRequest
	(*AddToHotReply)(nil),              // 59: ffs.rpc.AddToHotReply
}
var file_ffs_rpc_rpc_proto_depIdxs = []int32{
	2,  // 0: ffs.rpc.HotConfig.ipfs:type_name -> ffs.rpc.IpfsConfig
	4,  // 1: ffs.rpc.FilConfig.renew:type_name -> ffs.rpc.FilRenew
	5,  // 2: ffs.rpc.ColdConfig.filecoin:type_name -> ffs.rpc.FilConfig
	3,  // 3: ffs.rpc.CidConfig.hot:type_name -> ffs.rpc.HotConfig
	6,  // 4: ffs.rpc.CidConfig.cold:type_name -> ffs.rpc.ColdConfig
	3,  // 5: ffs.rpc.DefaultConfig.hot:type_name -> ffs.rpc.HotConfig
	6,  // 6: ffs.rpc.DefaultConfig.cold:type_name -> ffs.rpc.ColdConfig
	9,  // 7: ffs.rpc.HotInfo.ipfs:type_name -> ffs.rpc.IpfsHotInfo
	11, // 8: ffs.rpc.FilInfo.proposals:type_name -> ffs.rpc.FilStorage
	12, // 9: ffs.rpc.ColdInfo.filecoin:type_name -> ffs.rpc.FilInfo
	10, // 10: ffs.rpc.CidInfo.hot:type_name -> ffs.rpc.HotInfo
	13, // 11: ffs.rpc.CidInfo.cold:type_name -> ffs.rpc.ColdInfo
	1,  // 12: ffs.rpc.BalanceInfo.addr:type_name -> ffs.rpc.AddrInfo
	8,  // 13: ffs.rpc.InstanceInfo.defaultConfig:type_name -> ffs.rpc.DefaultConfig
	15, // 14: ffs.rpc.InstanceInfo.balances:type_name -> ffs.rpc.BalanceInfo
	0,  // 15: ffs.rpc.Job.status:type_name -> ffs.rpc.JobStatus
	18, // 16: ffs.rpc.Job.dealErrors:type_name -> ffs.rpc.DealError
	1,  // 17: ffs.rpc.AddrsReply.addrs:type_name -> ffs.rpc.AddrInfo
	8,  // 18: ffs.rpc.DefaultConfigReply.defaultConfig:type_name -> ffs.rpc.DefaultConfig
	7,  // 19: ffs.rpc.GetDefaultCidConfigReply.config:type_name -> ffs.rpc.CidConfig
	7,  // 20: ffs.rpc.GetCidConfigReply.config:type_name -> ffs.rpc.CidConfig
	8,  // 21: ffs.rpc.SetDefaultConfigRequest.config:type_name -> ffs.rpc.DefaultConfig
	14, // 22: ffs.rpc.ShowReply.cidInfo:type_name -> ffs.rpc.CidInfo
	16, // 23: ffs.rpc.InfoReply.info:type_name -> ffs.rpc.InstanceInfo
	17, // 24: ffs.rpc.WatchJobsReply.job:type_name -> ffs.rpc.Job
	45, // 25: ffs.rpc.WatchLogsReply.logEntry:type_name -> ffs.rpc.LogEntry
	7,  // 26: ffs.rpc.PushConfigRequest.config:type_name -> ffs.rpc.CidConfig
	19, // 27: ffs.rpc.RPC.Create:input_type -> ffs.rpc.CreateRequest
	21, // 28: ffs.rpc.RPC.ListAPI:input_type -> ffs.rpc.ListAPIRequest
	23, // 29: ffs.rpc.RPC.ID:input_type -> ffs.rpc.IDRequest
	25, // 30: ffs.rpc.RPC.Addrs:input_type -> ffs.rpc.AddrsRequest
	27, // 31: ffs.rpc.RPC.DefaultConfig:input_type -> ffs.rpc.DefaultConfigRequest
	29, // 32: ffs.rpc.RPC.NewAddr:input_type -> ffs.rpc.NewAddrRequest
	31, // 33: ffs.rpc.RPC.GetDefaultCidConfig:input_type -> ffs.rpc.GetDefaultCidConfigRequest
	33, // 34: ffs.rpc.RPC.GetCidConfig:input_type -> ffs.rpc.GetCidConfigRequest
	35, // 35: ffs.rpc.RPC.SetDefaultConfig:input_type -> ffs.rpc.SetDefaultConfigRequest
	37, // 36: ffs.rpc.RPC.Show:input_type -> ffs.rpc.ShowRequest
	39, // 37: ffs.rpc.RPC.Info:input_type -> ffs.rpc.InfoRequest
	41, // 38: ffs.rpc.RPC.WatchJobs:input_type -> ffs.rpc.WatchJobsRequest
	43, // 39: ffs.rpc.RPC.WatchLogs:input_type -> ffs.rpc.WatchLogsRequest
	46, // 40: ffs.rpc.RPC.Replace:input_type -> ffs.rpc.ReplaceRequest
	48, // 41: ffs.rpc.RPC.PushConfig:input_type -> ffs.rpc.PushConfigRequest
	50, // 42: ffs.rpc.RPC.Remove:input_type -> ffs.rpc.RemoveRequest
	52, // 43: ffs.rpc.RPC.Get:input_type -> ffs.rpc.GetRequest
	54, // 44: ffs.rpc.RPC.SendFil:input_type -> ffs.rpc.SendFilRequest
	56, // 45: ffs.rpc.RPC.Close:input_type -> ffs.rpc.CloseRequest
	58, // 46: ffs.rpc.RPC.AddToHot:input_type -> ffs.rpc.AddToHotRequest
	20, // 47: ffs.rpc.RPC.Create:output_type -> ffs.rpc.CreateReply
	22, // 48: ffs.rpc.RPC.ListAPI:output_type -> ffs.rpc.ListAPIReply
	24, // 49: ffs.rpc.RPC.ID:output_type -> ffs.rpc.IDReply
	26, // 50: ffs.rpc.RPC.Addrs:output_type -> ffs.rpc.AddrsReply
	28, // 51: ffs.rpc.RPC.DefaultConfig:output_type -> ffs.rpc.DefaultConfigReply
	30, // 52: ffs.rpc.RPC.NewAddr:output_type -> ffs.rpc.NewAddrReply
	32, // 53: ffs.rpc.RPC.GetDefaultCidConfig:output_type -> ffs.rpc.GetDefaultCidConfigReply
	34, // 54: ffs.rpc.RPC.GetCidConfig:output_type -> ffs.rpc.GetCidConfigReply
	36, // 55: ffs.rpc.RPC.SetDefaultConfig:output_type -> ffs.rpc.SetDefaultConfigReply
	38, // 56: ffs.rpc.RPC.Show:output_type -> ffs.rpc.ShowReply
	40, // 57: ffs.rpc.RPC.Info:output_type -> ffs.rpc.InfoReply
	42, // 58: ffs.rpc.RPC.WatchJobs:output_type -> ffs.rpc.WatchJobsReply
	44, // 59: ffs.rpc.RPC.WatchLogs:output_type -> ffs.rpc.WatchLogsReply
	47, // 60: ffs.rpc.RPC.Replace:output_type -> ffs.rpc.ReplaceReply
	49, // 61: ffs.rpc.RPC.PushConfig:output_type -> ffs.rpc.PushConfigReply
	51, // 62: ffs.rpc.RPC.Remove:output_type -> ffs.rpc.RemoveReply
	53, // 63: ffs.rpc.RPC.Get:output_type -> ffs.rpc.GetReply
	55, // 64: ffs.rpc.RPC.SendFil:output_type -> ffs.rpc.SendFilReply
	57, // 65: ffs.rpc.RPC.Close:output_type -> ffs.rpc.CloseReply
	59, // 66: ffs.rpc.RPC.AddToHot:output_type -> ffs.rpc.AddToHotReply
	47, // [47:67] is the sub-list for method output_type
	27, // [27:47] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_ffs_rpc_rpc_proto_init() }
func file_ffs_rpc_rpc_proto_init() {
	if File_ffs_rpc_rpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ffs_rpc_rpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddrInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IpfsConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HotConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilRenew); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColdConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CidConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IpfsHotInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HotInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilStorage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColdInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CidInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Job); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DealError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAPIRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAPIReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IDReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddrsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddrsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewAddrRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewAddrReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultCidConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultCidConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCidConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCidConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDefaultConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDefaultConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchJobsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchJobsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchLogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchLogsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplaceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendFilRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendFilReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddToHotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddToHotReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ffs_rpc_rpc_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   59,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ffs_rpc_rpc_proto_goTypes,
		DependencyIndexes: file_ffs_rpc_rpc_proto_depIdxs,
		EnumInfos:         file_ffs_rpc_rpc_proto_enumTypes,
		MessageInfos:      file_ffs_rpc_rpc_proto_msgTypes,
	}.Build()
	File_ffs_rpc_rpc_proto = out.File
	file_ffs_rpc_rpc_proto_rawDesc = nil
	file_ffs_rpc_rpc_proto_goTypes = nil
	file_ffs_rpc_rpc_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RPCClient is the client API for RPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCClient interface {
	// Admin
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateReply, error)
	ListAPI(ctx context.Context, in *ListAPIRequest, opts ...grpc.CallOption) (*ListAPIReply, error)
	// Instance
	ID(ctx context.Context, in *IDRequest, opts ...grpc.CallOption) (*IDReply, error)
	Addrs(ctx context.Context, in *AddrsRequest, opts ...grpc.CallOption) (*AddrsReply, error)
	DefaultConfig(ctx context.Context, in *DefaultConfigRequest, opts ...grpc.CallOption) (*DefaultConfigReply, error)
	NewAddr(ctx context.Context, in *NewAddrRequest, opts ...grpc.CallOption) (*NewAddrReply, error)
	GetDefaultCidConfig(ctx context.Context, in *GetDefaultCidConfigRequest, opts ...grpc.CallOption) (*GetDefaultCidConfigReply, error)
	GetCidConfig(ctx context.Context, in *GetCidConfigRequest, opts ...grpc.CallOption) (*GetCidConfigReply, error)
	SetDefaultConfig(ctx context.Context, in *SetDefaultConfigRequest, opts ...grpc.CallOption) (*SetDefaultConfigReply, error)
	Show(ctx context.Context, in *ShowRequest, opts ...grpc.CallOption) (*ShowReply, error)
	Info(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*InfoReply, error)
	WatchJobs(ctx context.Context, in *WatchJobsRequest, opts ...grpc.CallOption) (RPC_WatchJobsClient, error)
	WatchLogs(ctx context.Context, in *WatchLogsRequest, opts ...grpc.CallOption) (RPC_WatchLogsClient, error)
	Replace(ctx context.Context, in *ReplaceRequest, opts ...grpc.CallOption) (*ReplaceReply, error)
	PushConfig(ctx context.Context, in *PushConfigRequest, opts ...grpc.CallOption) (*PushConfigReply, error)
	Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveReply, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (RPC_GetClient, error)
	SendFil(ctx context.Context, in *SendFilRequest, opts ...grpc.CallOption) (*SendFilReply, error)
	Close(ctx context.Context, in *CloseRequest, opts ...grpc.CallOption) (*CloseReply, error)
	AddToHot(ctx context.Context, opts ...grpc.CallOption) (RPC_AddToHotClient, error)
}

type rPCClient struct {
	cc grpc.ClientConnInterface
}

func NewRPCClient(cc grpc.ClientConnInterface) RPCClient {
	return &rPCClient{cc}
}

func (c *rPCClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateReply, error) {
	out := new(CreateReply)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPC/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) ListAPI(ctx context.Context, in *ListAPIRequest, opts ...grpc.CallOption) (*ListAPIReply, error) {
	out := new(ListAPIReply)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPC/ListAPI", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) ID(ctx context.Context, in *IDRequest, opts ...grpc.CallOption) (*IDReply, error) {
	out := new(IDReply)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPC/ID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) Addrs(ctx context.Context, in *AddrsRequest, opts ...grpc.CallOption) (*AddrsReply, error) {
	out := new(AddrsReply)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPC/Addrs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) DefaultConfig(ctx context.Context, in *DefaultConfigRequest, opts ...grpc.CallOption) (*DefaultConfigReply, error) {
	out := new(DefaultConfigReply)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPC/DefaultConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) NewAddr(ctx context.Context, in *NewAddrRequest, opts ...grpc.CallOption) (*NewAddrReply, error) {
	out := new(NewAddrReply)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPC/NewAddr", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) GetDefaultCidConfig(ctx context.Context, in *GetDefaultCidConfigRequest, opts ...grpc.CallOption) (*GetDefaultCidConfigReply, error) {
	out := new(GetDefaultCidConfigReply)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPC/GetDefaultCidConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) GetCidConfig(ctx context.Context, in *GetCidConfigRequest, opts ...grpc.CallOption) (*GetCidConfigReply, error) {
	out := new(GetCidConfigReply)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPC/GetCidConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) SetDefaultConfig(ctx context.Context, in *SetDefaultConfigRequest, opts ...grpc.CallOption) (*SetDefaultConfigReply, error) {
	out := new(SetDefaultConfigReply)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPC/SetDefaultConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) Show(ctx context.Context, in *ShowRequest, opts ...grpc.CallOption) (*ShowReply, error) {
	out := new(ShowReply)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPC/Show", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) Info(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*InfoReply, error) {
	out := new(InfoReply)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPC/Info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) WatchJobs(ctx context.Context, in *WatchJobsRequest, opts ...grpc.CallOption) (RPC_WatchJobsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RPC_serviceDesc.Streams[0], "/ffs.rpc.RPC/WatchJobs", opts...)
	if err != nil {
		return nil, err
	}
	x := &rPCWatchJobsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RPC_WatchJobsClient interface {
	Recv() (*WatchJobsReply, error)
	grpc.ClientStream
}

type rPCWatchJobsClient struct {
	grpc.ClientStream
}

func (x *rPCWatchJobsClient) Recv() (*WatchJobsReply, error) {
	m := new(WatchJobsReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rPCClient) WatchLogs(ctx context.Context, in *WatchLogsRequest, opts ...grpc.CallOption) (RPC_WatchLogsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RPC_serviceDesc.Streams[1], "/ffs.rpc.RPC/WatchLogs", opts...)
	if err != nil {
		return nil, err
	}
	x := &rPCWatchLogsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RPC_WatchLogsClient interface {
	Recv() (*WatchLogsReply, error)
	grpc.ClientStream
}

type rPCWatchLogsClient struct {
	grpc.ClientStream
}

func (x *rPCWatchLogsClient) Recv() (*WatchLogsReply, error) {
	m := new(WatchLogsReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rPCClient) Replace(ctx context.Context, in *ReplaceRequest, opts ...grpc.CallOption) (*ReplaceReply, error) {
	out := new(ReplaceReply)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPC/Replace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) PushConfig(ctx context.Context, in *PushConfigRequest, opts ...grpc.CallOption) (*PushConfigReply, error) {
	out := new(PushConfigReply)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPC/PushConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveReply, error) {
	out := new(RemoveReply)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPC/Remove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (RPC_GetClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RPC_serviceDesc.Streams[2], "/ffs.rpc.RPC/Get", opts...)
	if err != nil {
		return nil, err
	}
	x := &rPCGetClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RPC_GetClient interface {
	Recv() (*GetReply, error)
	grpc.ClientStream
}

type rPCGetClient struct {
	grpc.ClientStream
}

func (x *rPCGetClient) Recv() (*GetReply, error) {
	m := new(GetReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rPCClient) SendFil(ctx context.Context, in *SendFilRequest, opts ...grpc.CallOption) (*SendFilReply, error) {
	out := new(SendFilReply)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPC/SendFil", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) Close(ctx context.Context, in *CloseRequest, opts ...grpc.CallOption) (*CloseReply, error) {
	out := new(CloseReply)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPC/Close", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) AddToHot(ctx context.Context, opts ...grpc.CallOption) (RPC_AddToHotClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RPC_serviceDesc.Streams[3], "/ffs.rpc.RPC/AddToHot", opts...)
	if err != nil {
		return nil, err
	}
	x := &rPCAddToHotClient{stream}
	return x, nil
}

type RPC_AddToHotClient interface {
	Send(*AddToHotRequest) error
	CloseAndRecv() (*AddToHotReply, error)
	grpc.ClientStream
}

type rPCAddToHotClient struct {
	grpc.ClientStream
}

func (x *rPCAddToHotClient) Send(m *AddToHotRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *rPCAddToHotClient) CloseAndRecv() (*AddToHotReply, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(AddToHotReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RPCServer is the server API for RPC service.
type RPCServer interface {
	// Admin
	Create(context.Context, *CreateRequest) (*CreateReply, error)
	ListAPI(context.Context, *ListAPIRequest) (*ListAPIReply, error)
	// Instance
	ID(context.Context, *IDRequest) (*IDReply, error)
	Addrs(context.Context, *AddrsRequest) (*AddrsReply, error)
	DefaultConfig(context.Context, *DefaultConfigRequest) (*DefaultConfigReply, error)
	NewAddr(context.Context, *NewAddrRequest) (*NewAddrReply, error)
	GetDefaultCidConfig(context.Context, *GetDefaultCidConfigRequest) (*GetDefaultCidConfigReply, error)
	GetCidConfig(context.Context, *GetCidConfigRequest) (*GetCidConfigReply, error)
	SetDefaultConfig(context.Context, *SetDefaultConfigRequest) (*SetDefaultConfigReply, error)
	Show(context.Context, *ShowRequest) (*ShowReply, error)
	Info(context.Context, *InfoRequest) (*InfoReply, error)
	WatchJobs(*WatchJobsRequest, RPC_WatchJobsServer) error
	WatchLogs(*WatchLogsRequest, RPC_WatchLogsServer) error
	Replace(context.Context, *ReplaceRequest) (*ReplaceReply, error)
	PushConfig(context.Context, *PushConfigRequest) (*PushConfigReply, error)
	Remove(context.Context, *RemoveRequest) (*RemoveReply, error)
	Get(*GetRequest, RPC_GetServer) error
	SendFil(context.Context, *SendFilRequest) (*SendFilReply, error)
	Close(context.Context, *CloseRequest) (*CloseReply, error)
	AddToHot(RPC_AddToHotServer) error
}

// UnimplementedRPCServer can be embedded to have forward compatible implementations.
type UnimplementedRPCServer struct {
}

func (*UnimplementedRPCServer) Create(context.Context, *CreateRequest) (*CreateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedRPCServer) ListAPI(context.Context, *ListAPIRequest) (*ListAPIReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAPI not implemented")
}
func (*UnimplementedRPCServer) ID(context.Context, *IDRequest) (*IDReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ID not implemented")
}
func (*UnimplementedRPCServer) Addrs(context.Context, *AddrsRequest) (*AddrsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Addrs not implemented")
}
func (*UnimplementedRPCServer) DefaultConfig(context.Context, *DefaultConfigRequest) (*DefaultConfigReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DefaultConfig not implemented")
}
func (*UnimplementedRPCServer) NewAddr(context.Context, *NewAddrRequest) (*NewAddrReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewAddr not implemented")
}
func (*UnimplementedRPCServer) GetDefaultCidConfig(context.Context, *GetDefaultCidConfigRequest) (*GetDefaultCidConfigReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDefaultCidConfig not implemented")
}
func (*UnimplementedRPCServer) GetCidConfig(context.Context, *GetCidConfigRequest) (*GetCidConfigReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCidConfig not implemented")
}
func (*UnimplementedRPCServer) SetDefaultConfig(context.Context, *SetDefaultConfigRequest) (*SetDefaultConfigReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetDefaultConfig not implemented")
}
func (*UnimplementedRPCServer) Show(context.Context, *ShowRequest) (*ShowReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Show not implemented")
}
func (*UnimplementedRPCServer) Info(context.Context, *InfoRequest) (*InfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Info not implemented")
}
func (*UnimplementedRPCServer) WatchJobs(*WatchJobsRequest, RPC_WatchJobsServer) error {
	return status.Errorf(codes.Unimplemented, "method WatchJobs not implemented")
}
func (*UnimplementedRPCServer) WatchLogs(*WatchLogsRequest, RPC_WatchLogsServer) error {
	return status.Errorf(codes.Unimplemented, "method WatchLogs not implemented")
}
func (*UnimplementedRPCServer) Replace(context.Context, *ReplaceRequest) (*ReplaceReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Replace not implemented")
}
func (*UnimplementedRPCServer) PushConfig(context.Context, *PushConfigRequest) (*PushConfigReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushConfig not implemented")
}
func (*UnimplementedRPCServer) Remove(context.Context, *RemoveRequest) (*RemoveReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Remove not implemented")
}
func (*UnimplementedRPCServer) Get(*GetRequest, RPC_GetServer) error {
	return status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedRPCServer) SendFil(context.Context, *SendFilRequest) (*SendFilReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendFil not implemented")
}
func (*UnimplementedRPCServer) Close(context.Context, *CloseRequest) (*CloseReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Close not implemented")
}
func (*UnimplementedRPCServer) AddToHot(RPC_AddToHotServer) error {
	return status.Errorf(codes.Unimplemented, "method AddToHot not implemented")
}

func RegisterRPCServer(s *grpc.Server, srv RPCServer) {
	s.RegisterService(&_RPC_serviceDesc, srv)
}

func _RPC_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPC/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_ListAPI_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAPIRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).ListAPI(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPC/ListAPI",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).ListAPI(ctx, req.(*ListAPIRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_ID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).ID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPC/ID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).ID(ctx, req.(*IDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_Addrs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddrsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).Addrs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPC/Addrs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).Addrs(ctx, req.(*AddrsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_DefaultConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DefaultConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).DefaultConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPC/DefaultConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).DefaultConfig(ctx, req.(*DefaultConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_NewAddr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewAddrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).NewAddr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPC/NewAddr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).NewAddr(ctx, req.(*NewAddrRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_GetDefaultCidConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDefaultCidConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).GetDefaultCidConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPC/GetDefaultCidConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).GetDefaultCidConfig(ctx, req.(*GetDefaultCidConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_GetCidConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCidConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).GetCidConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPC/GetCidConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).GetCidConfig(ctx, req.(*GetCidConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_SetDefaultConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetDefaultConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).SetDefaultConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPC/SetDefaultConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).SetDefaultConfig(ctx, req.(*SetDefaultConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_Show_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).Show(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPC/Show",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).Show(ctx, req.(*ShowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPC/Info",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).Info(ctx, req.(*InfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_WatchJobs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchJobsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RPCServer).WatchJobs(m, &rPCWatchJobsServer{stream})
}

type RPC_WatchJobsServer interface {
	Send(*WatchJobsReply) error
	grpc.ServerStream
}

type rPCWatchJobsServer struct {
	grpc.ServerStream
}

func (x *rPCWatchJobsServer) Send(m *WatchJobsReply) error {
	return x.ServerStream.SendMsg(m)
}

func _RPC_WatchLogs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchLogsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RPCServer).WatchLogs(m, &rPCWatchLogsServer{stream})
}

type RPC_WatchLogsServer interface {
	Send(*WatchLogsReply) error
	grpc.ServerStream
}

type rPCWatchLogsServer struct {
	grpc.ServerStream
}

func (x *rPCWatchLogsServer) Send(m *WatchLogsReply) error {
	return x.ServerStream.SendMsg(m)
}

func _RPC_Replace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).Replace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPC/Replace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).Replace(ctx, req.(*ReplaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_PushConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).PushConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPC/PushConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).PushConfig(ctx, req.(*PushConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPC/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).Remove(ctx, req.(*RemoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_Get_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RPCServer).Get(m, &rPCGetServer{stream})
}

type RPC_GetServer interface {
	Send(*GetReply) error
	grpc.ServerStream
}

type rPCGetServer struct {
	grpc.ServerStream
}

func (x *rPCGetServer) Send(m *GetReply) error {
	return x.ServerStream.SendMsg(m)
}

func _RPC_SendFil_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendFilRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).SendFil(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPC/SendFil",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).SendFil(ctx, req.(*SendFilRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_Close_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).Close(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPC/Close",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).Close(ctx, req.(*CloseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_AddToHot_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RPCServer).AddToHot(&rPCAddToHotServer{stream})
}

type RPC_AddToHotServer interface {
	SendAndClose(*AddToHotReply) error
	Recv() (*AddToHotRequest, error)
	grpc.ServerStream
}

type rPCAddToHotServer struct {
	grpc.ServerStream
}

func (x *rPCAddToHotServer) SendAndClose(m *AddToHotReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *rPCAddToHotServer) Recv() (*AddToHotRequest, error) {
	m := new(AddToHotRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _RPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ffs.rpc.RPC",
	HandlerType: (*RPCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _RPC_Create_Handler,
		},
		{
			MethodName: "ListAPI",
			Handler:    _RPC_ListAPI_Handler,
		},
		{
			MethodName: "ID",
			Handler:    _RPC_ID_Handler,
		},
		{
			MethodName: "Addrs",
			Handler:    _RPC_Addrs_Handler,
		},
		{
			MethodName: "DefaultConfig",
			Handler:    _RPC_DefaultConfig_Handler,
		},
		{
			MethodName: "NewAddr",
			Handler:    _RPC_NewAddr_Handler,
		},
		{
			MethodName: "GetDefaultCidConfig",
			Handler:    _RPC_GetDefaultCidConfig_Handler,
		},
		{
			MethodName: "GetCidConfig",
			Handler:    _RPC_GetCidConfig_Handler,
		},
		{
			MethodName: "SetDefaultConfig",
			Handler:    _RPC_SetDefaultConfig_Handler,
		},
		{
			MethodName: "Show",
			Handler:    _RPC_Show_Handler,
		},
		{
			MethodName: "Info",
			Handler:    _RPC_Info_Handler,
		},
		{
			MethodName: "Replace",
			Handler:    _RPC_Replace_Handler,
		},
		{
			MethodName: "PushConfig",
			Handler:    _RPC_PushConfig_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _RPC_Remove_Handler,
		},
		{
			MethodName: "SendFil",
			Handler:    _RPC_SendFil_Handler,
		},
		{
			MethodName: "Close",
			Handler:    _RPC_Close_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchJobs",
			Handler:       _RPC_WatchJobs_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "WatchLogs",
			Handler:       _RPC_WatchLogs_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Get",
			Handler:       _RPC_Get_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "AddToHot",
			Handler:       _RPC_AddToHot_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "ffs/rpc/rpc.proto",
}
