// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.1
// source: ffs/rpc/rpc.proto

package rpc

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type JobStatus int32

const (
	JobStatus_JOB_STATUS_UNSPECIFIED JobStatus = 0
	JobStatus_JOB_STATUS_QUEUED      JobStatus = 1
	JobStatus_JOB_STATUS_EXECUTING   JobStatus = 2
	JobStatus_JOB_STATUS_FAILED      JobStatus = 3
	JobStatus_JOB_STATUS_CANCELED    JobStatus = 4
	JobStatus_JOB_STATUS_SUCCESS     JobStatus = 5
)

// Enum value maps for JobStatus.
var (
	JobStatus_name = map[int32]string{
		0: "JOB_STATUS_UNSPECIFIED",
		1: "JOB_STATUS_QUEUED",
		2: "JOB_STATUS_EXECUTING",
		3: "JOB_STATUS_FAILED",
		4: "JOB_STATUS_CANCELED",
		5: "JOB_STATUS_SUCCESS",
	}
	JobStatus_value = map[string]int32{
		"JOB_STATUS_UNSPECIFIED": 0,
		"JOB_STATUS_QUEUED":      1,
		"JOB_STATUS_EXECUTING":   2,
		"JOB_STATUS_FAILED":      3,
		"JOB_STATUS_CANCELED":    4,
		"JOB_STATUS_SUCCESS":     5,
	}
)

func (x JobStatus) Enum() *JobStatus {
	p := new(JobStatus)
	*p = x
	return p
}

func (x JobStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_ffs_rpc_rpc_proto_enumTypes[0].Descriptor()
}

func (JobStatus) Type() protoreflect.EnumType {
	return &file_ffs_rpc_rpc_proto_enumTypes[0]
}

func (x JobStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobStatus.Descriptor instead.
func (JobStatus) EnumDescriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{0}
}

type Direction int32

const (
	Direction_DIRECTION_UNSPECIFIED Direction = 0
	Direction_DIRECTION_INBOUND     Direction = 1
	Direction_DIRECTION_OUTBOUND    Direction = 2
)

// Enum value maps for Direction.
var (
	Direction_name = map[int32]string{
		0: "DIRECTION_UNSPECIFIED",
		1: "DIRECTION_INBOUND",
		2: "DIRECTION_OUTBOUND",
	}
	Direction_value = map[string]int32{
		"DIRECTION_UNSPECIFIED": 0,
		"DIRECTION_INBOUND":     1,
		"DIRECTION_OUTBOUND":    2,
	}
)

func (x Direction) Enum() *Direction {
	p := new(Direction)
	*p = x
	return p
}

func (x Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_ffs_rpc_rpc_proto_enumTypes[1].Descriptor()
}

func (Direction) Type() protoreflect.EnumType {
	return &file_ffs_rpc_rpc_proto_enumTypes[1]
}

func (x Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Direction.Descriptor instead.
func (Direction) EnumDescriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{1}
}

type AddrInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Addr string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *AddrInfo) Reset() {
	*x = AddrInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddrInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddrInfo) ProtoMessage() {}

func (x *AddrInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddrInfo.ProtoReflect.Descriptor instead.
func (*AddrInfo) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{0}
}

func (x *AddrInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddrInfo) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *AddrInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type IpfsConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddTimeout int64 `protobuf:"varint,1,opt,name=add_timeout,json=addTimeout,proto3" json:"add_timeout,omitempty"`
}

func (x *IpfsConfig) Reset() {
	*x = IpfsConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IpfsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpfsConfig) ProtoMessage() {}

func (x *IpfsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IpfsConfig.ProtoReflect.Descriptor instead.
func (*IpfsConfig) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{1}
}

func (x *IpfsConfig) GetAddTimeout() int64 {
	if x != nil {
		return x.AddTimeout
	}
	return 0
}

type HotConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled       bool        `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	AllowUnfreeze bool        `protobuf:"varint,2,opt,name=allow_unfreeze,json=allowUnfreeze,proto3" json:"allow_unfreeze,omitempty"`
	Ipfs          *IpfsConfig `protobuf:"bytes,3,opt,name=ipfs,proto3" json:"ipfs,omitempty"`
}

func (x *HotConfig) Reset() {
	*x = HotConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HotConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HotConfig) ProtoMessage() {}

func (x *HotConfig) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HotConfig.ProtoReflect.Descriptor instead.
func (*HotConfig) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{2}
}

func (x *HotConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *HotConfig) GetAllowUnfreeze() bool {
	if x != nil {
		return x.AllowUnfreeze
	}
	return false
}

func (x *HotConfig) GetIpfs() *IpfsConfig {
	if x != nil {
		return x.Ipfs
	}
	return nil
}

type FilRenew struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled   bool  `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Threshold int64 `protobuf:"varint,2,opt,name=threshold,proto3" json:"threshold,omitempty"`
}

func (x *FilRenew) Reset() {
	*x = FilRenew{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilRenew) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilRenew) ProtoMessage() {}

func (x *FilRenew) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilRenew.ProtoReflect.Descriptor instead.
func (*FilRenew) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{3}
}

func (x *FilRenew) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *FilRenew) GetThreshold() int64 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

type FilConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepFactor       int64     `protobuf:"varint,1,opt,name=rep_factor,json=repFactor,proto3" json:"rep_factor,omitempty"`
	DealMinDuration int64     `protobuf:"varint,2,opt,name=deal_min_duration,json=dealMinDuration,proto3" json:"deal_min_duration,omitempty"`
	ExcludedMiners  []string  `protobuf:"bytes,3,rep,name=excluded_miners,json=excludedMiners,proto3" json:"excluded_miners,omitempty"`
	TrustedMiners   []string  `protobuf:"bytes,4,rep,name=trusted_miners,json=trustedMiners,proto3" json:"trusted_miners,omitempty"`
	CountryCodes    []string  `protobuf:"bytes,5,rep,name=country_codes,json=countryCodes,proto3" json:"country_codes,omitempty"`
	Renew           *FilRenew `protobuf:"bytes,6,opt,name=renew,proto3" json:"renew,omitempty"`
	Addr            string    `protobuf:"bytes,7,opt,name=addr,proto3" json:"addr,omitempty"`
	MaxPrice        uint64    `protobuf:"varint,8,opt,name=max_price,json=maxPrice,proto3" json:"max_price,omitempty"`
}

func (x *FilConfig) Reset() {
	*x = FilConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilConfig) ProtoMessage() {}

func (x *FilConfig) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilConfig.ProtoReflect.Descriptor instead.
func (*FilConfig) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{4}
}

func (x *FilConfig) GetRepFactor() int64 {
	if x != nil {
		return x.RepFactor
	}
	return 0
}

func (x *FilConfig) GetDealMinDuration() int64 {
	if x != nil {
		return x.DealMinDuration
	}
	return 0
}

func (x *FilConfig) GetExcludedMiners() []string {
	if x != nil {
		return x.ExcludedMiners
	}
	return nil
}

func (x *FilConfig) GetTrustedMiners() []string {
	if x != nil {
		return x.TrustedMiners
	}
	return nil
}

func (x *FilConfig) GetCountryCodes() []string {
	if x != nil {
		return x.CountryCodes
	}
	return nil
}

func (x *FilConfig) GetRenew() *FilRenew {
	if x != nil {
		return x.Renew
	}
	return nil
}

func (x *FilConfig) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *FilConfig) GetMaxPrice() uint64 {
	if x != nil {
		return x.MaxPrice
	}
	return 0
}

type ColdConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled  bool       `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Filecoin *FilConfig `protobuf:"bytes,2,opt,name=filecoin,proto3" json:"filecoin,omitempty"`
}

func (x *ColdConfig) Reset() {
	*x = ColdConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColdConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColdConfig) ProtoMessage() {}

func (x *ColdConfig) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColdConfig.ProtoReflect.Descriptor instead.
func (*ColdConfig) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{5}
}

func (x *ColdConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ColdConfig) GetFilecoin() *FilConfig {
	if x != nil {
		return x.Filecoin
	}
	return nil
}

type CidConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid        string      `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Hot        *HotConfig  `protobuf:"bytes,2,opt,name=hot,proto3" json:"hot,omitempty"`
	Cold       *ColdConfig `protobuf:"bytes,3,opt,name=cold,proto3" json:"cold,omitempty"`
	Repairable bool        `protobuf:"varint,4,opt,name=repairable,proto3" json:"repairable,omitempty"`
}

func (x *CidConfig) Reset() {
	*x = CidConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CidConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CidConfig) ProtoMessage() {}

func (x *CidConfig) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CidConfig.ProtoReflect.Descriptor instead.
func (*CidConfig) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{6}
}

func (x *CidConfig) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *CidConfig) GetHot() *HotConfig {
	if x != nil {
		return x.Hot
	}
	return nil
}

func (x *CidConfig) GetCold() *ColdConfig {
	if x != nil {
		return x.Cold
	}
	return nil
}

func (x *CidConfig) GetRepairable() bool {
	if x != nil {
		return x.Repairable
	}
	return false
}

type DefaultConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hot        *HotConfig  `protobuf:"bytes,1,opt,name=hot,proto3" json:"hot,omitempty"`
	Cold       *ColdConfig `protobuf:"bytes,2,opt,name=cold,proto3" json:"cold,omitempty"`
	Repairable bool        `protobuf:"varint,3,opt,name=repairable,proto3" json:"repairable,omitempty"`
}

func (x *DefaultConfig) Reset() {
	*x = DefaultConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultConfig) ProtoMessage() {}

func (x *DefaultConfig) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultConfig.ProtoReflect.Descriptor instead.
func (*DefaultConfig) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{7}
}

func (x *DefaultConfig) GetHot() *HotConfig {
	if x != nil {
		return x.Hot
	}
	return nil
}

func (x *DefaultConfig) GetCold() *ColdConfig {
	if x != nil {
		return x.Cold
	}
	return nil
}

func (x *DefaultConfig) GetRepairable() bool {
	if x != nil {
		return x.Repairable
	}
	return false
}

type IpfsHotInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Created int64 `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *IpfsHotInfo) Reset() {
	*x = IpfsHotInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IpfsHotInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpfsHotInfo) ProtoMessage() {}

func (x *IpfsHotInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IpfsHotInfo.ProtoReflect.Descriptor instead.
func (*IpfsHotInfo) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{8}
}

func (x *IpfsHotInfo) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

type HotInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool         `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Size    int64        `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Ipfs    *IpfsHotInfo `protobuf:"bytes,3,opt,name=ipfs,proto3" json:"ipfs,omitempty"`
}

func (x *HotInfo) Reset() {
	*x = HotInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HotInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HotInfo) ProtoMessage() {}

func (x *HotInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HotInfo.ProtoReflect.Descriptor instead.
func (*HotInfo) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{9}
}

func (x *HotInfo) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *HotInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *HotInfo) GetIpfs() *IpfsHotInfo {
	if x != nil {
		return x.Ipfs
	}
	return nil
}

type FilStorage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposalCid     string `protobuf:"bytes,1,opt,name=proposal_cid,json=proposalCid,proto3" json:"proposal_cid,omitempty"`
	Renewed         bool   `protobuf:"varint,2,opt,name=renewed,proto3" json:"renewed,omitempty"`
	Duration        int64  `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	ActivationEpoch int64  `protobuf:"varint,4,opt,name=activation_epoch,json=activationEpoch,proto3" json:"activation_epoch,omitempty"`
	StartEpoch      uint64 `protobuf:"varint,5,opt,name=start_epoch,json=startEpoch,proto3" json:"start_epoch,omitempty"`
	Miner           string `protobuf:"bytes,6,opt,name=miner,proto3" json:"miner,omitempty"`
	EpochPrice      uint64 `protobuf:"varint,7,opt,name=epoch_price,json=epochPrice,proto3" json:"epoch_price,omitempty"`
}

func (x *FilStorage) Reset() {
	*x = FilStorage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilStorage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilStorage) ProtoMessage() {}

func (x *FilStorage) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilStorage.ProtoReflect.Descriptor instead.
func (*FilStorage) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{10}
}

func (x *FilStorage) GetProposalCid() string {
	if x != nil {
		return x.ProposalCid
	}
	return ""
}

func (x *FilStorage) GetRenewed() bool {
	if x != nil {
		return x.Renewed
	}
	return false
}

func (x *FilStorage) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *FilStorage) GetActivationEpoch() int64 {
	if x != nil {
		return x.ActivationEpoch
	}
	return 0
}

func (x *FilStorage) GetStartEpoch() uint64 {
	if x != nil {
		return x.StartEpoch
	}
	return 0
}

func (x *FilStorage) GetMiner() string {
	if x != nil {
		return x.Miner
	}
	return ""
}

func (x *FilStorage) GetEpochPrice() uint64 {
	if x != nil {
		return x.EpochPrice
	}
	return 0
}

type FilInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataCid   string        `protobuf:"bytes,1,opt,name=data_cid,json=dataCid,proto3" json:"data_cid,omitempty"`
	Size      uint64        `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Proposals []*FilStorage `protobuf:"bytes,3,rep,name=proposals,proto3" json:"proposals,omitempty"`
}

func (x *FilInfo) Reset() {
	*x = FilInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilInfo) ProtoMessage() {}

func (x *FilInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilInfo.ProtoReflect.Descriptor instead.
func (*FilInfo) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{11}
}

func (x *FilInfo) GetDataCid() string {
	if x != nil {
		return x.DataCid
	}
	return ""
}

func (x *FilInfo) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FilInfo) GetProposals() []*FilStorage {
	if x != nil {
		return x.Proposals
	}
	return nil
}

type ColdInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled  bool     `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Filecoin *FilInfo `protobuf:"bytes,2,opt,name=filecoin,proto3" json:"filecoin,omitempty"`
}

func (x *ColdInfo) Reset() {
	*x = ColdInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColdInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColdInfo) ProtoMessage() {}

func (x *ColdInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColdInfo.ProtoReflect.Descriptor instead.
func (*ColdInfo) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{12}
}

func (x *ColdInfo) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ColdInfo) GetFilecoin() *FilInfo {
	if x != nil {
		return x.Filecoin
	}
	return nil
}

type CidInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId   string    `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Cid     string    `protobuf:"bytes,2,opt,name=cid,proto3" json:"cid,omitempty"`
	Created int64     `protobuf:"varint,3,opt,name=created,proto3" json:"created,omitempty"`
	Hot     *HotInfo  `protobuf:"bytes,4,opt,name=hot,proto3" json:"hot,omitempty"`
	Cold    *ColdInfo `protobuf:"bytes,5,opt,name=cold,proto3" json:"cold,omitempty"`
}

func (x *CidInfo) Reset() {
	*x = CidInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CidInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CidInfo) ProtoMessage() {}

func (x *CidInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CidInfo.ProtoReflect.Descriptor instead.
func (*CidInfo) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{13}
}

func (x *CidInfo) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *CidInfo) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *CidInfo) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *CidInfo) GetHot() *HotInfo {
	if x != nil {
		return x.Hot
	}
	return nil
}

func (x *CidInfo) GetCold() *ColdInfo {
	if x != nil {
		return x.Cold
	}
	return nil
}

type BalanceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr    *AddrInfo `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Balance int64     `protobuf:"varint,2,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *BalanceInfo) Reset() {
	*x = BalanceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceInfo) ProtoMessage() {}

func (x *BalanceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceInfo.ProtoReflect.Descriptor instead.
func (*BalanceInfo) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{14}
}

func (x *BalanceInfo) GetAddr() *AddrInfo {
	if x != nil {
		return x.Addr
	}
	return nil
}

func (x *BalanceInfo) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type InstanceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DefaultConfig *DefaultConfig `protobuf:"bytes,2,opt,name=default_config,json=defaultConfig,proto3" json:"default_config,omitempty"`
	Balances      []*BalanceInfo `protobuf:"bytes,3,rep,name=balances,proto3" json:"balances,omitempty"`
	Pins          []string       `protobuf:"bytes,4,rep,name=pins,proto3" json:"pins,omitempty"`
}

func (x *InstanceInfo) Reset() {
	*x = InstanceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceInfo) ProtoMessage() {}

func (x *InstanceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceInfo.ProtoReflect.Descriptor instead.
func (*InstanceInfo) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{15}
}

func (x *InstanceInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InstanceInfo) GetDefaultConfig() *DefaultConfig {
	if x != nil {
		return x.DefaultConfig
	}
	return nil
}

func (x *InstanceInfo) GetBalances() []*BalanceInfo {
	if x != nil {
		return x.Balances
	}
	return nil
}

func (x *InstanceInfo) GetPins() []string {
	if x != nil {
		return x.Pins
	}
	return nil
}

type Job struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ApiId      string       `protobuf:"bytes,2,opt,name=api_id,json=apiId,proto3" json:"api_id,omitempty"`
	Cid        string       `protobuf:"bytes,3,opt,name=cid,proto3" json:"cid,omitempty"`
	Status     JobStatus    `protobuf:"varint,4,opt,name=status,proto3,enum=ffs.rpc.JobStatus" json:"status,omitempty"`
	ErrCause   string       `protobuf:"bytes,5,opt,name=err_cause,json=errCause,proto3" json:"err_cause,omitempty"`
	DealErrors []*DealError `protobuf:"bytes,6,rep,name=deal_errors,json=dealErrors,proto3" json:"deal_errors,omitempty"`
}

func (x *Job) Reset() {
	*x = Job{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{16}
}

func (x *Job) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Job) GetApiId() string {
	if x != nil {
		return x.ApiId
	}
	return ""
}

func (x *Job) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *Job) GetStatus() JobStatus {
	if x != nil {
		return x.Status
	}
	return JobStatus_JOB_STATUS_UNSPECIFIED
}

func (x *Job) GetErrCause() string {
	if x != nil {
		return x.ErrCause
	}
	return ""
}

func (x *Job) GetDealErrors() []*DealError {
	if x != nil {
		return x.DealErrors
	}
	return nil
}

type DealError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposalCid string `protobuf:"bytes,1,opt,name=proposal_cid,json=proposalCid,proto3" json:"proposal_cid,omitempty"`
	Miner       string `protobuf:"bytes,2,opt,name=miner,proto3" json:"miner,omitempty"`
	Message     string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DealError) Reset() {
	*x = DealError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DealError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DealError) ProtoMessage() {}

func (x *DealError) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DealError.ProtoReflect.Descriptor instead.
func (*DealError) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{17}
}

func (x *DealError) GetProposalCid() string {
	if x != nil {
		return x.ProposalCid
	}
	return ""
}

func (x *DealError) GetMiner() string {
	if x != nil {
		return x.Miner
	}
	return ""
}

func (x *DealError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type LogEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid  string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Jid  string `protobuf:"bytes,2,opt,name=jid,proto3" json:"jid,omitempty"`
	Time int64  `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`
	Msg  string `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{18}
}

func (x *LogEntry) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *LogEntry) GetJid() string {
	if x != nil {
		return x.Jid
	}
	return ""
}

func (x *LogEntry) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *LogEntry) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type PaychInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CtlAddr   string    `protobuf:"bytes,1,opt,name=ctl_addr,json=ctlAddr,proto3" json:"ctl_addr,omitempty"`
	Addr      string    `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Direction Direction `protobuf:"varint,3,opt,name=direction,proto3,enum=ffs.rpc.Direction" json:"direction,omitempty"`
}

func (x *PaychInfo) Reset() {
	*x = PaychInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaychInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaychInfo) ProtoMessage() {}

func (x *PaychInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaychInfo.ProtoReflect.Descriptor instead.
func (*PaychInfo) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{19}
}

func (x *PaychInfo) GetCtlAddr() string {
	if x != nil {
		return x.CtlAddr
	}
	return ""
}

func (x *PaychInfo) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *PaychInfo) GetDirection() Direction {
	if x != nil {
		return x.Direction
	}
	return Direction_DIRECTION_UNSPECIFIED
}

type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{20}
}

type CreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{21}
}

func (x *CreateResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ListAPIRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListAPIRequest) Reset() {
	*x = ListAPIRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAPIRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAPIRequest) ProtoMessage() {}

func (x *ListAPIRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAPIRequest.ProtoReflect.Descriptor instead.
func (*ListAPIRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{22}
}

type ListAPIResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instances []string `protobuf:"bytes,1,rep,name=instances,proto3" json:"instances,omitempty"`
}

func (x *ListAPIResponse) Reset() {
	*x = ListAPIResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAPIResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAPIResponse) ProtoMessage() {}

func (x *ListAPIResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAPIResponse.ProtoReflect.Descriptor instead.
func (*ListAPIResponse) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{23}
}

func (x *ListAPIResponse) GetInstances() []string {
	if x != nil {
		return x.Instances
	}
	return nil
}

type IDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IDRequest) Reset() {
	*x = IDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDRequest) ProtoMessage() {}

func (x *IDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDRequest.ProtoReflect.Descriptor instead.
func (*IDRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{24}
}

type IDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IDResponse) Reset() {
	*x = IDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDResponse) ProtoMessage() {}

func (x *IDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDResponse.ProtoReflect.Descriptor instead.
func (*IDResponse) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{25}
}

func (x *IDResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AddrsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddrsRequest) Reset() {
	*x = AddrsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddrsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddrsRequest) ProtoMessage() {}

func (x *AddrsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddrsRequest.ProtoReflect.Descriptor instead.
func (*AddrsRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{26}
}

type AddrsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addrs []*AddrInfo `protobuf:"bytes,1,rep,name=addrs,proto3" json:"addrs,omitempty"`
}

func (x *AddrsResponse) Reset() {
	*x = AddrsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddrsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddrsResponse) ProtoMessage() {}

func (x *AddrsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddrsResponse.ProtoReflect.Descriptor instead.
func (*AddrsResponse) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{27}
}

func (x *AddrsResponse) GetAddrs() []*AddrInfo {
	if x != nil {
		return x.Addrs
	}
	return nil
}

type DefaultConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DefaultConfigRequest) Reset() {
	*x = DefaultConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultConfigRequest) ProtoMessage() {}

func (x *DefaultConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultConfigRequest.ProtoReflect.Descriptor instead.
func (*DefaultConfigRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{28}
}

type DefaultConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultConfig *DefaultConfig `protobuf:"bytes,1,opt,name=default_config,json=defaultConfig,proto3" json:"default_config,omitempty"`
}

func (x *DefaultConfigResponse) Reset() {
	*x = DefaultConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultConfigResponse) ProtoMessage() {}

func (x *DefaultConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultConfigResponse.ProtoReflect.Descriptor instead.
func (*DefaultConfigResponse) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{29}
}

func (x *DefaultConfigResponse) GetDefaultConfig() *DefaultConfig {
	if x != nil {
		return x.DefaultConfig
	}
	return nil
}

type NewAddrRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	AddressType string `protobuf:"bytes,2,opt,name=address_type,json=addressType,proto3" json:"address_type,omitempty"`
	MakeDefault bool   `protobuf:"varint,3,opt,name=make_default,json=makeDefault,proto3" json:"make_default,omitempty"`
}

func (x *NewAddrRequest) Reset() {
	*x = NewAddrRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewAddrRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewAddrRequest) ProtoMessage() {}

func (x *NewAddrRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewAddrRequest.ProtoReflect.Descriptor instead.
func (*NewAddrRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{30}
}

func (x *NewAddrRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NewAddrRequest) GetAddressType() string {
	if x != nil {
		return x.AddressType
	}
	return ""
}

func (x *NewAddrRequest) GetMakeDefault() bool {
	if x != nil {
		return x.MakeDefault
	}
	return false
}

type NewAddrResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *NewAddrResponse) Reset() {
	*x = NewAddrResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewAddrResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewAddrResponse) ProtoMessage() {}

func (x *NewAddrResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewAddrResponse.ProtoReflect.Descriptor instead.
func (*NewAddrResponse) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{31}
}

func (x *NewAddrResponse) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type GetDefaultCidConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *GetDefaultCidConfigRequest) Reset() {
	*x = GetDefaultCidConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultCidConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultCidConfigRequest) ProtoMessage() {}

func (x *GetDefaultCidConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultCidConfigRequest.ProtoReflect.Descriptor instead.
func (*GetDefaultCidConfigRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{32}
}

func (x *GetDefaultCidConfigRequest) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

type GetDefaultCidConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *CidConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *GetDefaultCidConfigResponse) Reset() {
	*x = GetDefaultCidConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultCidConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultCidConfigResponse) ProtoMessage() {}

func (x *GetDefaultCidConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultCidConfigResponse.ProtoReflect.Descriptor instead.
func (*GetDefaultCidConfigResponse) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{33}
}

func (x *GetDefaultCidConfigResponse) GetConfig() *CidConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type GetCidConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *GetCidConfigRequest) Reset() {
	*x = GetCidConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCidConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCidConfigRequest) ProtoMessage() {}

func (x *GetCidConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCidConfigRequest.ProtoReflect.Descriptor instead.
func (*GetCidConfigRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{34}
}

func (x *GetCidConfigRequest) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

type GetCidConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *CidConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *GetCidConfigResponse) Reset() {
	*x = GetCidConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCidConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCidConfigResponse) ProtoMessage() {}

func (x *GetCidConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCidConfigResponse.ProtoReflect.Descriptor instead.
func (*GetCidConfigResponse) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{35}
}

func (x *GetCidConfigResponse) GetConfig() *CidConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type SetDefaultConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *DefaultConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *SetDefaultConfigRequest) Reset() {
	*x = SetDefaultConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDefaultConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDefaultConfigRequest) ProtoMessage() {}

func (x *SetDefaultConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDefaultConfigRequest.ProtoReflect.Descriptor instead.
func (*SetDefaultConfigRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{36}
}

func (x *SetDefaultConfigRequest) GetConfig() *DefaultConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type SetDefaultConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetDefaultConfigResponse) Reset() {
	*x = SetDefaultConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDefaultConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDefaultConfigResponse) ProtoMessage() {}

func (x *SetDefaultConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDefaultConfigResponse.ProtoReflect.Descriptor instead.
func (*SetDefaultConfigResponse) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{37}
}

type ShowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *ShowRequest) Reset() {
	*x = ShowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowRequest) ProtoMessage() {}

func (x *ShowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowRequest.ProtoReflect.Descriptor instead.
func (*ShowRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{38}
}

func (x *ShowRequest) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

type ShowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CidInfo *CidInfo `protobuf:"bytes,1,opt,name=cid_info,json=cidInfo,proto3" json:"cid_info,omitempty"`
}

func (x *ShowResponse) Reset() {
	*x = ShowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowResponse) ProtoMessage() {}

func (x *ShowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowResponse.ProtoReflect.Descriptor instead.
func (*ShowResponse) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{39}
}

func (x *ShowResponse) GetCidInfo() *CidInfo {
	if x != nil {
		return x.CidInfo
	}
	return nil
}

type InfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InfoRequest) Reset() {
	*x = InfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoRequest) ProtoMessage() {}

func (x *InfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoRequest.ProtoReflect.Descriptor instead.
func (*InfoRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{40}
}

type InfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *InstanceInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *InfoResponse) Reset() {
	*x = InfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoResponse) ProtoMessage() {}

func (x *InfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoResponse.ProtoReflect.Descriptor instead.
func (*InfoResponse) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{41}
}

func (x *InfoResponse) GetInfo() *InstanceInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type CancelJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jid string `protobuf:"bytes,1,opt,name=jid,proto3" json:"jid,omitempty"`
}

func (x *CancelJobRequest) Reset() {
	*x = CancelJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelJobRequest) ProtoMessage() {}

func (x *CancelJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelJobRequest.ProtoReflect.Descriptor instead.
func (*CancelJobRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{42}
}

func (x *CancelJobRequest) GetJid() string {
	if x != nil {
		return x.Jid
	}
	return ""
}

type CancelJobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CancelJobResponse) Reset() {
	*x = CancelJobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelJobResponse) ProtoMessage() {}

func (x *CancelJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelJobResponse.ProtoReflect.Descriptor instead.
func (*CancelJobResponse) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{43}
}

type WatchJobsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jids []string `protobuf:"bytes,1,rep,name=jids,proto3" json:"jids,omitempty"`
}

func (x *WatchJobsRequest) Reset() {
	*x = WatchJobsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchJobsRequest) ProtoMessage() {}

func (x *WatchJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchJobsRequest.ProtoReflect.Descriptor instead.
func (*WatchJobsRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{44}
}

func (x *WatchJobsRequest) GetJids() []string {
	if x != nil {
		return x.Jids
	}
	return nil
}

type WatchJobsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *WatchJobsResponse) Reset() {
	*x = WatchJobsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchJobsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchJobsResponse) ProtoMessage() {}

func (x *WatchJobsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchJobsResponse.ProtoReflect.Descriptor instead.
func (*WatchJobsResponse) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{45}
}

func (x *WatchJobsResponse) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type WatchLogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid     string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Jid     string `protobuf:"bytes,2,opt,name=jid,proto3" json:"jid,omitempty"`
	History bool   `protobuf:"varint,3,opt,name=history,proto3" json:"history,omitempty"`
}

func (x *WatchLogsRequest) Reset() {
	*x = WatchLogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchLogsRequest) ProtoMessage() {}

func (x *WatchLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchLogsRequest.ProtoReflect.Descriptor instead.
func (*WatchLogsRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{46}
}

func (x *WatchLogsRequest) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *WatchLogsRequest) GetJid() string {
	if x != nil {
		return x.Jid
	}
	return ""
}

func (x *WatchLogsRequest) GetHistory() bool {
	if x != nil {
		return x.History
	}
	return false
}

type WatchLogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogEntry *LogEntry `protobuf:"bytes,1,opt,name=log_entry,json=logEntry,proto3" json:"log_entry,omitempty"`
}

func (x *WatchLogsResponse) Reset() {
	*x = WatchLogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchLogsResponse) ProtoMessage() {}

func (x *WatchLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchLogsResponse.ProtoReflect.Descriptor instead.
func (*WatchLogsResponse) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{47}
}

func (x *WatchLogsResponse) GetLogEntry() *LogEntry {
	if x != nil {
		return x.LogEntry
	}
	return nil
}

type ReplaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid1 string `protobuf:"bytes,1,opt,name=cid1,proto3" json:"cid1,omitempty"`
	Cid2 string `protobuf:"bytes,2,opt,name=cid2,proto3" json:"cid2,omitempty"`
}

func (x *ReplaceRequest) Reset() {
	*x = ReplaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplaceRequest) ProtoMessage() {}

func (x *ReplaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplaceRequest.ProtoReflect.Descriptor instead.
func (*ReplaceRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{48}
}

func (x *ReplaceRequest) GetCid1() string {
	if x != nil {
		return x.Cid1
	}
	return ""
}

func (x *ReplaceRequest) GetCid2() string {
	if x != nil {
		return x.Cid2
	}
	return ""
}

type ReplaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *ReplaceResponse) Reset() {
	*x = ReplaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplaceResponse) ProtoMessage() {}

func (x *ReplaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplaceResponse.ProtoReflect.Descriptor instead.
func (*ReplaceResponse) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{49}
}

func (x *ReplaceResponse) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type PushConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid               string     `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Config            *CidConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	HasConfig         bool       `protobuf:"varint,3,opt,name=has_config,json=hasConfig,proto3" json:"has_config,omitempty"`
	OverrideConfig    bool       `protobuf:"varint,4,opt,name=override_config,json=overrideConfig,proto3" json:"override_config,omitempty"`
	HasOverrideConfig bool       `protobuf:"varint,5,opt,name=has_override_config,json=hasOverrideConfig,proto3" json:"has_override_config,omitempty"`
}

func (x *PushConfigRequest) Reset() {
	*x = PushConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushConfigRequest) ProtoMessage() {}

func (x *PushConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushConfigRequest.ProtoReflect.Descriptor instead.
func (*PushConfigRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{50}
}

func (x *PushConfigRequest) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *PushConfigRequest) GetConfig() *CidConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *PushConfigRequest) GetHasConfig() bool {
	if x != nil {
		return x.HasConfig
	}
	return false
}

func (x *PushConfigRequest) GetOverrideConfig() bool {
	if x != nil {
		return x.OverrideConfig
	}
	return false
}

func (x *PushConfigRequest) GetHasOverrideConfig() bool {
	if x != nil {
		return x.HasOverrideConfig
	}
	return false
}

type PushConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *PushConfigResponse) Reset() {
	*x = PushConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushConfigResponse) ProtoMessage() {}

func (x *PushConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushConfigResponse.ProtoReflect.Descriptor instead.
func (*PushConfigResponse) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{51}
}

func (x *PushConfigResponse) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type RemoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *RemoveRequest) Reset() {
	*x = RemoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRequest) ProtoMessage() {}

func (x *RemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRequest.ProtoReflect.Descriptor instead.
func (*RemoveRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{52}
}

func (x *RemoveRequest) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

type RemoveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveResponse) Reset() {
	*x = RemoveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveResponse) ProtoMessage() {}

func (x *RemoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveResponse.ProtoReflect.Descriptor instead.
func (*RemoveResponse) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{53}
}

type GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{54}
}

func (x *GetRequest) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

type GetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chunk []byte `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{55}
}

func (x *GetResponse) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

type SendFilRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From   string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To     string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Amount int64  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *SendFilRequest) Reset() {
	*x = SendFilRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendFilRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFilRequest) ProtoMessage() {}

func (x *SendFilRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFilRequest.ProtoReflect.Descriptor instead.
func (*SendFilRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{56}
}

func (x *SendFilRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *SendFilRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *SendFilRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type SendFilResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendFilResponse) Reset() {
	*x = SendFilResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendFilResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFilResponse) ProtoMessage() {}

func (x *SendFilResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFilResponse.ProtoReflect.Descriptor instead.
func (*SendFilResponse) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{57}
}

type CloseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloseRequest) Reset() {
	*x = CloseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseRequest) ProtoMessage() {}

func (x *CloseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseRequest.ProtoReflect.Descriptor instead.
func (*CloseRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{58}
}

type CloseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloseResponse) Reset() {
	*x = CloseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseResponse) ProtoMessage() {}

func (x *CloseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseResponse.ProtoReflect.Descriptor instead.
func (*CloseResponse) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{59}
}

type AddToHotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chunk []byte `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
}

func (x *AddToHotRequest) Reset() {
	*x = AddToHotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddToHotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToHotRequest) ProtoMessage() {}

func (x *AddToHotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToHotRequest.ProtoReflect.Descriptor instead.
func (*AddToHotRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{60}
}

func (x *AddToHotRequest) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

type AddToHotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *AddToHotResponse) Reset() {
	*x = AddToHotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddToHotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToHotResponse) ProtoMessage() {}

func (x *AddToHotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToHotResponse.ProtoReflect.Descriptor instead.
func (*AddToHotResponse) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{61}
}

func (x *AddToHotResponse) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

type ListPayChannelsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListPayChannelsRequest) Reset() {
	*x = ListPayChannelsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPayChannelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPayChannelsRequest) ProtoMessage() {}

func (x *ListPayChannelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPayChannelsRequest.ProtoReflect.Descriptor instead.
func (*ListPayChannelsRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{62}
}

type ListPayChannelsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayChannels []*PaychInfo `protobuf:"bytes,1,rep,name=pay_channels,json=payChannels,proto3" json:"pay_channels,omitempty"`
}

func (x *ListPayChannelsResponse) Reset() {
	*x = ListPayChannelsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPayChannelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPayChannelsResponse) ProtoMessage() {}

func (x *ListPayChannelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPayChannelsResponse.ProtoReflect.Descriptor instead.
func (*ListPayChannelsResponse) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{63}
}

func (x *ListPayChannelsResponse) GetPayChannels() []*PaychInfo {
	if x != nil {
		return x.PayChannels
	}
	return nil
}

type CreatePayChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From   string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To     string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Amount uint64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *CreatePayChannelRequest) Reset() {
	*x = CreatePayChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePayChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePayChannelRequest) ProtoMessage() {}

func (x *CreatePayChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePayChannelRequest.ProtoReflect.Descriptor instead.
func (*CreatePayChannelRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{64}
}

func (x *CreatePayChannelRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *CreatePayChannelRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *CreatePayChannelRequest) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type CreatePayChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayChannel        *PaychInfo `protobuf:"bytes,1,opt,name=pay_channel,json=payChannel,proto3" json:"pay_channel,omitempty"`
	ChannelMessageCid string     `protobuf:"bytes,2,opt,name=channel_message_cid,json=channelMessageCid,proto3" json:"channel_message_cid,omitempty"`
}

func (x *CreatePayChannelResponse) Reset() {
	*x = CreatePayChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePayChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePayChannelResponse) ProtoMessage() {}

func (x *CreatePayChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePayChannelResponse.ProtoReflect.Descriptor instead.
func (*CreatePayChannelResponse) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{65}
}

func (x *CreatePayChannelResponse) GetPayChannel() *PaychInfo {
	if x != nil {
		return x.PayChannel
	}
	return nil
}

func (x *CreatePayChannelResponse) GetChannelMessageCid() string {
	if x != nil {
		return x.ChannelMessageCid
	}
	return ""
}

type RedeemPayChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayChannelAddr string `protobuf:"bytes,1,opt,name=pay_channel_addr,json=payChannelAddr,proto3" json:"pay_channel_addr,omitempty"`
}

func (x *RedeemPayChannelRequest) Reset() {
	*x = RedeemPayChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedeemPayChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedeemPayChannelRequest) ProtoMessage() {}

func (x *RedeemPayChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedeemPayChannelRequest.ProtoReflect.Descriptor instead.
func (*RedeemPayChannelRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{66}
}

func (x *RedeemPayChannelRequest) GetPayChannelAddr() string {
	if x != nil {
		return x.PayChannelAddr
	}
	return ""
}

type RedeemPayChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RedeemPayChannelResponse) Reset() {
	*x = RedeemPayChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedeemPayChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedeemPayChannelResponse) ProtoMessage() {}

func (x *RedeemPayChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedeemPayChannelResponse.ProtoReflect.Descriptor instead.
func (*RedeemPayChannelResponse) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{67}
}

type ShowAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShowAllRequest) Reset() {
	*x = ShowAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowAllRequest) ProtoMessage() {}

func (x *ShowAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowAllRequest.ProtoReflect.Descriptor instead.
func (*ShowAllRequest) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{68}
}

type ShowAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CidInfos []*CidInfo `protobuf:"bytes,1,rep,name=cid_infos,json=cidInfos,proto3" json:"cid_infos,omitempty"`
}

func (x *ShowAllResponse) Reset() {
	*x = ShowAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffs_rpc_rpc_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowAllResponse) ProtoMessage() {}

func (x *ShowAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffs_rpc_rpc_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowAllResponse.ProtoReflect.Descriptor instead.
func (*ShowAllResponse) Descriptor() ([]byte, []int) {
	return file_ffs_rpc_rpc_proto_rawDescGZIP(), []int{69}
}

func (x *ShowAllResponse) GetCidInfos() []*CidInfo {
	if x != nil {
		return x.CidInfos
	}
	return nil
}

var File_ffs_rpc_rpc_proto protoreflect.FileDescriptor

var file_ffs_rpc_rpc_proto_rawDesc = []byte{
	0x0a, 0x11, 0x66, 0x66, 0x73, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x22, 0x46, 0x0a, 0x08,
	0x41, 0x64, 0x64, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x22, 0x2d, 0x0a, 0x0a, 0x49, 0x70, 0x66, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x64, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x22, 0x75, 0x0a, 0x09, 0x48, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x5f, 0x75, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a,
	0x65, 0x12, 0x27, 0x0a, 0x04, 0x69, 0x70, 0x66, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x70, 0x66, 0x73, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x69, 0x70, 0x66, 0x73, 0x22, 0x42, 0x0a, 0x08, 0x46, 0x69,
	0x6c, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x22, 0xa5,
	0x02, 0x0a, 0x09, 0x46, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x65, 0x70, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x72, 0x65, 0x70, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x64,
	0x65, 0x61, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x64, 0x65, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x64, 0x5f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0e, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x73,
	0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x69, 0x6e, 0x65,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65,
	0x64, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x05,
	0x72, 0x65, 0x6e, 0x65, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x66,
	0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x52, 0x05,
	0x72, 0x65, 0x6e, 0x65, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x61,
	0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x56, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x64, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x2e,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x22, 0x8c,
	0x01, 0x0a, 0x09, 0x43, 0x69, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x24,
	0x0a, 0x03, 0x68, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x66,
	0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x03, 0x68, 0x6f, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x63, 0x6f, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6c,
	0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x63, 0x6f, 0x6c, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x7e, 0x0a,
	0x0d, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x24,
	0x0a, 0x03, 0x68, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x66,
	0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x03, 0x68, 0x6f, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x63, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6c,
	0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x63, 0x6f, 0x6c, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x27, 0x0a,
	0x0b, 0x49, 0x70, 0x66, 0x73, 0x48, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x61, 0x0a, 0x07, 0x48, 0x6f, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x28, 0x0a, 0x04, 0x69, 0x70, 0x66, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x70, 0x66, 0x73, 0x48, 0x6f, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x70, 0x66, 0x73, 0x22, 0xe8, 0x01, 0x0a, 0x0a, 0x46, 0x69,
	0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x43, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x6e, 0x65, 0x77, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65,
	0x6e, 0x65, 0x77, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x14, 0x0a,
	0x05, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x69,
	0x6e, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x22, 0x6b, 0x0a, 0x07, 0x46, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x19, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x43, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x31,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x73, 0x22, 0x52, 0x0a, 0x08, 0x43, 0x6f, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x63,
	0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x66, 0x66, 0x73, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x63, 0x6f, 0x69, 0x6e, 0x22, 0x97, 0x01, 0x0a, 0x07, 0x43, 0x69, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x03, 0x68, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x6f, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x03, 0x68, 0x6f, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x63, 0x6f, 0x6c, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x43, 0x6f, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x63, 0x6f, 0x6c, 0x64, 0x22,
	0x4e, 0x0a, 0x0b, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25,
	0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66,
	0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22,
	0xa3, 0x01, 0x0a, 0x0c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x3d, 0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x30, 0x0a, 0x08, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x69, 0x6e, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x03, 0x4a, 0x6f, 0x62, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x61, 0x70, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x70, 0x69, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x5f, 0x63, 0x61, 0x75, 0x73, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x43, 0x61, 0x75, 0x73, 0x65, 0x12,
	0x33, 0x0a, 0x0b, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x44,
	0x65, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x0a, 0x64, 0x65, 0x61, 0x6c, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x22, 0x5e, 0x0a, 0x09, 0x44, 0x65, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x63, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x43, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x54, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6a, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x6c, 0x0a, 0x09, 0x50, 0x61,
	0x79, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x74, 0x6c, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x74, 0x6c, 0x41, 0x64,
	0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x30, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x66, 0x66, 0x73, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x36, 0x0a, 0x0e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x10, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x50, 0x49, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x2f, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x50, 0x49, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x22, 0x0b, 0x0a, 0x09, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x1c, 0x0a, 0x0a, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x0e, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x38, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x27, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x05, 0x61, 0x64, 0x64, 0x72, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x56, 0x0a, 0x15, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x6a, 0x0a, 0x0e, 0x4e, 0x65, 0x77,
	0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x6b, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6d, 0x61, 0x6b, 0x65, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x25, 0x0a, 0x0f, 0x4e, 0x65, 0x77, 0x41, 0x64, 0x64, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x22, 0x2e, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x69, 0x64, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x22, 0x49, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x69, 0x64, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x66,
	0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x69, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x27, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x69,
	0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64,
	0x22, 0x42, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x69, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x43, 0x69, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x22, 0x49, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2e, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0x1a, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x0a, 0x0b, 0x53,
	0x68, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x22, 0x3b, 0x0a, 0x0c,
	0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x08,
	0x63, 0x69, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x69, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x07, 0x63, 0x69, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x0d, 0x0a, 0x0b, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x39, 0x0a, 0x0c, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x22, 0x24, 0x0a, 0x10, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4a, 0x6f, 0x62,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x69, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26,
	0x0a, 0x10, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x6a, 0x69, 0x64, 0x73, 0x22, 0x33, 0x0a, 0x11, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4a,
	0x6f, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x03, 0x6a,
	0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x22, 0x50, 0x0a, 0x10, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6a, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x43, 0x0a,
	0x11, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x22, 0x38, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x64, 0x31, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x64, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x64, 0x32,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x64, 0x32, 0x22, 0x28, 0x0a, 0x0f,
	0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0xc9, 0x01, 0x0a, 0x11, 0x50, 0x75, 0x73, 0x68, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x2a,
	0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x69, 0x64, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61,
	0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x68, 0x61, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x76, 0x65,
	0x72, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x2e, 0x0a, 0x13, 0x68, 0x61, 0x73, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69,
	0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x11, 0x68, 0x61, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x22, 0x2b, 0x0a, 0x12, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22,
	0x21, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63,
	0x69, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x63, 0x69, 0x64, 0x22, 0x23, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x22, 0x4c, 0x0a, 0x0e, 0x53, 0x65, 0x6e,
	0x64, 0x46, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x11, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x46,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0e, 0x0a, 0x0c, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x0a, 0x0f, 0x41,
	0x64, 0x64, 0x54, 0x6f, 0x48, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x22, 0x24, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x48, 0x6f, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x50, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x79, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x35, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x50, 0x61, 0x79, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x22, 0x55, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x7f, 0x0a,
	0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x0b, 0x70, 0x61, 0x79,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x61, 0x79, 0x63, 0x68, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x2e,
	0x0a, 0x13, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x69, 0x64, 0x22, 0x43,
	0x0a, 0x17, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x61, 0x79,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x41,
	0x64, 0x64, 0x72, 0x22, 0x1a, 0x0a, 0x18, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x50, 0x61, 0x79,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x10, 0x0a, 0x0e, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x40, 0x0a, 0x0f, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x09, 0x63, 0x69, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x43, 0x69, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x63, 0x69, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x2a, 0xa0, 0x01, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1a, 0x0a, 0x16, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a,
	0x11, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x51, 0x55, 0x45, 0x55,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x15,
	0x0a, 0x11, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x12, 0x16,
	0x0a, 0x12, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43,
	0x43, 0x45, 0x53, 0x53, 0x10, 0x05, 0x2a, 0x55, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15,
	0x0a, 0x11, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x42, 0x4f,
	0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x02, 0x32, 0xe1, 0x0d,
	0x0a, 0x0a, 0x52, 0x50, 0x43, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x06,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x07, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x50, 0x49, 0x12, 0x17, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x50, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x50, 0x49, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x02, 0x49, 0x44, 0x12,
	0x12, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x44,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x05, 0x41, 0x64,
	0x64, 0x72, 0x73, 0x12, 0x15, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64,
	0x64, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x66, 0x66, 0x73,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x07, 0x4e, 0x65, 0x77, 0x41, 0x64, 0x64,
	0x72, 0x12, 0x17, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x65, 0x77, 0x41,
	0x64, 0x64, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x66, 0x66, 0x73,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x65, 0x77, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x43, 0x69, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x23, 0x2e,
	0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x43, 0x69, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x69, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x43, 0x69, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1c, 0x2e, 0x66, 0x66, 0x73,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x69, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x69, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x10, 0x53, 0x65, 0x74,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x20, 0x2e,
	0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x04, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x14, 0x2e, 0x66,
	0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x68, 0x6f,
	0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x14, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x66, 0x66, 0x73, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x44, 0x0a, 0x09, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4a, 0x6f, 0x62, 0x12,
	0x19, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x66, 0x66, 0x73,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4a, 0x6f, 0x62, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x09, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x19, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x46, 0x0a, 0x09, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x19, 0x2e,
	0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x6f, 0x67,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3e, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x12, 0x17, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x66,
	0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0a, 0x50, 0x75, 0x73, 0x68,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x75, 0x73,
	0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x3b, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x16, 0x2e, 0x66, 0x66,
	0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x34,
	0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x13, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x66, 0x66, 0x73,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x30, 0x01, 0x12, 0x3e, 0x0a, 0x07, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x12,
	0x17, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x05, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x15, 0x2e,
	0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43,
	0x0a, 0x08, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x48, 0x6f, 0x74, 0x12, 0x18, 0x2e, 0x66, 0x66, 0x73,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x48, 0x6f, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41,
	0x64, 0x64, 0x54, 0x6f, 0x48, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x28, 0x01, 0x12, 0x56, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x1f, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x10, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12,
	0x20, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d,
	0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x20, 0x2e, 0x66, 0x66, 0x73,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x50, 0x61, 0x79, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x66,
	0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x50, 0x61, 0x79,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x3e, 0x0a, 0x07, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x6c, 0x6c, 0x12, 0x17, 0x2e, 0x66,
	0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x66, 0x66, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x53, 0x68, 0x6f, 0x77, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x74, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x69, 0x6f, 0x2f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x67,
	0x61, 0x74, 0x65, 0x2f, 0x66, 0x66, 0x73, 0x2f, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_ffs_rpc_rpc_proto_rawDescOnce sync.Once
	file_ffs_rpc_rpc_proto_rawDescData = file_ffs_rpc_rpc_proto_rawDesc
)

func file_ffs_rpc_rpc_proto_rawDescGZIP() []byte {
	file_ffs_rpc_rpc_proto_rawDescOnce.Do(func() {
		file_ffs_rpc_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_ffs_rpc_rpc_proto_rawDescData)
	})
	return file_ffs_rpc_rpc_proto_rawDescData
}

var file_ffs_rpc_rpc_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_ffs_rpc_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 70)
var file_ffs_rpc_rpc_proto_goTypes = []interface{}{
	(JobStatus)(0),                      // 0: ffs.rpc.JobStatus
	(Direction)(0),                      // 1: ffs.rpc.Direction
	(*AddrInfo)(nil),                    // 2: ffs.rpc.AddrInfo
	(*IpfsConfig)(nil),                  // 3: ffs.rpc.IpfsConfig
	(*HotConfig)(nil),                   // 4: ffs.rpc.HotConfig
	(*FilRenew)(nil),                    // 5: ffs.rpc.FilRenew
	(*FilConfig)(nil),                   // 6: ffs.rpc.FilConfig
	(*ColdConfig)(nil),                  // 7: ffs.rpc.ColdConfig
	(*CidConfig)(nil),                   // 8: ffs.rpc.CidConfig
	(*DefaultConfig)(nil),               // 9: ffs.rpc.DefaultConfig
	(*IpfsHotInfo)(nil),                 // 10: ffs.rpc.IpfsHotInfo
	(*HotInfo)(nil),                     // 11: ffs.rpc.HotInfo
	(*FilStorage)(nil),                  // 12: ffs.rpc.FilStorage
	(*FilInfo)(nil),                     // 13: ffs.rpc.FilInfo
	(*ColdInfo)(nil),                    // 14: ffs.rpc.ColdInfo
	(*CidInfo)(nil),                     // 15: ffs.rpc.CidInfo
	(*BalanceInfo)(nil),                 // 16: ffs.rpc.BalanceInfo
	(*InstanceInfo)(nil),                // 17: ffs.rpc.InstanceInfo
	(*Job)(nil),                         // 18: ffs.rpc.Job
	(*DealError)(nil),                   // 19: ffs.rpc.DealError
	(*LogEntry)(nil),                    // 20: ffs.rpc.LogEntry
	(*PaychInfo)(nil),                   // 21: ffs.rpc.PaychInfo
	(*CreateRequest)(nil),               // 22: ffs.rpc.CreateRequest
	(*CreateResponse)(nil),              // 23: ffs.rpc.CreateResponse
	(*ListAPIRequest)(nil),              // 24: ffs.rpc.ListAPIRequest
	(*ListAPIResponse)(nil),             // 25: ffs.rpc.ListAPIResponse
	(*IDRequest)(nil),                   // 26: ffs.rpc.IDRequest
	(*IDResponse)(nil),                  // 27: ffs.rpc.IDResponse
	(*AddrsRequest)(nil),                // 28: ffs.rpc.AddrsRequest
	(*AddrsResponse)(nil),               // 29: ffs.rpc.AddrsResponse
	(*DefaultConfigRequest)(nil),        // 30: ffs.rpc.DefaultConfigRequest
	(*DefaultConfigResponse)(nil),       // 31: ffs.rpc.DefaultConfigResponse
	(*NewAddrRequest)(nil),              // 32: ffs.rpc.NewAddrRequest
	(*NewAddrResponse)(nil),             // 33: ffs.rpc.NewAddrResponse
	(*GetDefaultCidConfigRequest)(nil),  // 34: ffs.rpc.GetDefaultCidConfigRequest
	(*GetDefaultCidConfigResponse)(nil), // 35: ffs.rpc.GetDefaultCidConfigResponse
	(*GetCidConfigRequest)(nil),         // 36: ffs.rpc.GetCidConfigRequest
	(*GetCidConfigResponse)(nil),        // 37: ffs.rpc.GetCidConfigResponse
	(*SetDefaultConfigRequest)(nil),     // 38: ffs.rpc.SetDefaultConfigRequest
	(*SetDefaultConfigResponse)(nil),    // 39: ffs.rpc.SetDefaultConfigResponse
	(*ShowRequest)(nil),                 // 40: ffs.rpc.ShowRequest
	(*ShowResponse)(nil),                // 41: ffs.rpc.ShowResponse
	(*InfoRequest)(nil),                 // 42: ffs.rpc.InfoRequest
	(*InfoResponse)(nil),                // 43: ffs.rpc.InfoResponse
	(*CancelJobRequest)(nil),            // 44: ffs.rpc.CancelJobRequest
	(*CancelJobResponse)(nil),           // 45: ffs.rpc.CancelJobResponse
	(*WatchJobsRequest)(nil),            // 46: ffs.rpc.WatchJobsRequest
	(*WatchJobsResponse)(nil),           // 47: ffs.rpc.WatchJobsResponse
	(*WatchLogsRequest)(nil),            // 48: ffs.rpc.WatchLogsRequest
	(*WatchLogsResponse)(nil),           // 49: ffs.rpc.WatchLogsResponse
	(*ReplaceRequest)(nil),              // 50: ffs.rpc.ReplaceRequest
	(*ReplaceResponse)(nil),             // 51: ffs.rpc.ReplaceResponse
	(*PushConfigRequest)(nil),           // 52: ffs.rpc.PushConfigRequest
	(*PushConfigResponse)(nil),          // 53: ffs.rpc.PushConfigResponse
	(*RemoveRequest)(nil),               // 54: ffs.rpc.RemoveRequest
	(*RemoveResponse)(nil),              // 55: ffs.rpc.RemoveResponse
	(*GetRequest)(nil),                  // 56: ffs.rpc.GetRequest
	(*GetResponse)(nil),                 // 57: ffs.rpc.GetResponse
	(*SendFilRequest)(nil),              // 58: ffs.rpc.SendFilRequest
	(*SendFilResponse)(nil),             // 59: ffs.rpc.SendFilResponse
	(*CloseRequest)(nil),                // 60: ffs.rpc.CloseRequest
	(*CloseResponse)(nil),               // 61: ffs.rpc.CloseResponse
	(*AddToHotRequest)(nil),             // 62: ffs.rpc.AddToHotRequest
	(*AddToHotResponse)(nil),            // 63: ffs.rpc.AddToHotResponse
	(*ListPayChannelsRequest)(nil),      // 64: ffs.rpc.ListPayChannelsRequest
	(*ListPayChannelsResponse)(nil),     // 65: ffs.rpc.ListPayChannelsResponse
	(*CreatePayChannelRequest)(nil),     // 66: ffs.rpc.CreatePayChannelRequest
	(*CreatePayChannelResponse)(nil),    // 67: ffs.rpc.CreatePayChannelResponse
	(*RedeemPayChannelRequest)(nil),     // 68: ffs.rpc.RedeemPayChannelRequest
	(*RedeemPayChannelResponse)(nil),    // 69: ffs.rpc.RedeemPayChannelResponse
	(*ShowAllRequest)(nil),              // 70: ffs.rpc.ShowAllRequest
	(*ShowAllResponse)(nil),             // 71: ffs.rpc.ShowAllResponse
}
var file_ffs_rpc_rpc_proto_depIdxs = []int32{
	3,  // 0: ffs.rpc.HotConfig.ipfs:type_name -> ffs.rpc.IpfsConfig
	5,  // 1: ffs.rpc.FilConfig.renew:type_name -> ffs.rpc.FilRenew
	6,  // 2: ffs.rpc.ColdConfig.filecoin:type_name -> ffs.rpc.FilConfig
	4,  // 3: ffs.rpc.CidConfig.hot:type_name -> ffs.rpc.HotConfig
	7,  // 4: ffs.rpc.CidConfig.cold:type_name -> ffs.rpc.ColdConfig
	4,  // 5: ffs.rpc.DefaultConfig.hot:type_name -> ffs.rpc.HotConfig
	7,  // 6: ffs.rpc.DefaultConfig.cold:type_name -> ffs.rpc.ColdConfig
	10, // 7: ffs.rpc.HotInfo.ipfs:type_name -> ffs.rpc.IpfsHotInfo
	12, // 8: ffs.rpc.FilInfo.proposals:type_name -> ffs.rpc.FilStorage
	13, // 9: ffs.rpc.ColdInfo.filecoin:type_name -> ffs.rpc.FilInfo
	11, // 10: ffs.rpc.CidInfo.hot:type_name -> ffs.rpc.HotInfo
	14, // 11: ffs.rpc.CidInfo.cold:type_name -> ffs.rpc.ColdInfo
	2,  // 12: ffs.rpc.BalanceInfo.addr:type_name -> ffs.rpc.AddrInfo
	9,  // 13: ffs.rpc.InstanceInfo.default_config:type_name -> ffs.rpc.DefaultConfig
	16, // 14: ffs.rpc.InstanceInfo.balances:type_name -> ffs.rpc.BalanceInfo
	0,  // 15: ffs.rpc.Job.status:type_name -> ffs.rpc.JobStatus
	19, // 16: ffs.rpc.Job.deal_errors:type_name -> ffs.rpc.DealError
	1,  // 17: ffs.rpc.PaychInfo.direction:type_name -> ffs.rpc.Direction
	2,  // 18: ffs.rpc.AddrsResponse.addrs:type_name -> ffs.rpc.AddrInfo
	9,  // 19: ffs.rpc.DefaultConfigResponse.default_config:type_name -> ffs.rpc.DefaultConfig
	8,  // 20: ffs.rpc.GetDefaultCidConfigResponse.config:type_name -> ffs.rpc.CidConfig
	8,  // 21: ffs.rpc.GetCidConfigResponse.config:type_name -> ffs.rpc.CidConfig
	9,  // 22: ffs.rpc.SetDefaultConfigRequest.config:type_name -> ffs.rpc.DefaultConfig
	15, // 23: ffs.rpc.ShowResponse.cid_info:type_name -> ffs.rpc.CidInfo
	17, // 24: ffs.rpc.InfoResponse.info:type_name -> ffs.rpc.InstanceInfo
	18, // 25: ffs.rpc.WatchJobsResponse.job:type_name -> ffs.rpc.Job
	20, // 26: ffs.rpc.WatchLogsResponse.log_entry:type_name -> ffs.rpc.LogEntry
	8,  // 27: ffs.rpc.PushConfigRequest.config:type_name -> ffs.rpc.CidConfig
	21, // 28: ffs.rpc.ListPayChannelsResponse.pay_channels:type_name -> ffs.rpc.PaychInfo
	21, // 29: ffs.rpc.CreatePayChannelResponse.pay_channel:type_name -> ffs.rpc.PaychInfo
	15, // 30: ffs.rpc.ShowAllResponse.cid_infos:type_name -> ffs.rpc.CidInfo
	22, // 31: ffs.rpc.RPCService.Create:input_type -> ffs.rpc.CreateRequest
	24, // 32: ffs.rpc.RPCService.ListAPI:input_type -> ffs.rpc.ListAPIRequest
	26, // 33: ffs.rpc.RPCService.ID:input_type -> ffs.rpc.IDRequest
	28, // 34: ffs.rpc.RPCService.Addrs:input_type -> ffs.rpc.AddrsRequest
	30, // 35: ffs.rpc.RPCService.DefaultConfig:input_type -> ffs.rpc.DefaultConfigRequest
	32, // 36: ffs.rpc.RPCService.NewAddr:input_type -> ffs.rpc.NewAddrRequest
	34, // 37: ffs.rpc.RPCService.GetDefaultCidConfig:input_type -> ffs.rpc.GetDefaultCidConfigRequest
	36, // 38: ffs.rpc.RPCService.GetCidConfig:input_type -> ffs.rpc.GetCidConfigRequest
	38, // 39: ffs.rpc.RPCService.SetDefaultConfig:input_type -> ffs.rpc.SetDefaultConfigRequest
	40, // 40: ffs.rpc.RPCService.Show:input_type -> ffs.rpc.ShowRequest
	42, // 41: ffs.rpc.RPCService.Info:input_type -> ffs.rpc.InfoRequest
	44, // 42: ffs.rpc.RPCService.CancelJob:input_type -> ffs.rpc.CancelJobRequest
	46, // 43: ffs.rpc.RPCService.WatchJobs:input_type -> ffs.rpc.WatchJobsRequest
	48, // 44: ffs.rpc.RPCService.WatchLogs:input_type -> ffs.rpc.WatchLogsRequest
	50, // 45: ffs.rpc.RPCService.Replace:input_type -> ffs.rpc.ReplaceRequest
	52, // 46: ffs.rpc.RPCService.PushConfig:input_type -> ffs.rpc.PushConfigRequest
	54, // 47: ffs.rpc.RPCService.Remove:input_type -> ffs.rpc.RemoveRequest
	56, // 48: ffs.rpc.RPCService.Get:input_type -> ffs.rpc.GetRequest
	58, // 49: ffs.rpc.RPCService.SendFil:input_type -> ffs.rpc.SendFilRequest
	60, // 50: ffs.rpc.RPCService.Close:input_type -> ffs.rpc.CloseRequest
	62, // 51: ffs.rpc.RPCService.AddToHot:input_type -> ffs.rpc.AddToHotRequest
	64, // 52: ffs.rpc.RPCService.ListPayChannels:input_type -> ffs.rpc.ListPayChannelsRequest
	66, // 53: ffs.rpc.RPCService.CreatePayChannel:input_type -> ffs.rpc.CreatePayChannelRequest
	68, // 54: ffs.rpc.RPCService.RedeemPayChannel:input_type -> ffs.rpc.RedeemPayChannelRequest
	70, // 55: ffs.rpc.RPCService.ShowAll:input_type -> ffs.rpc.ShowAllRequest
	23, // 56: ffs.rpc.RPCService.Create:output_type -> ffs.rpc.CreateResponse
	25, // 57: ffs.rpc.RPCService.ListAPI:output_type -> ffs.rpc.ListAPIResponse
	27, // 58: ffs.rpc.RPCService.ID:output_type -> ffs.rpc.IDResponse
	29, // 59: ffs.rpc.RPCService.Addrs:output_type -> ffs.rpc.AddrsResponse
	31, // 60: ffs.rpc.RPCService.DefaultConfig:output_type -> ffs.rpc.DefaultConfigResponse
	33, // 61: ffs.rpc.RPCService.NewAddr:output_type -> ffs.rpc.NewAddrResponse
	35, // 62: ffs.rpc.RPCService.GetDefaultCidConfig:output_type -> ffs.rpc.GetDefaultCidConfigResponse
	37, // 63: ffs.rpc.RPCService.GetCidConfig:output_type -> ffs.rpc.GetCidConfigResponse
	39, // 64: ffs.rpc.RPCService.SetDefaultConfig:output_type -> ffs.rpc.SetDefaultConfigResponse
	41, // 65: ffs.rpc.RPCService.Show:output_type -> ffs.rpc.ShowResponse
	43, // 66: ffs.rpc.RPCService.Info:output_type -> ffs.rpc.InfoResponse
	45, // 67: ffs.rpc.RPCService.CancelJob:output_type -> ffs.rpc.CancelJobResponse
	47, // 68: ffs.rpc.RPCService.WatchJobs:output_type -> ffs.rpc.WatchJobsResponse
	49, // 69: ffs.rpc.RPCService.WatchLogs:output_type -> ffs.rpc.WatchLogsResponse
	51, // 70: ffs.rpc.RPCService.Replace:output_type -> ffs.rpc.ReplaceResponse
	53, // 71: ffs.rpc.RPCService.PushConfig:output_type -> ffs.rpc.PushConfigResponse
	55, // 72: ffs.rpc.RPCService.Remove:output_type -> ffs.rpc.RemoveResponse
	57, // 73: ffs.rpc.RPCService.Get:output_type -> ffs.rpc.GetResponse
	59, // 74: ffs.rpc.RPCService.SendFil:output_type -> ffs.rpc.SendFilResponse
	61, // 75: ffs.rpc.RPCService.Close:output_type -> ffs.rpc.CloseResponse
	63, // 76: ffs.rpc.RPCService.AddToHot:output_type -> ffs.rpc.AddToHotResponse
	65, // 77: ffs.rpc.RPCService.ListPayChannels:output_type -> ffs.rpc.ListPayChannelsResponse
	67, // 78: ffs.rpc.RPCService.CreatePayChannel:output_type -> ffs.rpc.CreatePayChannelResponse
	69, // 79: ffs.rpc.RPCService.RedeemPayChannel:output_type -> ffs.rpc.RedeemPayChannelResponse
	71, // 80: ffs.rpc.RPCService.ShowAll:output_type -> ffs.rpc.ShowAllResponse
	56, // [56:81] is the sub-list for method output_type
	31, // [31:56] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_ffs_rpc_rpc_proto_init() }
func file_ffs_rpc_rpc_proto_init() {
	if File_ffs_rpc_rpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ffs_rpc_rpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddrInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IpfsConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HotConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilRenew); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColdConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CidConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IpfsHotInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HotInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilStorage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColdInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CidInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Job); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DealError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaychInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAPIRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAPIResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddrsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddrsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewAddrRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewAddrResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultCidConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultCidConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCidConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCidConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDefaultConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDefaultConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelJobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchJobsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchJobsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchLogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchLogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendFilRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendFilResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddToHotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddToHotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPayChannelsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPayChannelsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePayChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePayChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedeemPayChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedeemPayChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffs_rpc_rpc_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ffs_rpc_rpc_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   70,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ffs_rpc_rpc_proto_goTypes,
		DependencyIndexes: file_ffs_rpc_rpc_proto_depIdxs,
		EnumInfos:         file_ffs_rpc_rpc_proto_enumTypes,
		MessageInfos:      file_ffs_rpc_rpc_proto_msgTypes,
	}.Build()
	File_ffs_rpc_rpc_proto = out.File
	file_ffs_rpc_rpc_proto_rawDesc = nil
	file_ffs_rpc_rpc_proto_goTypes = nil
	file_ffs_rpc_rpc_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RPCServiceClient is the client API for RPCService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCServiceClient interface {
	// Admin
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	ListAPI(ctx context.Context, in *ListAPIRequest, opts ...grpc.CallOption) (*ListAPIResponse, error)
	// Instance
	ID(ctx context.Context, in *IDRequest, opts ...grpc.CallOption) (*IDResponse, error)
	Addrs(ctx context.Context, in *AddrsRequest, opts ...grpc.CallOption) (*AddrsResponse, error)
	DefaultConfig(ctx context.Context, in *DefaultConfigRequest, opts ...grpc.CallOption) (*DefaultConfigResponse, error)
	NewAddr(ctx context.Context, in *NewAddrRequest, opts ...grpc.CallOption) (*NewAddrResponse, error)
	GetDefaultCidConfig(ctx context.Context, in *GetDefaultCidConfigRequest, opts ...grpc.CallOption) (*GetDefaultCidConfigResponse, error)
	GetCidConfig(ctx context.Context, in *GetCidConfigRequest, opts ...grpc.CallOption) (*GetCidConfigResponse, error)
	SetDefaultConfig(ctx context.Context, in *SetDefaultConfigRequest, opts ...grpc.CallOption) (*SetDefaultConfigResponse, error)
	Show(ctx context.Context, in *ShowRequest, opts ...grpc.CallOption) (*ShowResponse, error)
	Info(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*InfoResponse, error)
	CancelJob(ctx context.Context, in *CancelJobRequest, opts ...grpc.CallOption) (*CancelJobResponse, error)
	WatchJobs(ctx context.Context, in *WatchJobsRequest, opts ...grpc.CallOption) (RPCService_WatchJobsClient, error)
	WatchLogs(ctx context.Context, in *WatchLogsRequest, opts ...grpc.CallOption) (RPCService_WatchLogsClient, error)
	Replace(ctx context.Context, in *ReplaceRequest, opts ...grpc.CallOption) (*ReplaceResponse, error)
	PushConfig(ctx context.Context, in *PushConfigRequest, opts ...grpc.CallOption) (*PushConfigResponse, error)
	Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (RPCService_GetClient, error)
	SendFil(ctx context.Context, in *SendFilRequest, opts ...grpc.CallOption) (*SendFilResponse, error)
	Close(ctx context.Context, in *CloseRequest, opts ...grpc.CallOption) (*CloseResponse, error)
	AddToHot(ctx context.Context, opts ...grpc.CallOption) (RPCService_AddToHotClient, error)
	ListPayChannels(ctx context.Context, in *ListPayChannelsRequest, opts ...grpc.CallOption) (*ListPayChannelsResponse, error)
	CreatePayChannel(ctx context.Context, in *CreatePayChannelRequest, opts ...grpc.CallOption) (*CreatePayChannelResponse, error)
	RedeemPayChannel(ctx context.Context, in *RedeemPayChannelRequest, opts ...grpc.CallOption) (*RedeemPayChannelResponse, error)
	// UI support
	ShowAll(ctx context.Context, in *ShowAllRequest, opts ...grpc.CallOption) (*ShowAllResponse, error)
}

type rPCServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRPCServiceClient(cc grpc.ClientConnInterface) RPCServiceClient {
	return &rPCServiceClient{cc}
}

func (c *rPCServiceClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPCService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCServiceClient) ListAPI(ctx context.Context, in *ListAPIRequest, opts ...grpc.CallOption) (*ListAPIResponse, error) {
	out := new(ListAPIResponse)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPCService/ListAPI", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCServiceClient) ID(ctx context.Context, in *IDRequest, opts ...grpc.CallOption) (*IDResponse, error) {
	out := new(IDResponse)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPCService/ID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCServiceClient) Addrs(ctx context.Context, in *AddrsRequest, opts ...grpc.CallOption) (*AddrsResponse, error) {
	out := new(AddrsResponse)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPCService/Addrs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCServiceClient) DefaultConfig(ctx context.Context, in *DefaultConfigRequest, opts ...grpc.CallOption) (*DefaultConfigResponse, error) {
	out := new(DefaultConfigResponse)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPCService/DefaultConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCServiceClient) NewAddr(ctx context.Context, in *NewAddrRequest, opts ...grpc.CallOption) (*NewAddrResponse, error) {
	out := new(NewAddrResponse)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPCService/NewAddr", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCServiceClient) GetDefaultCidConfig(ctx context.Context, in *GetDefaultCidConfigRequest, opts ...grpc.CallOption) (*GetDefaultCidConfigResponse, error) {
	out := new(GetDefaultCidConfigResponse)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPCService/GetDefaultCidConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCServiceClient) GetCidConfig(ctx context.Context, in *GetCidConfigRequest, opts ...grpc.CallOption) (*GetCidConfigResponse, error) {
	out := new(GetCidConfigResponse)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPCService/GetCidConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCServiceClient) SetDefaultConfig(ctx context.Context, in *SetDefaultConfigRequest, opts ...grpc.CallOption) (*SetDefaultConfigResponse, error) {
	out := new(SetDefaultConfigResponse)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPCService/SetDefaultConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCServiceClient) Show(ctx context.Context, in *ShowRequest, opts ...grpc.CallOption) (*ShowResponse, error) {
	out := new(ShowResponse)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPCService/Show", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCServiceClient) Info(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*InfoResponse, error) {
	out := new(InfoResponse)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPCService/Info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCServiceClient) CancelJob(ctx context.Context, in *CancelJobRequest, opts ...grpc.CallOption) (*CancelJobResponse, error) {
	out := new(CancelJobResponse)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPCService/CancelJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCServiceClient) WatchJobs(ctx context.Context, in *WatchJobsRequest, opts ...grpc.CallOption) (RPCService_WatchJobsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RPCService_serviceDesc.Streams[0], "/ffs.rpc.RPCService/WatchJobs", opts...)
	if err != nil {
		return nil, err
	}
	x := &rPCServiceWatchJobsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RPCService_WatchJobsClient interface {
	Recv() (*WatchJobsResponse, error)
	grpc.ClientStream
}

type rPCServiceWatchJobsClient struct {
	grpc.ClientStream
}

func (x *rPCServiceWatchJobsClient) Recv() (*WatchJobsResponse, error) {
	m := new(WatchJobsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rPCServiceClient) WatchLogs(ctx context.Context, in *WatchLogsRequest, opts ...grpc.CallOption) (RPCService_WatchLogsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RPCService_serviceDesc.Streams[1], "/ffs.rpc.RPCService/WatchLogs", opts...)
	if err != nil {
		return nil, err
	}
	x := &rPCServiceWatchLogsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RPCService_WatchLogsClient interface {
	Recv() (*WatchLogsResponse, error)
	grpc.ClientStream
}

type rPCServiceWatchLogsClient struct {
	grpc.ClientStream
}

func (x *rPCServiceWatchLogsClient) Recv() (*WatchLogsResponse, error) {
	m := new(WatchLogsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rPCServiceClient) Replace(ctx context.Context, in *ReplaceRequest, opts ...grpc.CallOption) (*ReplaceResponse, error) {
	out := new(ReplaceResponse)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPCService/Replace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCServiceClient) PushConfig(ctx context.Context, in *PushConfigRequest, opts ...grpc.CallOption) (*PushConfigResponse, error) {
	out := new(PushConfigResponse)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPCService/PushConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCServiceClient) Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error) {
	out := new(RemoveResponse)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPCService/Remove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCServiceClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (RPCService_GetClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RPCService_serviceDesc.Streams[2], "/ffs.rpc.RPCService/Get", opts...)
	if err != nil {
		return nil, err
	}
	x := &rPCServiceGetClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RPCService_GetClient interface {
	Recv() (*GetResponse, error)
	grpc.ClientStream
}

type rPCServiceGetClient struct {
	grpc.ClientStream
}

func (x *rPCServiceGetClient) Recv() (*GetResponse, error) {
	m := new(GetResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rPCServiceClient) SendFil(ctx context.Context, in *SendFilRequest, opts ...grpc.CallOption) (*SendFilResponse, error) {
	out := new(SendFilResponse)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPCService/SendFil", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCServiceClient) Close(ctx context.Context, in *CloseRequest, opts ...grpc.CallOption) (*CloseResponse, error) {
	out := new(CloseResponse)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPCService/Close", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCServiceClient) AddToHot(ctx context.Context, opts ...grpc.CallOption) (RPCService_AddToHotClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RPCService_serviceDesc.Streams[3], "/ffs.rpc.RPCService/AddToHot", opts...)
	if err != nil {
		return nil, err
	}
	x := &rPCServiceAddToHotClient{stream}
	return x, nil
}

type RPCService_AddToHotClient interface {
	Send(*AddToHotRequest) error
	CloseAndRecv() (*AddToHotResponse, error)
	grpc.ClientStream
}

type rPCServiceAddToHotClient struct {
	grpc.ClientStream
}

func (x *rPCServiceAddToHotClient) Send(m *AddToHotRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *rPCServiceAddToHotClient) CloseAndRecv() (*AddToHotResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(AddToHotResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rPCServiceClient) ListPayChannels(ctx context.Context, in *ListPayChannelsRequest, opts ...grpc.CallOption) (*ListPayChannelsResponse, error) {
	out := new(ListPayChannelsResponse)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPCService/ListPayChannels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCServiceClient) CreatePayChannel(ctx context.Context, in *CreatePayChannelRequest, opts ...grpc.CallOption) (*CreatePayChannelResponse, error) {
	out := new(CreatePayChannelResponse)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPCService/CreatePayChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCServiceClient) RedeemPayChannel(ctx context.Context, in *RedeemPayChannelRequest, opts ...grpc.CallOption) (*RedeemPayChannelResponse, error) {
	out := new(RedeemPayChannelResponse)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPCService/RedeemPayChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCServiceClient) ShowAll(ctx context.Context, in *ShowAllRequest, opts ...grpc.CallOption) (*ShowAllResponse, error) {
	out := new(ShowAllResponse)
	err := c.cc.Invoke(ctx, "/ffs.rpc.RPCService/ShowAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCServiceServer is the server API for RPCService service.
type RPCServiceServer interface {
	// Admin
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
	ListAPI(context.Context, *ListAPIRequest) (*ListAPIResponse, error)
	// Instance
	ID(context.Context, *IDRequest) (*IDResponse, error)
	Addrs(context.Context, *AddrsRequest) (*AddrsResponse, error)
	DefaultConfig(context.Context, *DefaultConfigRequest) (*DefaultConfigResponse, error)
	NewAddr(context.Context, *NewAddrRequest) (*NewAddrResponse, error)
	GetDefaultCidConfig(context.Context, *GetDefaultCidConfigRequest) (*GetDefaultCidConfigResponse, error)
	GetCidConfig(context.Context, *GetCidConfigRequest) (*GetCidConfigResponse, error)
	SetDefaultConfig(context.Context, *SetDefaultConfigRequest) (*SetDefaultConfigResponse, error)
	Show(context.Context, *ShowRequest) (*ShowResponse, error)
	Info(context.Context, *InfoRequest) (*InfoResponse, error)
	CancelJob(context.Context, *CancelJobRequest) (*CancelJobResponse, error)
	WatchJobs(*WatchJobsRequest, RPCService_WatchJobsServer) error
	WatchLogs(*WatchLogsRequest, RPCService_WatchLogsServer) error
	Replace(context.Context, *ReplaceRequest) (*ReplaceResponse, error)
	PushConfig(context.Context, *PushConfigRequest) (*PushConfigResponse, error)
	Remove(context.Context, *RemoveRequest) (*RemoveResponse, error)
	Get(*GetRequest, RPCService_GetServer) error
	SendFil(context.Context, *SendFilRequest) (*SendFilResponse, error)
	Close(context.Context, *CloseRequest) (*CloseResponse, error)
	AddToHot(RPCService_AddToHotServer) error
	ListPayChannels(context.Context, *ListPayChannelsRequest) (*ListPayChannelsResponse, error)
	CreatePayChannel(context.Context, *CreatePayChannelRequest) (*CreatePayChannelResponse, error)
	RedeemPayChannel(context.Context, *RedeemPayChannelRequest) (*RedeemPayChannelResponse, error)
	// UI support
	ShowAll(context.Context, *ShowAllRequest) (*ShowAllResponse, error)
}

// UnimplementedRPCServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRPCServiceServer struct {
}

func (*UnimplementedRPCServiceServer) Create(context.Context, *CreateRequest) (*CreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedRPCServiceServer) ListAPI(context.Context, *ListAPIRequest) (*ListAPIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAPI not implemented")
}
func (*UnimplementedRPCServiceServer) ID(context.Context, *IDRequest) (*IDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ID not implemented")
}
func (*UnimplementedRPCServiceServer) Addrs(context.Context, *AddrsRequest) (*AddrsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Addrs not implemented")
}
func (*UnimplementedRPCServiceServer) DefaultConfig(context.Context, *DefaultConfigRequest) (*DefaultConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DefaultConfig not implemented")
}
func (*UnimplementedRPCServiceServer) NewAddr(context.Context, *NewAddrRequest) (*NewAddrResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewAddr not implemented")
}
func (*UnimplementedRPCServiceServer) GetDefaultCidConfig(context.Context, *GetDefaultCidConfigRequest) (*GetDefaultCidConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDefaultCidConfig not implemented")
}
func (*UnimplementedRPCServiceServer) GetCidConfig(context.Context, *GetCidConfigRequest) (*GetCidConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCidConfig not implemented")
}
func (*UnimplementedRPCServiceServer) SetDefaultConfig(context.Context, *SetDefaultConfigRequest) (*SetDefaultConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetDefaultConfig not implemented")
}
func (*UnimplementedRPCServiceServer) Show(context.Context, *ShowRequest) (*ShowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Show not implemented")
}
func (*UnimplementedRPCServiceServer) Info(context.Context, *InfoRequest) (*InfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Info not implemented")
}
func (*UnimplementedRPCServiceServer) CancelJob(context.Context, *CancelJobRequest) (*CancelJobResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelJob not implemented")
}
func (*UnimplementedRPCServiceServer) WatchJobs(*WatchJobsRequest, RPCService_WatchJobsServer) error {
	return status.Errorf(codes.Unimplemented, "method WatchJobs not implemented")
}
func (*UnimplementedRPCServiceServer) WatchLogs(*WatchLogsRequest, RPCService_WatchLogsServer) error {
	return status.Errorf(codes.Unimplemented, "method WatchLogs not implemented")
}
func (*UnimplementedRPCServiceServer) Replace(context.Context, *ReplaceRequest) (*ReplaceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Replace not implemented")
}
func (*UnimplementedRPCServiceServer) PushConfig(context.Context, *PushConfigRequest) (*PushConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushConfig not implemented")
}
func (*UnimplementedRPCServiceServer) Remove(context.Context, *RemoveRequest) (*RemoveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Remove not implemented")
}
func (*UnimplementedRPCServiceServer) Get(*GetRequest, RPCService_GetServer) error {
	return status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedRPCServiceServer) SendFil(context.Context, *SendFilRequest) (*SendFilResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendFil not implemented")
}
func (*UnimplementedRPCServiceServer) Close(context.Context, *CloseRequest) (*CloseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Close not implemented")
}
func (*UnimplementedRPCServiceServer) AddToHot(RPCService_AddToHotServer) error {
	return status.Errorf(codes.Unimplemented, "method AddToHot not implemented")
}
func (*UnimplementedRPCServiceServer) ListPayChannels(context.Context, *ListPayChannelsRequest) (*ListPayChannelsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPayChannels not implemented")
}
func (*UnimplementedRPCServiceServer) CreatePayChannel(context.Context, *CreatePayChannelRequest) (*CreatePayChannelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePayChannel not implemented")
}
func (*UnimplementedRPCServiceServer) RedeemPayChannel(context.Context, *RedeemPayChannelRequest) (*RedeemPayChannelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RedeemPayChannel not implemented")
}
func (*UnimplementedRPCServiceServer) ShowAll(context.Context, *ShowAllRequest) (*ShowAllResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowAll not implemented")
}

func RegisterRPCServiceServer(s *grpc.Server, srv RPCServiceServer) {
	s.RegisterService(&_RPCService_serviceDesc, srv)
}

func _RPCService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPCService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServiceServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCService_ListAPI_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAPIRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServiceServer).ListAPI(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPCService/ListAPI",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServiceServer).ListAPI(ctx, req.(*ListAPIRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCService_ID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServiceServer).ID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPCService/ID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServiceServer).ID(ctx, req.(*IDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCService_Addrs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddrsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServiceServer).Addrs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPCService/Addrs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServiceServer).Addrs(ctx, req.(*AddrsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCService_DefaultConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DefaultConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServiceServer).DefaultConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPCService/DefaultConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServiceServer).DefaultConfig(ctx, req.(*DefaultConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCService_NewAddr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewAddrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServiceServer).NewAddr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPCService/NewAddr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServiceServer).NewAddr(ctx, req.(*NewAddrRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCService_GetDefaultCidConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDefaultCidConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServiceServer).GetDefaultCidConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPCService/GetDefaultCidConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServiceServer).GetDefaultCidConfig(ctx, req.(*GetDefaultCidConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCService_GetCidConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCidConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServiceServer).GetCidConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPCService/GetCidConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServiceServer).GetCidConfig(ctx, req.(*GetCidConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCService_SetDefaultConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetDefaultConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServiceServer).SetDefaultConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPCService/SetDefaultConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServiceServer).SetDefaultConfig(ctx, req.(*SetDefaultConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCService_Show_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServiceServer).Show(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPCService/Show",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServiceServer).Show(ctx, req.(*ShowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCService_Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServiceServer).Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPCService/Info",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServiceServer).Info(ctx, req.(*InfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCService_CancelJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServiceServer).CancelJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPCService/CancelJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServiceServer).CancelJob(ctx, req.(*CancelJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCService_WatchJobs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchJobsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RPCServiceServer).WatchJobs(m, &rPCServiceWatchJobsServer{stream})
}

type RPCService_WatchJobsServer interface {
	Send(*WatchJobsResponse) error
	grpc.ServerStream
}

type rPCServiceWatchJobsServer struct {
	grpc.ServerStream
}

func (x *rPCServiceWatchJobsServer) Send(m *WatchJobsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _RPCService_WatchLogs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchLogsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RPCServiceServer).WatchLogs(m, &rPCServiceWatchLogsServer{stream})
}

type RPCService_WatchLogsServer interface {
	Send(*WatchLogsResponse) error
	grpc.ServerStream
}

type rPCServiceWatchLogsServer struct {
	grpc.ServerStream
}

func (x *rPCServiceWatchLogsServer) Send(m *WatchLogsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _RPCService_Replace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServiceServer).Replace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPCService/Replace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServiceServer).Replace(ctx, req.(*ReplaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCService_PushConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServiceServer).PushConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPCService/PushConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServiceServer).PushConfig(ctx, req.(*PushConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCService_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServiceServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPCService/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServiceServer).Remove(ctx, req.(*RemoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCService_Get_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RPCServiceServer).Get(m, &rPCServiceGetServer{stream})
}

type RPCService_GetServer interface {
	Send(*GetResponse) error
	grpc.ServerStream
}

type rPCServiceGetServer struct {
	grpc.ServerStream
}

func (x *rPCServiceGetServer) Send(m *GetResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _RPCService_SendFil_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendFilRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServiceServer).SendFil(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPCService/SendFil",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServiceServer).SendFil(ctx, req.(*SendFilRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCService_Close_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServiceServer).Close(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPCService/Close",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServiceServer).Close(ctx, req.(*CloseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCService_AddToHot_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RPCServiceServer).AddToHot(&rPCServiceAddToHotServer{stream})
}

type RPCService_AddToHotServer interface {
	SendAndClose(*AddToHotResponse) error
	Recv() (*AddToHotRequest, error)
	grpc.ServerStream
}

type rPCServiceAddToHotServer struct {
	grpc.ServerStream
}

func (x *rPCServiceAddToHotServer) SendAndClose(m *AddToHotResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *rPCServiceAddToHotServer) Recv() (*AddToHotRequest, error) {
	m := new(AddToHotRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _RPCService_ListPayChannels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPayChannelsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServiceServer).ListPayChannels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPCService/ListPayChannels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServiceServer).ListPayChannels(ctx, req.(*ListPayChannelsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCService_CreatePayChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePayChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServiceServer).CreatePayChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPCService/CreatePayChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServiceServer).CreatePayChannel(ctx, req.(*CreatePayChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCService_RedeemPayChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RedeemPayChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServiceServer).RedeemPayChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPCService/RedeemPayChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServiceServer).RedeemPayChannel(ctx, req.(*RedeemPayChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCService_ShowAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShowAllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServiceServer).ShowAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ffs.rpc.RPCService/ShowAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServiceServer).ShowAll(ctx, req.(*ShowAllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ffs.rpc.RPCService",
	HandlerType: (*RPCServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _RPCService_Create_Handler,
		},
		{
			MethodName: "ListAPI",
			Handler:    _RPCService_ListAPI_Handler,
		},
		{
			MethodName: "ID",
			Handler:    _RPCService_ID_Handler,
		},
		{
			MethodName: "Addrs",
			Handler:    _RPCService_Addrs_Handler,
		},
		{
			MethodName: "DefaultConfig",
			Handler:    _RPCService_DefaultConfig_Handler,
		},
		{
			MethodName: "NewAddr",
			Handler:    _RPCService_NewAddr_Handler,
		},
		{
			MethodName: "GetDefaultCidConfig",
			Handler:    _RPCService_GetDefaultCidConfig_Handler,
		},
		{
			MethodName: "GetCidConfig",
			Handler:    _RPCService_GetCidConfig_Handler,
		},
		{
			MethodName: "SetDefaultConfig",
			Handler:    _RPCService_SetDefaultConfig_Handler,
		},
		{
			MethodName: "Show",
			Handler:    _RPCService_Show_Handler,
		},
		{
			MethodName: "Info",
			Handler:    _RPCService_Info_Handler,
		},
		{
			MethodName: "CancelJob",
			Handler:    _RPCService_CancelJob_Handler,
		},
		{
			MethodName: "Replace",
			Handler:    _RPCService_Replace_Handler,
		},
		{
			MethodName: "PushConfig",
			Handler:    _RPCService_PushConfig_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _RPCService_Remove_Handler,
		},
		{
			MethodName: "SendFil",
			Handler:    _RPCService_SendFil_Handler,
		},
		{
			MethodName: "Close",
			Handler:    _RPCService_Close_Handler,
		},
		{
			MethodName: "ListPayChannels",
			Handler:    _RPCService_ListPayChannels_Handler,
		},
		{
			MethodName: "CreatePayChannel",
			Handler:    _RPCService_CreatePayChannel_Handler,
		},
		{
			MethodName: "RedeemPayChannel",
			Handler:    _RPCService_RedeemPayChannel_Handler,
		},
		{
			MethodName: "ShowAll",
			Handler:    _RPCService_ShowAll_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchJobs",
			Handler:       _RPCService_WatchJobs_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "WatchLogs",
			Handler:       _RPCService_WatchLogs_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Get",
			Handler:       _RPCService_Get_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "AddToHot",
			Handler:       _RPCService_AddToHot_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "ffs/rpc/rpc.proto",
}
