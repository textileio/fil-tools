syntax = "proto3";
package rpc;

option java_multiple_files = true;
option java_package = "io.textile.filecoin.ffs.pb";
option java_outer_classname = "Filecoinffs";
option objc_class_prefix = "TTE";

// model messages
// ------------------------------------

message IpfsConfig {
   int64 addTimeout = 1;
}

message HotConfig {
	bool enabled = 1;
	bool allowUnfreeze = 2;
	IpfsConfig ipfs = 3;
}

message FilRenew {
	bool enabled = 1;
   int64 threshold = 2;
}

message FilConfig {
	int64 repFactor = 1;
	int64 dealDuration = 2;
	repeated string excludedMiners = 3;
	repeated string countryCodes = 4;
	FilRenew renew = 5;
}

message ColdConfig {
	bool enabled = 1;
	FilConfig filecoin = 2;
}

message CidConfig {
   string cid = 1;
   HotConfig hot = 2;
	ColdConfig cold = 3;
}

message DefaultCidConfig {
	HotConfig hot = 1;
	ColdConfig cold = 2;
}

message IpfsHotInfo {
   int64 created = 1;
}

message HotInfo {
   bool enabled = 1;
   int64 size = 2;
   IpfsHotInfo ipfs = 3;
}

message FilStorage {
   string proposalCid = 1;
   bool renewed = 2;
   int64 duration = 3;
   int64 activationEpoch = 4;
   string miner = 5;
}

message FilInfo {
   string dataCid = 1;
   repeated FilStorage proposals = 2;
}

message ColdInfo {
   FilInfo filecoin = 1;
}

message CidInfo {
	string jobID = 1;
	string cid = 2;
	int64 created = 3;
	HotInfo hot = 4; 
	ColdInfo cold = 5;
}

message WalletInfo {
   string address = 1;
   uint64 balance = 2;
}

message InstanceInfo {
	string ID = 1;
	DefaultCidConfig defaultCidConfig = 2;
	WalletInfo wallet = 3;
	repeated string pins = 4;
}

enum JobStatus {
   Queued = 0;
	InProgress = 1;
	Failed = 2;
	Canceled = 3;
	Success = 4;
}

message Job {
	string ID = 1; 
	string apiID = 2;
	string cid = 3;
	JobStatus status = 4;
	string errCause = 5;
}

// request/reply messages
// -------------------------------------

message CreateRequest {
}

message CreateReply {
    string ID = 1;
    string token = 2;
}

message IDRequest {
}

message IDReply {
   string ID = 1;
}

message WalletAddrRequest {
}

message WalletAddrReply {
   string addr = 1;
}

message GetDefaultCidConfigRequest {
   string cid = 1;
}

message GetDefaultCidConfigReply {
   CidConfig config = 1;
}

message GetCidConfigRequest {
   string cid = 1;
}

message GetCidConfigReply {
   CidConfig config = 1;
}

message SetDefaultCidConfigRequest {
   DefaultCidConfig config = 1;
}

message SetDefaultCidConfigReply {
}

message ShowRequest {
   string cid = 1;
}

message ShowReply {
   CidInfo cidInfo = 1;
}

message InfoRequest {
}

message InfoReply {
   InstanceInfo info = 1;
}

message WatchJobsRequest {
   repeated string jids = 1;
}

message WatchJobsReply {
   Job job = 1;
}

message WatchLogsRequest {
	string cid = 1;
	string jid = 2;
}

message WatchLogsReply {
	LogEntry logEntry = 1;
}

message LogEntry {
	string cid = 1;
	string jid = 2;
        int64 time = 3;
        string msg = 4;
}

message ReplaceRequest {
   string cid1 = 1;
   string cid2 = 2;
}

message ReplaceReply {
   string jobID = 1;
}

message PushConfigRequest {
   string cid = 1;
   CidConfig config = 2;
   bool hasConfig = 3;
   bool overrideConfig = 4;
   bool hasOverrideConfig = 5;
}

message PushConfigReply {
   string jobID = 1;
}

message RemoveRequest {
   string cid = 1;
}

message RemoveReply {
}

message GetRequest {
    string cid = 1;
}

message GetReply {
    bytes chunk = 1;
}

message CloseRequest {
}

message CloseReply {
}

message AddToHotRequest {
  bytes chunk = 1;
}

message AddToHotReply {
  string cid = 1;
}



service FFS {
   rpc Create(CreateRequest) returns (CreateReply) {}
   rpc ID(IDRequest) returns (IDReply) {}
   rpc WalletAddr(WalletAddrRequest) returns (WalletAddrReply) {}
   rpc GetDefaultCidConfig(GetDefaultCidConfigRequest) returns (GetDefaultCidConfigReply) {}
   rpc GetCidConfig(GetCidConfigRequest) returns (GetCidConfigReply) {}
   rpc SetDefaultCidConfig(SetDefaultCidConfigRequest) returns (SetDefaultCidConfigReply) {}
   rpc Show(ShowRequest) returns (ShowReply) {}
   rpc Info(InfoRequest) returns (InfoReply) {}
   rpc WatchJobs(WatchJobsRequest) returns (stream WatchJobsReply) {}
   rpc WatchLogs(WatchLogsRequest) returns (stream WatchLogsReply){}
   rpc Replace(ReplaceRequest) returns (ReplaceReply) {}
   rpc PushConfig(PushConfigRequest) returns (PushConfigReply) {}
   rpc Remove(RemoveRequest) returns (RemoveReply) {}
   rpc Get(GetRequest) returns (stream GetReply) {}
   rpc Close(CloseRequest) returns (CloseReply) {}
   rpc AddToHot(stream AddToHotRequest) returns (AddToHotReply) {}
}
