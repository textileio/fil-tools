// Code generated by protoc-gen-go. DO NOT EDIT.
// source: deals/rpc/rpc.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DealConfig struct {
	Miner                string   `protobuf:"bytes,1,opt,name=miner,proto3" json:"miner,omitempty"`
	EpochPrice           uint64   `protobuf:"varint,2,opt,name=epochPrice,proto3" json:"epochPrice,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DealConfig) Reset()         { *m = DealConfig{} }
func (m *DealConfig) String() string { return proto.CompactTextString(m) }
func (*DealConfig) ProtoMessage()    {}
func (*DealConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_a04a6247c24d6956, []int{0}
}

func (m *DealConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DealConfig.Unmarshal(m, b)
}
func (m *DealConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DealConfig.Marshal(b, m, deterministic)
}
func (m *DealConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DealConfig.Merge(m, src)
}
func (m *DealConfig) XXX_Size() int {
	return xxx_messageInfo_DealConfig.Size(m)
}
func (m *DealConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DealConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DealConfig proto.InternalMessageInfo

func (m *DealConfig) GetMiner() string {
	if m != nil {
		return m.Miner
	}
	return ""
}

func (m *DealConfig) GetEpochPrice() uint64 {
	if m != nil {
		return m.EpochPrice
	}
	return 0
}

type DealInfo struct {
	ProposalCid          string   `protobuf:"bytes,1,opt,name=proposalCid,proto3" json:"proposalCid,omitempty"`
	StateID              uint64   `protobuf:"varint,2,opt,name=stateID,proto3" json:"stateID,omitempty"`
	StateName            string   `protobuf:"bytes,3,opt,name=stateName,proto3" json:"stateName,omitempty"`
	Miner                string   `protobuf:"bytes,4,opt,name=miner,proto3" json:"miner,omitempty"`
	PieceCID             []byte   `protobuf:"bytes,5,opt,name=pieceCID,proto3" json:"pieceCID,omitempty"`
	Size                 uint64   `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	PricePerEpoch        uint64   `protobuf:"varint,7,opt,name=pricePerEpoch,proto3" json:"pricePerEpoch,omitempty"`
	Duration             uint64   `protobuf:"varint,8,opt,name=duration,proto3" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DealInfo) Reset()         { *m = DealInfo{} }
func (m *DealInfo) String() string { return proto.CompactTextString(m) }
func (*DealInfo) ProtoMessage()    {}
func (*DealInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a04a6247c24d6956, []int{1}
}

func (m *DealInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DealInfo.Unmarshal(m, b)
}
func (m *DealInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DealInfo.Marshal(b, m, deterministic)
}
func (m *DealInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DealInfo.Merge(m, src)
}
func (m *DealInfo) XXX_Size() int {
	return xxx_messageInfo_DealInfo.Size(m)
}
func (m *DealInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DealInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DealInfo proto.InternalMessageInfo

func (m *DealInfo) GetProposalCid() string {
	if m != nil {
		return m.ProposalCid
	}
	return ""
}

func (m *DealInfo) GetStateID() uint64 {
	if m != nil {
		return m.StateID
	}
	return 0
}

func (m *DealInfo) GetStateName() string {
	if m != nil {
		return m.StateName
	}
	return ""
}

func (m *DealInfo) GetMiner() string {
	if m != nil {
		return m.Miner
	}
	return ""
}

func (m *DealInfo) GetPieceCID() []byte {
	if m != nil {
		return m.PieceCID
	}
	return nil
}

func (m *DealInfo) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *DealInfo) GetPricePerEpoch() uint64 {
	if m != nil {
		return m.PricePerEpoch
	}
	return 0
}

func (m *DealInfo) GetDuration() uint64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

type StoreParams struct {
	Address              string        `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	DealConfigs          []*DealConfig `protobuf:"bytes,2,rep,name=dealConfigs,proto3" json:"dealConfigs,omitempty"`
	Duration             uint64        `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *StoreParams) Reset()         { *m = StoreParams{} }
func (m *StoreParams) String() string { return proto.CompactTextString(m) }
func (*StoreParams) ProtoMessage()    {}
func (*StoreParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_a04a6247c24d6956, []int{2}
}

func (m *StoreParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreParams.Unmarshal(m, b)
}
func (m *StoreParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreParams.Marshal(b, m, deterministic)
}
func (m *StoreParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreParams.Merge(m, src)
}
func (m *StoreParams) XXX_Size() int {
	return xxx_messageInfo_StoreParams.Size(m)
}
func (m *StoreParams) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreParams.DiscardUnknown(m)
}

var xxx_messageInfo_StoreParams proto.InternalMessageInfo

func (m *StoreParams) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *StoreParams) GetDealConfigs() []*DealConfig {
	if m != nil {
		return m.DealConfigs
	}
	return nil
}

func (m *StoreParams) GetDuration() uint64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

type StoreRequest struct {
	// Types that are valid to be assigned to Payload:
	//	*StoreRequest_StoreParams
	//	*StoreRequest_Chunk
	Payload              isStoreRequest_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *StoreRequest) Reset()         { *m = StoreRequest{} }
func (m *StoreRequest) String() string { return proto.CompactTextString(m) }
func (*StoreRequest) ProtoMessage()    {}
func (*StoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a04a6247c24d6956, []int{3}
}

func (m *StoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreRequest.Unmarshal(m, b)
}
func (m *StoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreRequest.Marshal(b, m, deterministic)
}
func (m *StoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreRequest.Merge(m, src)
}
func (m *StoreRequest) XXX_Size() int {
	return xxx_messageInfo_StoreRequest.Size(m)
}
func (m *StoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StoreRequest proto.InternalMessageInfo

type isStoreRequest_Payload interface {
	isStoreRequest_Payload()
}

type StoreRequest_StoreParams struct {
	StoreParams *StoreParams `protobuf:"bytes,1,opt,name=storeParams,proto3,oneof"`
}

type StoreRequest_Chunk struct {
	Chunk []byte `protobuf:"bytes,2,opt,name=chunk,proto3,oneof"`
}

func (*StoreRequest_StoreParams) isStoreRequest_Payload() {}

func (*StoreRequest_Chunk) isStoreRequest_Payload() {}

func (m *StoreRequest) GetPayload() isStoreRequest_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *StoreRequest) GetStoreParams() *StoreParams {
	if x, ok := m.GetPayload().(*StoreRequest_StoreParams); ok {
		return x.StoreParams
	}
	return nil
}

func (m *StoreRequest) GetChunk() []byte {
	if x, ok := m.GetPayload().(*StoreRequest_Chunk); ok {
		return x.Chunk
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*StoreRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*StoreRequest_StoreParams)(nil),
		(*StoreRequest_Chunk)(nil),
	}
}

type StoreReply struct {
	DataCid              string        `protobuf:"bytes,1,opt,name=dataCid,proto3" json:"dataCid,omitempty"`
	ProposalCids         []string      `protobuf:"bytes,2,rep,name=proposalCids,proto3" json:"proposalCids,omitempty"`
	FailedDeals          []*DealConfig `protobuf:"bytes,3,rep,name=failedDeals,proto3" json:"failedDeals,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *StoreReply) Reset()         { *m = StoreReply{} }
func (m *StoreReply) String() string { return proto.CompactTextString(m) }
func (*StoreReply) ProtoMessage()    {}
func (*StoreReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_a04a6247c24d6956, []int{4}
}

func (m *StoreReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreReply.Unmarshal(m, b)
}
func (m *StoreReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreReply.Marshal(b, m, deterministic)
}
func (m *StoreReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreReply.Merge(m, src)
}
func (m *StoreReply) XXX_Size() int {
	return xxx_messageInfo_StoreReply.Size(m)
}
func (m *StoreReply) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreReply.DiscardUnknown(m)
}

var xxx_messageInfo_StoreReply proto.InternalMessageInfo

func (m *StoreReply) GetDataCid() string {
	if m != nil {
		return m.DataCid
	}
	return ""
}

func (m *StoreReply) GetProposalCids() []string {
	if m != nil {
		return m.ProposalCids
	}
	return nil
}

func (m *StoreReply) GetFailedDeals() []*DealConfig {
	if m != nil {
		return m.FailedDeals
	}
	return nil
}

type WatchRequest struct {
	Proposals            []string `protobuf:"bytes,1,rep,name=proposals,proto3" json:"proposals,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchRequest) Reset()         { *m = WatchRequest{} }
func (m *WatchRequest) String() string { return proto.CompactTextString(m) }
func (*WatchRequest) ProtoMessage()    {}
func (*WatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a04a6247c24d6956, []int{5}
}

func (m *WatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchRequest.Unmarshal(m, b)
}
func (m *WatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchRequest.Marshal(b, m, deterministic)
}
func (m *WatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchRequest.Merge(m, src)
}
func (m *WatchRequest) XXX_Size() int {
	return xxx_messageInfo_WatchRequest.Size(m)
}
func (m *WatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchRequest proto.InternalMessageInfo

func (m *WatchRequest) GetProposals() []string {
	if m != nil {
		return m.Proposals
	}
	return nil
}

type WatchReply struct {
	DealInfo             *DealInfo `protobuf:"bytes,1,opt,name=dealInfo,proto3" json:"dealInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *WatchReply) Reset()         { *m = WatchReply{} }
func (m *WatchReply) String() string { return proto.CompactTextString(m) }
func (*WatchReply) ProtoMessage()    {}
func (*WatchReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_a04a6247c24d6956, []int{6}
}

func (m *WatchReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchReply.Unmarshal(m, b)
}
func (m *WatchReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchReply.Marshal(b, m, deterministic)
}
func (m *WatchReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchReply.Merge(m, src)
}
func (m *WatchReply) XXX_Size() int {
	return xxx_messageInfo_WatchReply.Size(m)
}
func (m *WatchReply) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchReply.DiscardUnknown(m)
}

var xxx_messageInfo_WatchReply proto.InternalMessageInfo

func (m *WatchReply) GetDealInfo() *DealInfo {
	if m != nil {
		return m.DealInfo
	}
	return nil
}

type RetrieveRequest struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Cid                  string   `protobuf:"bytes,2,opt,name=cid,proto3" json:"cid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RetrieveRequest) Reset()         { *m = RetrieveRequest{} }
func (m *RetrieveRequest) String() string { return proto.CompactTextString(m) }
func (*RetrieveRequest) ProtoMessage()    {}
func (*RetrieveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a04a6247c24d6956, []int{7}
}

func (m *RetrieveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetrieveRequest.Unmarshal(m, b)
}
func (m *RetrieveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetrieveRequest.Marshal(b, m, deterministic)
}
func (m *RetrieveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetrieveRequest.Merge(m, src)
}
func (m *RetrieveRequest) XXX_Size() int {
	return xxx_messageInfo_RetrieveRequest.Size(m)
}
func (m *RetrieveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RetrieveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RetrieveRequest proto.InternalMessageInfo

func (m *RetrieveRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *RetrieveRequest) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

type RetrieveReply struct {
	Chunk                []byte   `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RetrieveReply) Reset()         { *m = RetrieveReply{} }
func (m *RetrieveReply) String() string { return proto.CompactTextString(m) }
func (*RetrieveReply) ProtoMessage()    {}
func (*RetrieveReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_a04a6247c24d6956, []int{8}
}

func (m *RetrieveReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetrieveReply.Unmarshal(m, b)
}
func (m *RetrieveReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetrieveReply.Marshal(b, m, deterministic)
}
func (m *RetrieveReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetrieveReply.Merge(m, src)
}
func (m *RetrieveReply) XXX_Size() int {
	return xxx_messageInfo_RetrieveReply.Size(m)
}
func (m *RetrieveReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RetrieveReply.DiscardUnknown(m)
}

var xxx_messageInfo_RetrieveReply proto.InternalMessageInfo

func (m *RetrieveReply) GetChunk() []byte {
	if m != nil {
		return m.Chunk
	}
	return nil
}

func init() {
	proto.RegisterType((*DealConfig)(nil), "deals.rpc.DealConfig")
	proto.RegisterType((*DealInfo)(nil), "deals.rpc.DealInfo")
	proto.RegisterType((*StoreParams)(nil), "deals.rpc.StoreParams")
	proto.RegisterType((*StoreRequest)(nil), "deals.rpc.StoreRequest")
	proto.RegisterType((*StoreReply)(nil), "deals.rpc.StoreReply")
	proto.RegisterType((*WatchRequest)(nil), "deals.rpc.WatchRequest")
	proto.RegisterType((*WatchReply)(nil), "deals.rpc.WatchReply")
	proto.RegisterType((*RetrieveRequest)(nil), "deals.rpc.RetrieveRequest")
	proto.RegisterType((*RetrieveReply)(nil), "deals.rpc.RetrieveReply")
}

func init() { proto.RegisterFile("deals/rpc/rpc.proto", fileDescriptor_a04a6247c24d6956) }

var fileDescriptor_a04a6247c24d6956 = []byte{
	// 533 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x54, 0x4b, 0x8b, 0x13, 0x31,
	0x1c, 0xef, 0xec, 0x6c, 0xb7, 0x9d, 0xff, 0x74, 0x51, 0xb2, 0x0f, 0x43, 0x59, 0xa4, 0x04, 0x85,
	0x1e, 0xa4, 0x2b, 0xf5, 0x20, 0x28, 0x7b, 0x69, 0x2b, 0x6c, 0x2f, 0x52, 0xe2, 0x41, 0xf0, 0x16,
	0x27, 0xa9, 0x0d, 0x4e, 0x9b, 0x98, 0x4c, 0x85, 0x8a, 0x37, 0x3f, 0x9b, 0xdf, 0xc6, 0x0f, 0x21,
	0x49, 0xe7, 0x91, 0xd6, 0xc7, 0xa1, 0x90, 0xff, 0xf3, 0xf7, 0xf8, 0x0f, 0x85, 0x0b, 0x2e, 0x58,
	0x6e, 0x6f, 0x8d, 0xce, 0xdc, 0x6f, 0xa4, 0x8d, 0x2a, 0x14, 0x4a, 0x7c, 0x72, 0x64, 0x74, 0x46,
	0x26, 0x00, 0x33, 0xc1, 0xf2, 0xa9, 0xda, 0x2c, 0xe5, 0x27, 0x74, 0x09, 0xed, 0xb5, 0xdc, 0x08,
	0x83, 0xa3, 0x41, 0x34, 0x4c, 0xe8, 0x3e, 0x40, 0x8f, 0x01, 0x84, 0x56, 0xd9, 0x6a, 0x61, 0x64,
	0x26, 0xf0, 0xc9, 0x20, 0x1a, 0x9e, 0xd2, 0x20, 0x43, 0x7e, 0x45, 0xd0, 0x75, 0x4b, 0xe6, 0x9b,
	0xa5, 0x42, 0x03, 0x48, 0xb5, 0x51, 0x5a, 0x59, 0x96, 0x4f, 0x25, 0x2f, 0x17, 0x85, 0x29, 0x84,
	0xa1, 0x63, 0x0b, 0x56, 0x88, 0xf9, 0xac, 0xdc, 0x55, 0x85, 0xe8, 0x06, 0x12, 0xff, 0x7c, 0xcb,
	0xd6, 0x02, 0xc7, 0x7e, 0xb2, 0x49, 0x34, 0xe4, 0x4e, 0x43, 0x72, 0x7d, 0xe8, 0x6a, 0x29, 0x32,
	0x31, 0x9d, 0xcf, 0x70, 0x7b, 0x10, 0x0d, 0x7b, 0xb4, 0x8e, 0x11, 0x82, 0x53, 0x2b, 0xbf, 0x09,
	0x7c, 0xe6, 0x61, 0xfc, 0x1b, 0x3d, 0x81, 0x73, 0xed, 0x58, 0x2f, 0x84, 0x79, 0xe3, 0x24, 0xe0,
	0x8e, 0x2f, 0x1e, 0x26, 0xdd, 0x56, 0xbe, 0x35, 0xac, 0x90, 0x6a, 0x83, 0xbb, 0xbe, 0xa1, 0x8e,
	0xc9, 0x77, 0x48, 0xdf, 0x15, 0xca, 0x88, 0x05, 0x33, 0x6c, 0x6d, 0x9d, 0x1c, 0xc6, 0xb9, 0x11,
	0xd6, 0x96, 0x62, 0xab, 0x10, 0xbd, 0x84, 0x94, 0xd7, 0xde, 0x5a, 0x7c, 0x32, 0x88, 0x87, 0xe9,
	0xf8, 0x6a, 0x54, 0x9b, 0x3f, 0x6a, 0x9c, 0xa7, 0x61, 0xe7, 0x01, 0x7a, 0x7c, 0x84, 0xbe, 0x86,
	0x9e, 0x47, 0xa7, 0xe2, 0xcb, 0x56, 0xd8, 0x02, 0xbd, 0x82, 0xd4, 0x36, 0x6c, 0x3c, 0x85, 0x74,
	0x7c, 0x1d, 0x80, 0x04, 0x5c, 0xef, 0x5b, 0x34, 0x6c, 0x46, 0xd7, 0xd0, 0xce, 0x56, 0xdb, 0xcd,
	0x67, 0x7f, 0x87, 0xde, 0x7d, 0x8b, 0xee, 0xc3, 0x49, 0x02, 0x1d, 0xcd, 0x76, 0xb9, 0x62, 0x9c,
	0xfc, 0x88, 0x00, 0x4a, 0x3c, 0x9d, 0xef, 0x9c, 0x58, 0xce, 0x0a, 0xd6, 0x5c, 0xb6, 0x0a, 0x11,
	0x81, 0x5e, 0x70, 0xe4, 0xbd, 0xda, 0x84, 0x1e, 0xe4, 0x9c, 0x21, 0x4b, 0x26, 0x73, 0xc1, 0x9d,
	0x70, 0x8b, 0xe3, 0xff, 0x1a, 0x12, 0x74, 0x92, 0x67, 0xd0, 0x7b, 0xcf, 0x8a, 0x6c, 0x55, 0x89,
	0xbe, 0x81, 0xa4, 0x5a, 0xec, 0x24, 0x3b, 0xa4, 0x26, 0x41, 0xee, 0x00, 0xca, 0x6e, 0x47, 0xf9,
	0x16, 0xba, 0xbc, 0xfc, 0x38, 0x4b, 0x77, 0x2e, 0x8e, 0x10, 0x5d, 0x89, 0xd6, 0x4d, 0xe4, 0x0e,
	0x1e, 0x50, 0x51, 0x18, 0x29, 0xbe, 0xd6, 0x26, 0xff, 0xfb, 0xc6, 0x0f, 0x21, 0xce, 0x24, 0xf7,
	0x06, 0x26, 0xd4, 0x3d, 0xc9, 0x53, 0x38, 0x6f, 0xc6, 0x1d, 0x81, 0xcb, 0xca, 0xe5, 0xc8, 0x7f,
	0x9e, 0xfb, 0x60, 0xfc, 0x33, 0x82, 0x98, 0x2e, 0xa6, 0xe8, 0x35, 0xb4, 0xbd, 0xbf, 0xe8, 0xd1,
	0xf1, 0xcd, 0x4a, 0xf0, 0xfe, 0xd5, 0x9f, 0x05, 0x9d, 0xef, 0x48, 0x6b, 0x18, 0xb9, 0x61, 0xaf,
	0xf4, 0x60, 0x38, 0x74, 0xea, 0x60, 0xb8, 0x31, 0x85, 0xb4, 0x9e, 0x47, 0x68, 0x06, 0xdd, 0x8a,
	0x28, 0xea, 0x07, 0x6d, 0x47, 0xe2, 0xfb, 0xf8, 0xaf, 0xb5, 0x72, 0xcb, 0xa4, 0xfd, 0x21, 0x36,
	0x3a, 0xfb, 0x78, 0xe6, 0xff, 0x59, 0x5e, 0xfc, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x03, 0xef, 0xb5,
	0xa8, 0x70, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RPCClient is the client API for RPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCClient interface {
	Store(ctx context.Context, opts ...grpc.CallOption) (RPC_StoreClient, error)
	Watch(ctx context.Context, in *WatchRequest, opts ...grpc.CallOption) (RPC_WatchClient, error)
	Retrieve(ctx context.Context, in *RetrieveRequest, opts ...grpc.CallOption) (RPC_RetrieveClient, error)
}

type rPCClient struct {
	cc *grpc.ClientConn
}

func NewRPCClient(cc *grpc.ClientConn) RPCClient {
	return &rPCClient{cc}
}

func (c *rPCClient) Store(ctx context.Context, opts ...grpc.CallOption) (RPC_StoreClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RPC_serviceDesc.Streams[0], "/deals.rpc.RPC/Store", opts...)
	if err != nil {
		return nil, err
	}
	x := &rPCStoreClient{stream}
	return x, nil
}

type RPC_StoreClient interface {
	Send(*StoreRequest) error
	CloseAndRecv() (*StoreReply, error)
	grpc.ClientStream
}

type rPCStoreClient struct {
	grpc.ClientStream
}

func (x *rPCStoreClient) Send(m *StoreRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *rPCStoreClient) CloseAndRecv() (*StoreReply, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(StoreReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rPCClient) Watch(ctx context.Context, in *WatchRequest, opts ...grpc.CallOption) (RPC_WatchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RPC_serviceDesc.Streams[1], "/deals.rpc.RPC/Watch", opts...)
	if err != nil {
		return nil, err
	}
	x := &rPCWatchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RPC_WatchClient interface {
	Recv() (*WatchReply, error)
	grpc.ClientStream
}

type rPCWatchClient struct {
	grpc.ClientStream
}

func (x *rPCWatchClient) Recv() (*WatchReply, error) {
	m := new(WatchReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rPCClient) Retrieve(ctx context.Context, in *RetrieveRequest, opts ...grpc.CallOption) (RPC_RetrieveClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RPC_serviceDesc.Streams[2], "/deals.rpc.RPC/Retrieve", opts...)
	if err != nil {
		return nil, err
	}
	x := &rPCRetrieveClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RPC_RetrieveClient interface {
	Recv() (*RetrieveReply, error)
	grpc.ClientStream
}

type rPCRetrieveClient struct {
	grpc.ClientStream
}

func (x *rPCRetrieveClient) Recv() (*RetrieveReply, error) {
	m := new(RetrieveReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RPCServer is the server API for RPC service.
type RPCServer interface {
	Store(RPC_StoreServer) error
	Watch(*WatchRequest, RPC_WatchServer) error
	Retrieve(*RetrieveRequest, RPC_RetrieveServer) error
}

// UnimplementedRPCServer can be embedded to have forward compatible implementations.
type UnimplementedRPCServer struct {
}

func (*UnimplementedRPCServer) Store(srv RPC_StoreServer) error {
	return status.Errorf(codes.Unimplemented, "method Store not implemented")
}
func (*UnimplementedRPCServer) Watch(req *WatchRequest, srv RPC_WatchServer) error {
	return status.Errorf(codes.Unimplemented, "method Watch not implemented")
}
func (*UnimplementedRPCServer) Retrieve(req *RetrieveRequest, srv RPC_RetrieveServer) error {
	return status.Errorf(codes.Unimplemented, "method Retrieve not implemented")
}

func RegisterRPCServer(s *grpc.Server, srv RPCServer) {
	s.RegisterService(&_RPC_serviceDesc, srv)
}

func _RPC_Store_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RPCServer).Store(&rPCStoreServer{stream})
}

type RPC_StoreServer interface {
	SendAndClose(*StoreReply) error
	Recv() (*StoreRequest, error)
	grpc.ServerStream
}

type rPCStoreServer struct {
	grpc.ServerStream
}

func (x *rPCStoreServer) SendAndClose(m *StoreReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *rPCStoreServer) Recv() (*StoreRequest, error) {
	m := new(StoreRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _RPC_Watch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RPCServer).Watch(m, &rPCWatchServer{stream})
}

type RPC_WatchServer interface {
	Send(*WatchReply) error
	grpc.ServerStream
}

type rPCWatchServer struct {
	grpc.ServerStream
}

func (x *rPCWatchServer) Send(m *WatchReply) error {
	return x.ServerStream.SendMsg(m)
}

func _RPC_Retrieve_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RetrieveRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RPCServer).Retrieve(m, &rPCRetrieveServer{stream})
}

type RPC_RetrieveServer interface {
	Send(*RetrieveReply) error
	grpc.ServerStream
}

type rPCRetrieveServer struct {
	grpc.ServerStream
}

func (x *rPCRetrieveServer) Send(m *RetrieveReply) error {
	return x.ServerStream.SendMsg(m)
}

var _RPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "deals.rpc.RPC",
	HandlerType: (*RPCServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Store",
			Handler:       _RPC_Store_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "Watch",
			Handler:       _RPC_Watch_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Retrieve",
			Handler:       _RPC_Retrieve_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "deals/rpc/rpc.proto",
}
